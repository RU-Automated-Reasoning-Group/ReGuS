#####################
for task highway-fast-v0 with search seed 2000
#####################
for level 0
(' S ; END', 0, 0, -inf, 0, -inf)
----------------------------
Current Step: 0
Current Sketch:  WHILE(not(right_is_clear_3)) { S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(not(right_is_clear_3)) { C } ;; END with cost 0

 complete for
  WHILE(not(right_is_clear_3)) { C } ;; END
current time steps: 0  current reward: -1  current eval reward: -1
main branch cannot be entered and drop

best reward-1
 total time steps0
Total Time Used: 1.8299076557159424
Current Reward: -1
for level 0
(' S ; END', 0, 0, -1.0, 1, -1)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, -1.2, 1, -1)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(all_true) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.4, 1, -1)
----------------------------
Current Step: 1
Current Sketch:  WHILE(front_is_clear_3) { S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(front_is_clear_3) { C } ;; END with cost 0
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [1, 1, 1, 1, 1, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
current time steps: 5  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 0.19162225723266602
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 complete for
  WHILE(front_is_clear_3) { idle} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(front_is_clear_3) { C } ;; END
current time: 5.945130109786987
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 7, 6, 3, 2, 1]
all eval rewards: [-1, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(front_is_clear_3) { lane_right} ;; END
current time: 9.482800006866455
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [11, 11, 11, 11, 11, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(front_is_clear_3) { slower} ;; END
switch to robot seed 60000
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(front_is_clear_3) { slower} ;; END
current time: 15.88747763633728
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [2, 2, 3, 2, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(front_is_clear_3) { lane_left} ;; END
current time: 19.331220865249634
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, False, False, False, False]
all time steps: [11, 11, 9, 3, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 1.8666666666666667, 0.8380952380952381]

 complete for
  WHILE(front_is_clear_3) { faster} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(front_is_clear_3) { C } ;; END
------ end current search -------

[ITER] 1
searching base on  WHILE(front_is_clear_3) { lane_right} ;; END with cost -0.6095238095238096
current time steps: 135  current reward: 0.8095238095238096  current eval reward: 0.4742857142857143
current time: 23.389697074890137
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [8, 8, 7, 4, 2, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { lane_left C }  lane_right} ;; END
current time: 26.10103964805603
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [8, 8, 7, 4, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { idle C }  lane_right} ;; END
current time: 28.643744945526123
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, -1, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 4, 2, 1]
all eval rewards: [-1, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 fail for 
  WHILE(front_is_clear_3) { lane_right} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(front_is_clear_3) { lane_right} ;; END
current time: 33.34993290901184
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [8, 8, 7, 4, 2, 1]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
add if: put into queue and get cost 2 reward 1.3095238095238095 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster C }  lane_right} ;; END
current time: 35.756476402282715
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [8, 8, 7, 4, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { slower C }  lane_right} ;; END
[ITER] 2
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster C }  lane_right} ;; END with cost -0.9095238095238095
current time steps: 252  current reward: 1.3095238095238095  current eval reward: 1.4361904761904765
current time: 38.5092396736145
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [2.8095238095238098, 2.8095238095238098, 2.8190476190476192, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [9, 9, 8, 4, 2, 1]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 3 reward 1.80952380952381 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster idle C }  lane_right} ;; END
current time: 40.644842863082886
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [9, 9, 8, 4, 2, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
expand: put into queue and get cost 3 reward 1.3095238095238095 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster lane_left C }  lane_right} ;; END
current time: 42.62559700012207
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [9, 9, 8, 4, 2, 1]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
expand: put into queue and get cost 3 reward 1.3095238095238095 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster slower C }  lane_right} ;; END
current time: 44.68771696090698
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [2.8095238095238098, 2.8095238095238098, 2.8190476190476192, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [9, 9, 8, 4, 2, 1]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 3 reward 1.80952380952381 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster faster C }  lane_right} ;; END
current time: 46.64530158042908
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 4, 2, 1]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]

found but not success in all seeds with reward 2.9761904761904767 for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
switch to robot seed 10000
case 2: put into queue and get cost 2 reward 2.9761904761904767 for seed 2000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
------ end current search -------

[ITER] 3
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  lane_right} ;; END with cost -2.576190476190477
current time steps: 377  current reward: 2.9761904761904767  current eval reward: 2.474285714285714
current time: 50.97576189041138
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [4, 11, 11, 11, 2, 1]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 3 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
current time: 53.883885860443115
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [4, 11, 11, 11, 2, 1]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 3 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
current time: 56.74763798713684

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
unable to put into queue and get cost 2 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
current time: 57.3345263004303
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [4, 11, 11, 11, 2, 1]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 3 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
current time: 60.171868562698364
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [4, 11, 11, 11, 2, 1]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 3 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
current time: 62.761298418045044
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [5, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 3 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left C }  lane_right} ;; END
current time: 65.65301012992859
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [5, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 3 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle C }  lane_right} ;; END
current time: 68.53450536727905
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [5, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 3 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster C }  lane_right} ;; END
current time: 71.57437491416931
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [5, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 3 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower C }  lane_right} ;; END
[ITER] 4
searching base on  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END with cost -2.3761904761904766
current time steps: 665  current reward: 2.9761904761904767  current eval reward: 2.474285714285714
invalid if branch added and drop for now 
  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
[ITER] 5
searching base on  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END with cost -2.3761904761904766
current time steps: 665  current reward: 2.9761904761904767  current eval reward: 2.474285714285714
invalid if branch added and drop for now 
  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
[ITER] 6
searching base on  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END with cost -2.3761904761904766
current time steps: 665  current reward: 2.9761904761904767  current eval reward: 2.474285714285714
invalid if branch added and drop for now 
  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
[ITER] 7
searching base on  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END with cost -2.3761904761904766
current time steps: 665  current reward: 2.9761904761904767  current eval reward: 2.474285714285714
invalid if branch added and drop for now 
  WHILE(front_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  IF(not(right_is_clear_3)) { faster}  lane_right} ;; END
[ITER] 8
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left C }  lane_right} ;; END with cost -2.3761904761904766
current time steps: 665  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 74.85087180137634
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower C }  lane_right} ;; END
current time: 77.39758849143982
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left C }  lane_right} ;; END
current time: 80.2639639377594
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle C }  lane_right} ;; END
current time: 82.7223756313324
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} ;; END
current time: 85.14130139350891
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} ;; END
------ end current search -------

[ITER] 9
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle C }  lane_right} ;; END with cost -2.3761904761904766
current time steps: 845  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 87.63260841369629
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} ;; END
current time: 90.30538439750671
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster C }  lane_right} ;; END
current time: 92.58824491500854
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle C }  lane_right} ;; END
current time: 95.38151693344116
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right C }  lane_right} ;; END
current time: 98.16547441482544
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower C }  lane_right} ;; END
------ end current search -------

[ITER] 10
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster C }  lane_right} ;; END with cost -2.3761904761904766
current time steps: 1025  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 100.76316475868225
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle C }  lane_right} ;; END
current time: 103.39109873771667
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right C }  lane_right} ;; END
current time: 106.06368398666382
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left C }  lane_right} ;; END
current time: 108.65872812271118
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster C }  lane_right} ;; END
current time: 111.26446270942688
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower C }  lane_right} ;; END
------ end current search -------

[ITER] 11
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower C }  lane_right} ;; END with cost -2.3761904761904766
current time steps: 1205  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 114.0123815536499
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left C }  lane_right} ;; END
current time: 116.74378228187561
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower faster C }  lane_right} ;; END
current time: 119.30994296073914
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower idle C }  lane_right} ;; END
current time: 122.08156108856201
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower slower C }  lane_right} ;; END
current time: 124.70839142799377
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_right C }  lane_right} ;; END
------ end current search -------

[ITER] 12
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 1385  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 127.5130546092987
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower slower C }  lane_right} ;; END
current time: 130.09419798851013
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right C }  lane_right} ;; END
current time: 132.74267601966858
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster C }  lane_right} ;; END
current time: 135.27195072174072
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left C }  lane_right} ;; END
current time: 137.97694087028503
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle C }  lane_right} ;; END
------ end current search -------

[ITER] 13
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 1565  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 140.7116575241089
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right C }  lane_right} ;; END
current time: 143.53697609901428

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left idle C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left C }  lane_right} ;; END
current time: 143.85325837135315

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left slower C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left C }  lane_right} ;; END
current time: 144.17813873291016

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left faster C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left C }  lane_right} ;; END
current time: 144.493967294693
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 14
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 1637  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 147.20748686790466
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle C }  lane_right} ;; END
current time: 149.90082955360413

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle lane_left C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle C }  lane_right} ;; END
current time: 150.22635078430176
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower C }  lane_right} ;; END
current time: 152.94505286216736
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster C }  lane_right} ;; END
current time: 155.6811375617981

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle lane_right C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle C }  lane_right} ;; END
------ end current search -------

[ITER] 15
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 1745  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 156.00003623962402

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right faster C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} ;; END
current time: 156.32491993904114

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right idle C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} ;; END
current time: 156.63356804847717
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right C }  lane_right} ;; END
current time: 159.3364176750183

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right slower C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} ;; END
current time: 159.66182112693787
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 16
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 1817  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 162.03809022903442

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} ;; END
current time: 162.34713625907898
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster C }  lane_right} ;; END
current time: 164.78432035446167
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower C }  lane_right} ;; END
current time: 167.44724535942078

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster lane_right C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} ;; END
current time: 167.74286317825317
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle C }  lane_right} ;; END
------ end current search -------

[ITER] 17
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 1925  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 170.28193020820618
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle C }  lane_right} ;; END
current time: 172.99702501296997
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower C }  lane_right} ;; END
current time: 175.791485786438

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} ;; END
current time: 176.11015796661377

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} ;; END
current time: 176.44003129005432
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster C }  lane_right} ;; END
------ end current search -------

[ITER] 18
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2033  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 179.16038346290588

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster slower C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster C }  lane_right} ;; END
current time: 179.39602327346802
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right C }  lane_right} ;; END
current time: 181.80421566963196
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left C }  lane_right} ;; END
current time: 184.58646893501282

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster idle C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster C }  lane_right} ;; END
current time: 184.8946590423584

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster faster C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster C }  lane_right} ;; END
------ end current search -------

[ITER] 19
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2105  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 185.20829033851624

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle faster C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle C }  lane_right} ;; END
current time: 185.5113389492035
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right C }  lane_right} ;; END
current time: 188.067809343338

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle idle C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle C }  lane_right} ;; END
current time: 188.34354972839355
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left C }  lane_right} ;; END
current time: 190.87695145606995

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle slower C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle C }  lane_right} ;; END
------ end current search -------

[ITER] 20
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2177  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 191.19397163391113
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle C }  lane_right} ;; END
current time: 193.72996139526367
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster C }  lane_right} ;; END
current time: 196.346853017807

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right C }  lane_right} ;; END
current time: 196.66017079353333
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower C }  lane_right} ;; END
current time: 199.4370138645172

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right lane_right C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right C }  lane_right} ;; END
------ end current search -------

[ITER] 21
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2285  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 199.74492526054382
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle C }  lane_right} ;; END
current time: 202.4352102279663
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} ;; END
current time: 205.16707587242126
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right C }  lane_right} ;; END
current time: 207.66564202308655
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left C }  lane_right} ;; END
current time: 210.52264308929443
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower slower C }  lane_right} ;; END
------ end current search -------

[ITER] 22
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2465  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 213.40847253799438
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right C }  lane_right} ;; END
current time: 215.90236139297485

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle idle C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle C }  lane_right} ;; END
current time: 216.22870659828186

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle faster C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle C }  lane_right} ;; END
current time: 216.54948234558105

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle slower C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle C }  lane_right} ;; END
current time: 216.86919450759888
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 23
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2537  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 219.5542333126068
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster C }  lane_right} ;; END
current time: 222.23341369628906
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle C }  lane_right} ;; END
current time: 224.58424830436707

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right lane_right C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right C }  lane_right} ;; END
current time: 224.8494782447815
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower C }  lane_right} ;; END
current time: 227.3352222442627

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right C }  lane_right} ;; END
------ end current search -------

[ITER] 24
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2645  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 227.64766764640808

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left C }  lane_right} ;; END
current time: 227.96807098388672
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle C }  lane_right} ;; END
current time: 230.69465684890747

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left C }  lane_right} ;; END
current time: 231.01560759544373
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower C }  lane_right} ;; END
current time: 233.67705488204956
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster C }  lane_right} ;; END
------ end current search -------

[ITER] 25
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2753  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 236.4162621498108

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster faster C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster C }  lane_right} ;; END
current time: 236.7344787120819
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left C }  lane_right} ;; END
current time: 239.4832947254181
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right C }  lane_right} ;; END
current time: 242.19929718971252

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster idle C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster C }  lane_right} ;; END
current time: 242.54139637947083

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster slower C }  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster C }  lane_right} ;; END
------ end current search -------

[ITER] 26
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 2825  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 242.86691546440125
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left C }  lane_right} ;; END
current time: 245.4936809539795
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower slower C }  lane_right} ;; END
current time: 248.1473491191864
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster C }  lane_right} ;; END
current time: 250.6417121887207
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right C }  lane_right} ;; END
current time: 253.26871275901794
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle C }  lane_right} ;; END
------ end current search -------

[ITER] 27
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 3005  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 255.77562284469604
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left idle C }  lane_right} ;; END
current time: 258.4116451740265
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left slower C }  lane_right} ;; END
current time: 261.1139039993286
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left lane_left C }  lane_right} ;; END
current time: 263.8005805015564
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left lane_right C }  lane_right} ;; END
current time: 266.4867446422577
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left faster C }  lane_right} ;; END
------ end current search -------

[ITER] 28
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower faster C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 3185  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 268.9539089202881
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower faster faster C }  lane_right} ;; END
current time: 271.67436933517456
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower faster idle C }  lane_right} ;; END
current time: 274.3508417606354
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower faster lane_right C }  lane_right} ;; END
current time: 277.032573223114
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower faster slower C }  lane_right} ;; END
current time: 279.67037320137024
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower faster lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 29
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower idle C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 3365  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 282.4014582633972
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower idle slower C }  lane_right} ;; END
current time: 285.0976107120514
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower idle idle C }  lane_right} ;; END
current time: 287.89469861984253
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower idle lane_right C }  lane_right} ;; END
current time: 290.45056080818176
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower idle faster C }  lane_right} ;; END
current time: 292.9560465812683
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower idle lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 30
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower slower C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 3545  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 295.39802384376526

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower slower}  lane_right} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower slower}  lane_right} ;; END
current time: 296.2761776447296
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower slower lane_left C }  lane_right} ;; END
current time: 299.0368301868439
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower slower slower C }  lane_right} ;; END
current time: 301.64845848083496
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower slower faster C }  lane_right} ;; END
current time: 304.08252787590027
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower slower idle C }  lane_right} ;; END
------ end current search -------

[ITER] 31
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_right C }  lane_right} ;; END with cost -2.1761904761904765
current time steps: 3689  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 306.6592102050781
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_right lane_right C }  lane_right} ;; END
current time: 309.4611029624939
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_right lane_left C }  lane_right} ;; END
current time: 312.35144686698914
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_right slower C }  lane_right} ;; END
current time: 315.28414845466614
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_right faster C }  lane_right} ;; END
current time: 317.96166706085205
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_right idle C }  lane_right} ;; END
------ end current search -------

[ITER] 32
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 3869  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 320.73029708862305
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower slower faster C }  lane_right} ;; END
current time: 323.4367480278015
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 2, 1]
all eval rewards: [8.80952380952381, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

found but not success in all seeds with reward 2.9761904761904767 for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower slower}  lane_right} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower slower}  lane_right} ;; END
current time: 329.1972942352295
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower slower slower C }  lane_right} ;; END
current time: 331.8675026893616
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower slower lane_left C }  lane_right} ;; END
current time: 334.4491319656372
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower slower idle C }  lane_right} ;; END
------ end current search -------

[ITER] 33
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4049  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 337.06481099128723

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right idle C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right C }  lane_right} ;; END
current time: 337.35395097732544
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right lane_right C }  lane_right} ;; END
current time: 339.99467301368713

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right faster C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right C }  lane_right} ;; END
current time: 340.2971637248993
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right slower C }  lane_right} ;; END
current time: 342.8086919784546
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_right lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 34
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4157  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 345.5323531627655
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster faster C }  lane_right} ;; END
current time: 347.9787347316742
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster idle C }  lane_right} ;; END
current time: 350.5739004611969

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster C }  lane_right} ;; END
current time: 350.86345052719116

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster C }  lane_right} ;; END
current time: 351.1685149669647
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower faster slower C }  lane_right} ;; END
------ end current search -------

[ITER] 35
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4265  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 353.89447259902954

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left faster C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left C }  lane_right} ;; END
current time: 354.19892835617065
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left lane_right C }  lane_right} ;; END
current time: 357.25250029563904
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left lane_left C }  lane_right} ;; END
current time: 359.8193290233612

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left idle C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left C }  lane_right} ;; END
current time: 360.1163969039917

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left slower C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 36
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4337  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 360.4257719516754
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle faster C }  lane_right} ;; END
current time: 363.1991527080536
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle slower C }  lane_right} ;; END
current time: 365.97217893600464

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle C }  lane_right} ;; END
current time: 366.26608777046204
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle idle C }  lane_right} ;; END
current time: 368.81250047683716

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left slower idle C }  lane_right} ;; END
------ end current search -------

[ITER] 37
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4445  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 369.1049892902374
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right idle C }  lane_right} ;; END
current time: 371.4157395362854
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right faster C }  lane_right} ;; END
current time: 374.05003094673157

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right C }  lane_right} ;; END
current time: 374.3422329425812

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right C }  lane_right} ;; END
current time: 374.6350190639496
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right slower C }  lane_right} ;; END
------ end current search -------

[ITER] 38
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4553  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 377.43916177749634

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left}  lane_right} ;; END
current time: 378.6462185382843
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left idle C }  lane_right} ;; END
current time: 381.33649587631226
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left slower C }  lane_right} ;; END
current time: 384.105263710022
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left lane_left C }  lane_right} ;; END
current time: 387.1338107585907
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left faster C }  lane_right} ;; END
------ end current search -------

[ITER] 39
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4697  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 389.80269026756287
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle faster C }  lane_right} ;; END
current time: 392.5826208591461
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle slower C }  lane_right} ;; END
current time: 395.2748363018036
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle idle C }  lane_right} ;; END
current time: 397.5920042991638

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle C }  lane_right} ;; END
current time: 397.8264079093933

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle idle C }  lane_right} ;; END
------ end current search -------

[ITER] 40
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4805  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 398.04519295692444
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower slower C }  lane_right} ;; END
current time: 400.67611837387085

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower C }  lane_right} ;; END
current time: 401.0166120529175
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower faster C }  lane_right} ;; END
current time: 403.75519037246704

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower C }  lane_right} ;; END
current time: 404.05301809310913
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle slower idle C }  lane_right} ;; END
------ end current search -------

[ITER] 41
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 4913  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 406.60191082954407
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster idle C }  lane_right} ;; END
current time: 409.30518674850464

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster C }  lane_right} ;; END
current time: 409.59635615348816
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster slower C }  lane_right} ;; END
current time: 412.20533871650696
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster faster C }  lane_right} ;; END
current time: 414.53313875198364

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left idle faster C }  lane_right} ;; END
------ end current search -------

[ITER] 42
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5021  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 414.7886629104614
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right faster C }  lane_right} ;; END
current time: 417.41432189941406
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right idle C }  lane_right} ;; END
current time: 420.074410200119
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right slower C }  lane_right} ;; END
current time: 422.8160409927368

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right C }  lane_right} ;; END
current time: 423.15582299232483
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right}  lane_right} ;; END
------ end current search -------

[ITER] 43
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5172  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 428.0973994731903
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left idle C }  lane_right} ;; END
current time: 430.69556164741516
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left slower C }  lane_right} ;; END
current time: 433.46137619018555
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left faster C }  lane_right} ;; END
current time: 436.03517055511475

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  lane_right} ;; END
current time: 436.3237051963806

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 44
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5280  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 436.6170618534088
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster faster C }  lane_right} ;; END
current time: 439.22879552841187

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster C }  lane_right} ;; END
current time: 439.45787024497986
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster idle C }  lane_right} ;; END
current time: 442.1736044883728

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster C }  lane_right} ;; END
current time: 442.4930784702301
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster faster slower C }  lane_right} ;; END
------ end current search -------

[ITER] 45
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5388  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 445.2452702522278
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower faster C }  lane_right} ;; END
current time: 448.2125024795532

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower C }  lane_right} ;; END
current time: 448.5081431865692

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower C }  lane_right} ;; END
current time: 448.80520248413086
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower slower C }  lane_right} ;; END
current time: 451.58290219306946
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster slower idle C }  lane_right} ;; END
------ end current search -------

[ITER] 46
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5496  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 454.4206573963165

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle C }  lane_right} ;; END
current time: 454.7031772136688
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle slower C }  lane_right} ;; END
current time: 457.23400020599365

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle C }  lane_right} ;; END
current time: 457.5345559120178
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle idle C }  lane_right} ;; END
current time: 460.0969159603119
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { lane_left faster idle faster C }  lane_right} ;; END
------ end current search -------

[ITER] 47
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5604  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 462.57944560050964
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle slower C }  lane_right} ;; END
current time: 465.1046395301819

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle C }  lane_right} ;; END
current time: 465.37410163879395
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle faster C }  lane_right} ;; END
current time: 467.96278047561646

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle C }  lane_right} ;; END
current time: 468.25665831565857
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left idle idle C }  lane_right} ;; END
------ end current search -------

[ITER] 48
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5712  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 471.2212631702423
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower slower C }  lane_right} ;; END
current time: 474.08245730400085
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower faster C }  lane_right} ;; END
current time: 476.64033603668213

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower C }  lane_right} ;; END
current time: 476.87993264198303
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower idle C }  lane_right} ;; END
current time: 479.2757782936096

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left slower C }  lane_right} ;; END
------ end current search -------

[ITER] 49
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5820  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 479.5817198753357

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster C }  lane_right} ;; END
current time: 479.87685465812683
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster idle C }  lane_right} ;; END
current time: 482.84419417381287
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster faster C }  lane_right} ;; END
current time: 485.87238097190857
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster slower C }  lane_right} ;; END
current time: 488.699871301651

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_left faster C }  lane_right} ;; END
------ end current search -------

[ITER] 50
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 5928  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 488.99664425849915
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right}  lane_right} ;; END
current time: 493.8778336048126

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right C }  lane_right} ;; END
current time: 494.16550064086914
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right idle C }  lane_right} ;; END
current time: 496.8011791706085
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right faster C }  lane_right} ;; END
current time: 499.65826892852783
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_right slower C }  lane_right} ;; END
------ end current search -------

[ITER] 51
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6079  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 502.2898488044739
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left slower C }  lane_right} ;; END
current time: 504.9023358821869
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left faster C }  lane_right} ;; END
current time: 507.2729790210724

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left C }  lane_right} ;; END
current time: 507.5109610557556

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left C }  lane_right} ;; END
current time: 507.8090353012085
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle faster lane_left idle C }  lane_right} ;; END
------ end current search -------

[ITER] 52
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6187  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 510.4182999134064
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right idle C }  lane_right} ;; END
current time: 513.0903742313385
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right}  lane_right} ;; END
current time: 517.8730449676514
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right slower C }  lane_right} ;; END
current time: 520.5072338581085
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right faster C }  lane_right} ;; END
current time: 523.1343202590942

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_right C }  lane_right} ;; END
------ end current search -------

[ITER] 53
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6338  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 523.409419298172

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left C }  lane_right} ;; END
current time: 523.6815752983093

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left C }  lane_right} ;; END
current time: 523.9612762928009
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left slower C }  lane_right} ;; END
current time: 526.6745193004608
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left idle C }  lane_right} ;; END
current time: 529.3395662307739
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle idle lane_left faster C }  lane_right} ;; END
------ end current search -------

[ITER] 54
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6446  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 531.9915344715118
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle}  lane_right} ;; END
current time: 537.0350801944733

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle C }  lane_right} ;; END
current time: 537.3301708698273
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle slower C }  lane_right} ;; END
current time: 539.9750456809998
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle faster C }  lane_right} ;; END
current time: 542.4742438793182
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right idle idle C }  lane_right} ;; END
------ end current search -------

[ITER] 55
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6597  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 545.2054228782654
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster}  lane_right} ;; END
current time: 550.0666744709015

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster C }  lane_right} ;; END
current time: 550.3648247718811
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster idle C }  lane_right} ;; END
current time: 553.0160782337189
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster faster C }  lane_right} ;; END
current time: 555.6739187240601
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right faster slower C }  lane_right} ;; END
------ end current search -------

[ITER] 56
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6748  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 558.5183613300323

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower}  lane_right} ;; END
current time: 559.6934769153595
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower slower C }  lane_right} ;; END
current time: 562.5167601108551
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower idle C }  lane_right} ;; END
current time: 564.9004793167114

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower C }  lane_right} ;; END
current time: 565.1815373897552
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle lane_right slower faster C }  lane_right} ;; END
------ end current search -------

[ITER] 57
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6856  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 568.0200645923615
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle lane_left C }  lane_right} ;; END
current time: 570.7909183502197
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle slower C }  lane_right} ;; END
current time: 573.5368807315826

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle idle C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle C }  lane_right} ;; END
current time: 573.8394868373871

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle faster C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle C }  lane_right} ;; END
current time: 574.1401727199554
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower idle lane_right C }  lane_right} ;; END
------ end current search -------

[ITER] 58
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6964  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 576.8060719966888

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster slower C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} ;; END
current time: 577.1223857402802

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} ;; END
current time: 577.4019184112549

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster faster C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} ;; END
current time: 577.6696267127991

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster idle C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} ;; END
current time: 577.9810869693756

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} ;; END
------ end current search -------

[ITER] 59
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 6964  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 578.2477090358734

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right C }  lane_right} ;; END
current time: 578.5142986774445
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right slower C }  lane_right} ;; END
current time: 581.272566318512
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right idle C }  lane_right} ;; END
current time: 583.9745202064514

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right C }  lane_right} ;; END
current time: 584.280419588089
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_right faster C }  lane_right} ;; END
------ end current search -------

[ITER] 60
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 7072  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 586.9897358417511

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left C }  lane_right} ;; END
current time: 587.2898225784302
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left idle C }  lane_right} ;; END
current time: 590.041018486023
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left faster C }  lane_right} ;; END
current time: 592.6572742462158

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left C }  lane_right} ;; END
current time: 592.9630780220032
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower lane_left slower C }  lane_right} ;; END
------ end current search -------

[ITER] 61
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 7180  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 595.7547068595886
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower slower faster C }  lane_right} ;; END
current time: 599.0906386375427
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 2, 1]
all eval rewards: [8.80952380952381, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

found but not success in all seeds with reward 2.9761904761904767 for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower slower}  lane_right} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower slower}  lane_right} ;; END
current time: 604.4595427513123
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower slower lane_left C }  lane_right} ;; END
current time: 606.8601019382477
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower slower slower C }  lane_right} ;; END
current time: 609.3294763565063
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { idle slower slower idle C }  lane_right} ;; END
------ end current search -------

[ITER] 62
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 7360  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 612.1709942817688
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right slower C }  lane_right} ;; END
current time: 615.1400663852692
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right faster C }  lane_right} ;; END
current time: 617.7711961269379
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right}  lane_right} ;; END
current time: 622.7168092727661

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right C }  lane_right} ;; END
current time: 622.998024225235
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_right idle C }  lane_right} ;; END
------ end current search -------

[ITER] 63
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 7511  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 625.6280221939087
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left faster C }  lane_right} ;; END
current time: 628.1633651256561
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left idle C }  lane_right} ;; END
current time: 630.9287204742432

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left C }  lane_right} ;; END
current time: 631.1965038776398
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left slower C }  lane_right} ;; END
current time: 633.8014504909515

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster idle lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 64
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 7619  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 634.1009261608124

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster C }  lane_right} ;; END
current time: 634.3867580890656
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster faster C }  lane_right} ;; END
current time: 637.0692155361176
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster idle C }  lane_right} ;; END
current time: 639.5216932296753
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster slower C }  lane_right} ;; END
current time: 642.3450112342834
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right faster}  lane_right} ;; END
------ end current search -------

[ITER] 65
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 7770  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 647.1878159046173
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle faster C }  lane_right} ;; END
current time: 649.731297492981
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle idle C }  lane_right} ;; END
current time: 652.4263873100281
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle slower C }  lane_right} ;; END
current time: 655.2235403060913

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle C }  lane_right} ;; END
current time: 655.5183374881744
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right idle}  lane_right} ;; END
------ end current search -------

[ITER] 66
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 7921  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 659.9337365627289
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower slower C }  lane_right} ;; END
current time: 662.3463296890259
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower idle C }  lane_right} ;; END
current time: 664.9880719184875
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower faster C }  lane_right} ;; END
current time: 667.7481188774109

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower C }  lane_right} ;; END
current time: 668.0445482730865

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_right slower}  lane_right} ;; END
------ end current search -------

[ITER] 67
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8029  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 669.3021664619446
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle idle C }  lane_right} ;; END
current time: 672.0953373908997
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle faster C }  lane_right} ;; END
current time: 674.7101612091064

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle C }  lane_right} ;; END
current time: 674.9978666305542

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle C }  lane_right} ;; END
current time: 675.2878458499908
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left idle slower C }  lane_right} ;; END
------ end current search -------

[ITER] 68
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8137  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 677.9781777858734
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower idle C }  lane_right} ;; END
current time: 680.7863490581512

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower C }  lane_right} ;; END
current time: 681.1055538654327
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower slower C }  lane_right} ;; END
current time: 683.8287589550018
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower faster C }  lane_right} ;; END
current time: 686.6886959075928

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left slower C }  lane_right} ;; END
------ end current search -------

[ITER] 69
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8245  current reward: 2.9761904761904767  current eval reward: 2.8361904761904766
current time: 687.0124309062958

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster C }  lane_right} ;; END
current time: 687.3114850521088

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster C }  lane_right} ;; END
current time: 687.627955198288
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster slower C }  lane_right} ;; END
current time: 690.3444938659668
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster faster C }  lane_right} ;; END
current time: 693.085949420929
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster lane_left faster idle C }  lane_right} ;; END
------ end current search -------

[ITER] 70
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8353  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 695.759236574173

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left C }  lane_right} ;; END
current time: 696.0603120326996
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left faster C }  lane_right} ;; END
current time: 699.1443936824799
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left slower C }  lane_right} ;; END
current time: 701.8683104515076
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left idle C }  lane_right} ;; END
current time: 704.557519197464

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 71
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8461  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 704.8378643989563
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right slower C }  lane_right} ;; END
current time: 707.3117938041687
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right idle C }  lane_right} ;; END
current time: 709.7303085327148
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 4.80952380952381, 4.80952380952381, 5.81904761904762, -1, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 5, 5]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right}  lane_right} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right}  lane_right} ;; END
current time: 714.5020172595978

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right C }  lane_right} ;; END
current time: 714.7984771728516
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster faster lane_right faster C }  lane_right} ;; END
------ end current search -------

[ITER] 72
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8612  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 717.5390992164612
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left faster C }  lane_right} ;; END
current time: 720.2657008171082
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left slower C }  lane_right} ;; END
current time: 723.0145969390869

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left C }  lane_right} ;; END
current time: 723.2933223247528

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left C }  lane_right} ;; END
current time: 723.5907914638519
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_left idle C }  lane_right} ;; END
------ end current search -------

[ITER] 73
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8720  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 726.269987821579
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower slower lane_left C }  lane_right} ;; END
current time: 728.8714778423309
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [11, 11, 11, 11, 2, 1]
all eval rewards: [8.80952380952381, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]

found but not success in all seeds with reward 2.9761904761904767 for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower slower}  lane_right} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower slower}  lane_right} ;; END
current time: 734.3060245513916
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower slower slower C }  lane_right} ;; END
current time: 736.9731307029724
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower slower idle C }  lane_right} ;; END
current time: 739.774177312851
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower slower faster C }  lane_right} ;; END
------ end current search -------

[ITER] 74
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8900  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 742.6170904636383

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster slower C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster C }  lane_right} ;; END
current time: 742.9493579864502

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster idle C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster C }  lane_right} ;; END
current time: 743.2696189880371

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster C }  lane_right} ;; END
current time: 743.5713295936584

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster faster C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster C }  lane_right} ;; END
current time: 743.8576138019562

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower faster C }  lane_right} ;; END
------ end current search -------

[ITER] 75
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 8900  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 744.1623682975769

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right lane_left C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right C }  lane_right} ;; END
current time: 744.4728038311005

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right lane_right C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right C }  lane_right} ;; END
current time: 744.7577092647552
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right idle C }  lane_right} ;; END
current time: 747.4140386581421
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right faster C }  lane_right} ;; END
current time: 750.0809409618378
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower lane_right slower C }  lane_right} ;; END
------ end current search -------

[ITER] 76
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 9008  current reward: 2.9761904761904767  current eval reward: 2.062857142857143
current time: 752.6181654930115
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle lane_right C }  lane_right} ;; END
current time: 755.1883411407471
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle slower C }  lane_right} ;; END
current time: 757.8359415531158

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle faster C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle C }  lane_right} ;; END
current time: 758.0819277763367

 fail for 
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle idle C }  lane_right} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle C }  lane_right} ;; END
current time: 758.3546645641327
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { faster slower idle lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 77
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left idle C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 9116  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 760.6468875408173
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left idle idle C }  lane_right} ;; END
current time: 763.3522119522095
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left idle slower C }  lane_right} ;; END
current time: 765.9324326515198
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left idle lane_left C }  lane_right} ;; END
current time: 768.8282015323639
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left idle faster C }  lane_right} ;; END
current time: 771.5633437633514
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left idle lane_right C }  lane_right} ;; END
------ end current search -------

[ITER] 78
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left slower C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 9296  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 774.1775858402252
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left slower slower C }  lane_right} ;; END
current time: 776.7351367473602
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left slower idle C }  lane_right} ;; END
current time: 779.4410333633423
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [9, 11, 11, 11, 2, 1]
all eval rewards: [-1, 6.857142857142858, 0.8095238095238096, -1, 2.8380952380952382]
case 2: put into queue and get cost 5 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left slower}  lane_right} ;; END
current time: 783.7266790866852
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left slower faster C }  lane_right} ;; END
current time: 786.3046290874481
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left slower lane_left C }  lane_right} ;; END
------ end current search -------

[ITER] 79
searching base on  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left lane_left C }  lane_right} ;; END with cost -1.9761904761904767
current time steps: 9476  current reward: 2.9761904761904767  current eval reward: 2.6361904761904764
current time: 789.0843181610107
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left lane_left slower C }  lane_right} ;; END
current time: 791.8276610374451
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left lane_left lane_left C }  lane_right} ;; END
current time: 794.613529920578
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left lane_left lane_right C }  lane_right} ;; END
current time: 797.2302196025848
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left lane_left faster C }  lane_right} ;; END
current time: 799.817037820816
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 4.80952380952381, 4.80952380952381, 5.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 11, 11, 11, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 0.8095238095238096, 1.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 6 reward 2.9761904761904767 for seed 10000 for
  WHILE(front_is_clear_3) { IF(not(right_is_clear_3)) { faster}  IF(not(front_is_clear_3)) { slower lane_left lane_left idle C }  lane_right} ;; END
------ end current search -------

best reward2.9761904761904767
 total time steps9476
Total Time Used: 806.2414348125458
Current Reward: 2.9761904761904767
for level 0
(' S ; END', 0, 0, 2.9761904761904767, 2, 2.9761904761904767)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 2.893931478442024, 2, 2.9761904761904767)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.7427013984220165, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(all_true) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.2334890777684604, 1, -1)
----------------------------
Current Step: 2
Current Sketch:  WHILE(not(left_is_clear_3)) { S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(not(left_is_clear_3)) { C } ;; END with cost 0

 complete for
  WHILE(not(left_is_clear_3)) { C } ;; END
current time steps: 0  current reward: -1  current eval reward: -1
main branch cannot be entered and drop

best reward-1
 total time steps9476
Total Time Used: 808.1880142688751
Current Reward: -1
for level 0
(' S ; END', 0, 0, 2.9761904761904767, 3, 2.9761904761904767)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 2.897220075251649, 3, 2.9761904761904767)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.7858198909841176, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(all_true) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -1.1903705852063589, 1, -1)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.1903705852063589, 1, -1)
----------------------------
Current Step: 3
Current Sketch:  WHILE(not(front_is_clear_3)) { S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(not(front_is_clear_3)) { C } ;; END with cost 0

 complete for
  WHILE(not(front_is_clear_3)) { C } ;; END
current time steps: 0  current reward: -1  current eval reward: -1
main branch cannot be entered and drop

best reward-1
 total time steps9476
Total Time Used: 810.210072517395
Current Reward: -1
for level 0
(' S ; END', 0, 0, 2.9761904761904767, 4, 2.9761904761904767)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 2.893931478442024, 4, 2.9761904761904767)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.811672480693572, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(all_true) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -1.164517995496905, 1, -1)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -1.164517995496905, 1, -1)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.164517995496905, 1, -1)
----------------------------
Current Step: 4
Current Sketch:  WHILE(all_true) { S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(all_true) { C } ;; END with cost 0
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [1, 1, 1, 1, 1, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
current time steps: 5  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 0.2397170066833496
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [3, 3, 5, 3, 3, 1]
all eval rewards: [-1, -1, 0.8095238095238096, 0.8666666666666667, -1]
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { lane_left idle} ;; END
current time: 4.233974933624268
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 3, 1]
all eval rewards: [-1, -1, -1, -1, -1]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { lane_right idle} ;; END
switch to robot seed 10000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { lane_right idle} ;; END
current time: 9.224401712417603
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [11, 11, 11, 11, 11, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { slower idle} ;; END
switch to robot seed 60000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { slower idle} ;; END
current time: 15.268615961074829
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, -1, 0.7999999999999999]
all no_fuel: [True, True, False, False, False, False]
all time steps: [11, 11, 9, 3, 3, 1]
all eval rewards: [-1, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { faster idle} ;; END
unable to put into queue and get cost 2 reward -1 for seed 2000 for
  WHILE(all_true) { C } ;; END
current time: 19.132584810256958
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { idle idle} ;; END
switch to robot seed 10000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { idle idle} ;; END
------ end current search -------

[ITER] 1
searching base on  WHILE(all_true) { lane_left idle} ;; END with cost -0.4095238095238096
current time steps: 154  current reward: 0.8095238095238096  current eval reward: -0.2647619047619047
current time: 24.973209857940674
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, True]
all time steps: [11, 11, 11, 7, 3, 11]
all eval rewards: [-1, -1, 0.8095238095238096, 0.8666666666666667, -1]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { lane_left idle} ;; END
switch to robot seed 10000
case one applied: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for 
  WHILE(all_true) { lane_left idle} ;; END
current time: 30.96720600128174
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [4, 4, 6, 4, 3, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { idle C }  lane_left idle} ;; END
current time: 33.35513114929199
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [4, 4, 6, 4, 3, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, -1]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { lane_right C }  lane_left idle} ;; END
current time: 36.04856753349304
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [4, 4, 6, 4, 3, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { faster C }  lane_left idle} ;; END
current time: 38.52455735206604
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [4, 4, 6, 4, 3, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { slower C }  lane_left idle} ;; END
current time: 41.61991786956787
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [-1, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, -1]
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 20
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [-1, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, -1]
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 30
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, -1, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [31, 31, 31, 22, 31, 31]
all eval rewards: [-1, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, -1]

 fail for 
  WHILE(all_true) { IF(left_is_clear_3) { lane_left}  idle} ;; END
unable to put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { IF(left_is_clear_3) { lane_left}  idle} ;; END
[ITER] 2
go to next goal: 20
searching base on  WHILE(all_true) { lane_right idle} ;; END with cost -0.4095238095238096
current time steps: 579  current reward: 0.8095238095238096  current eval reward: -1.0
current time: 68.102867603302
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { lane_left C }  lane_right idle} ;; END
current time: 71.61116456985474
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { idle C }  lane_right idle} ;; END
current time: 74.80437517166138

 fail for 
  WHILE(all_true) { lane_right idle} ;; END
unable to put into queue and get cost 2 reward -1 for seed 10000 for
  WHILE(all_true) { lane_right idle} ;; END
current time: 75.5284366607666
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
add if: put into queue and get cost 3 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster C }  lane_right idle} ;; END
current time: 79.07099676132202
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { slower C }  lane_right idle} ;; END
current time: 82.51314187049866
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 21, 21, 21, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]
case 3: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(right_is_clear_3) { lane_right}  idle} ;; END
[ITER] 3
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { faster C }  lane_right idle} ;; END with cost -0.7095238095238094
current time steps: 822  current reward: 1.3095238095238095  current eval reward: 1.4361904761904765
current time: 89.67532896995544
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster slower C }  lane_right idle} ;; END
current time: 92.57486867904663
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster lane_left C }  lane_right idle} ;; END
current time: 95.7845675945282
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 2.857142857142857, -1, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster lane_right C }  lane_right idle} ;; END
current time: 98.99836206436157
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [7, 21, 21, 17, 3, 1]
all eval rewards: [-1, -1, -1, -1, -1]
case 2: put into queue and get cost 3 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 104.94123840332031
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster faster C }  lane_right idle} ;; END
------ end current search -------

[ITER] 4
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END with cost -3.876190476190477
current time steps: 1061  current reward: 4.476190476190477  current eval reward: -1.0
current time: 107.82463669776917
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [8, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 4 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 113.0933997631073

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 114.17315125465393
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 8.80952380952381, 8.80952380952381, 6.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [15, 21, 21, 17, 21, 21]
all eval rewards: [-1, -1, -1, -1, -1]
case one applied: put into queue and get cost 3 reward 6.142857142857143 for seed 10000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 121.00938105583191

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 122.1033878326416

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 123.20919251441956
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [8, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, -1, 0.8380952380952381]
add if: put into queue and get cost 4 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 127.62226295471191

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { idle C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 128.65302562713623

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 129.7994885444641

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 130.95431327819824

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(front_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(front_is_clear_3) { lane_right} } idle} ;; END
current time: 132.01600337028503

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(left_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(left_is_clear_3) { lane_right} } idle} ;; END
[ITER] 5
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END with cost -5.542857142857143
current time steps: 1288  current reward: 6.142857142857143  current eval reward: -1.0
current time: 133.11406564712524
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 8.80952380952381, 8.80952380952381, 6.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [16, 21, 21, 18, 21, 21]
all eval rewards: [2.8095238095238098, 6.857142857142858, 6.80952380952381, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 4 reward 6.142857142857143 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 140.46734237670898
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [16, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
add if: put into queue and get cost 4 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
current time: 147.56873083114624
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [16, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
add if: put into queue and get cost 4 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
current time: 154.9015760421753

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 157.17417979240417
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 8.80952380952381, 8.80952380952381, 6.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [16, 21, 21, 18, 21, 21]
all eval rewards: [2.8095238095238098, 6.857142857142858, 6.80952380952381, -1, 2.8380952380952382]
add if: put into queue and get cost 4 reward 6.142857142857143 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 164.35368371009827

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(front_is_clear_3) { faster} } ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(front_is_clear_3) { faster} } ELSE { lane_right} idle} ;; END
[ITER] 6
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END with cost -5.676190476190477
current time steps: 1696  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 166.54248309135437

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
current time: 166.84910345077515

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
current time: 167.17122149467468

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 169.5612335205078
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [17, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 175.21102237701416
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [17, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 7
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END with cost -5.676190476190477
current time steps: 1900  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 180.29895997047424

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 182.77622771263123

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
current time: 183.0744388103485
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [17, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 188.92253017425537
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [17, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 194.8447539806366

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 8
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 2104  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 195.15474581718445
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 200.77384972572327
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left faster C }  faster} ELSE { lane_right} idle} ;; END
current time: 206.6713547706604

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 206.99002265930176
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [-1, -1, 10.80952380952381, -1, -1]
case 2: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 215.18134427070618
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left lane_left C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 9
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 2512  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 220.96417260169983
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 226.71988725662231

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 226.9460928440094
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 233.08500003814697

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 233.3933084011078

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower} ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 10
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 2716  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 235.98321175575256

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 236.272442817688

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 236.5801272392273

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 239.2007019519806
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 245.15489983558655
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower lane_left C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 11
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 2920  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 250.2177619934082
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 255.97389435768127
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left faster C }  faster} ELSE { lane_right} idle} ;; END
current time: 261.4985477924347
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 267.552610874176
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [-1, -1, 10.80952380952381, -1, -1]
case 2: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 275.89890575408936

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 12
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 3328  current reward: 6.476190476190477  current eval reward: 1.361904761904762
current time: 276.0665113925934
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 18.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 284.92483282089233

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 287.5546975135803
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [4.80952380952381, 19.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.642857142857143 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 295.92906165122986

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 298.53704380989075
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 18.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 307.49226808547974

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle}  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle}  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 310.36547112464905

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 13
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 3634  current reward: 6.476190476190477  current eval reward: 1.361904761904762
current time: 312.8998098373413
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 18.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 321.2862513065338

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 323.8867633342743
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [-1, -1, 10.80952380952381, -1, -1]
case one applied: put into queue and get cost 5 reward 6.642857142857143 for seed 10000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 332.18153834342957

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 334.81532979011536
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 18.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 343.381356716156
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [-1, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 6.476190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right}  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
case 3: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right}  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 354.31197214126587

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 14
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.642857142857143
current time steps: 4042  current reward: 6.642857142857143  current eval reward: 1.361904761904762
current time: 357.0280342102051

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 359.84402680397034
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(front_is_clear_3) { idle C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 368.51511311531067
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(front_is_clear_3) { lane_right C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 377.2267873287201
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(front_is_clear_3) { faster C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 386.08007550239563
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [4.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.642857142857143 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(front_is_clear_3) { slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 395.075745344162
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]
case 3: put into queue and get cost 5 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 15
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.80952380952381
current time steps: 4552  current reward: 6.80952380952381  current eval reward: 4.923809523809524
current time: 403.68554639816284
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, -1, 7.80952380952381, -1, -1]

found but not success in all seeds with reward 6.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 414.7353060245514
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]

found but not success in all seeds with reward 6.976190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
add if: put into queue and get cost 6 reward 6.976190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 425.7935781478882
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [6.80952380952381, 0.8571428571428571, -1, -1, -1]

found but not success in all seeds with reward 6.976190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
add if: put into queue and get cost 6 reward 6.976190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 437.0431077480316
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 6.976190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
case one applied: put into queue and get cost 5 reward 6.976190476190477 for seed 10000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 448.525239944458
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]

found but not success in all seeds with reward 6.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 460.09617018699646
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [15.80952380952381, -1, 11.80952380952381, -1, -1]

found but not success in all seeds with reward 6.976190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
case 3: put into queue and get cost 5 reward 6.976190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
[ITER] 16
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.976190476190477
current time steps: 5164  current reward: 6.976190476190477  current eval reward: 4.923809523809524
current time: 471.8432102203369
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]
self.seed = 2000, seed = 70000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [16.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 6.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 27, 31]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward 6.976190476190477 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 492.02110505104065
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [19, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, 13.857142857142858, 8.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 500.6215753555298
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [19, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, 13.857142857142858, 8.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 509.4992530345917
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [19, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, 13.857142857142858, 8.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 517.6935954093933
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [19, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, 12.857142857142858, 7.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.976190476190477 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { slower C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 526.5858674049377

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 17
go to next goal: 30
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END with cost -5.976190476190477
current time steps: 5840  current reward: 6.976190476190477  current eval reward: 4.923809523809524
current time: 529.4618310928345
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [16.81904761904762, 18.80952380952381, 18.80952380952381, 15.80952380952381, -1, 7.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 26, 31]
all eval rewards: [15.80952380952381, -1, 11.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 541.5442526340485
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 31, 31, 31, 26, 25]
all eval rewards: [16.80952380952381, 6.857142857142858, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 551.8480713367462
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 31, 31, 31, 26, 25]
all eval rewards: [16.80952380952381, 6.857142857142858, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 562.3116118907928
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 31, 31, 31, 26, 25]
all eval rewards: [16.80952380952381, 6.857142857142858, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 572.5723457336426
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 18.80952380952381, 18.80952380952381, 15.80952380952381, -1, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 31, 31, 31, 26, 25]
all eval rewards: [15.80952380952381, 5.857142857142858, 7.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { slower C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { slower C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 582.901330947876

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
[ITER] 18
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.942857142857143
current time steps: 6566  current reward: 7.142857142857143  current eval reward: 7.495238095238096
current time: 585.4424622058868

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 585.701318025589
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle slower C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 592.5274033546448

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 592.7620491981506
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle lane_left C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 599.881566286087

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 19
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.942857142857143
current time steps: 6858  current reward: 7.142857142857143  current eval reward: 7.495238095238096
current time: 602.3128497600555
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right lane_left C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 609.1071543693542

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 609.3792428970337

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 609.6569623947144

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 612.0734794139862
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right slower C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 20
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.942857142857143
current time steps: 7150  current reward: 7.142857142857143  current eval reward: 7.495238095238096
current time: 619.2147033214569

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 621.7175443172455

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 622.0030605792999

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 622.2929916381836
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster slower C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 630.1440980434418
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster lane_left C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 21
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END with cost -5.776190476190477
current time steps: 7442  current reward: 6.976190476190477  current eval reward: 2.6952380952380954
current time: 636.3062653541565
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [16.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 3.8]
all no_fuel: [True, True, True, False, False, False]
all time steps: [31, 31, 31, 21, 24, 27]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]

found but not success in all seeds with reward 12.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 10000
case one applied: put into queue and get cost 6 reward 12.80952380952381 for seed 70000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 648.4807732105255
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 4.8]
all no_fuel: [False, True, True, False, False, False]
all time steps: [19, 31, 31, 21, 24, 25]
all eval rewards: [6.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 11.642857142857144 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 658.0716371536255
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 4.8]
all no_fuel: [False, True, True, False, False, False]
all time steps: [19, 31, 31, 21, 24, 25]
all eval rewards: [6.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 11.642857142857144 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 667.1853425502777
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 4.8]
all no_fuel: [False, True, True, False, False, False]
all time steps: [19, 31, 31, 21, 24, 25]
all eval rewards: [6.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 11.642857142857144 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 675.6646070480347
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 3.8]
all no_fuel: [False, True, True, False, False, False]
all time steps: [19, 31, 31, 21, 24, 25]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 11.30952380952381 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { slower C }  lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 685.0856189727783

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
[ITER] 22
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END with cost -11.609523809523811
current time steps: 8104  current reward: 12.80952380952381  current eval reward: 2.6952380952380954
current time: 687.9233343601227
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [16.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, -1, 6.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 27, 31]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 700.0236849784851
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [7.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 11.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [22, 31, 31, 31, 24, 27]
all eval rewards: [7.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 12.976190476190476 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 706.9490678310394
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [15.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 11.80952380952381, 3.8]
all no_fuel: [True, True, True, True, False, False]
all time steps: [31, 31, 31, 31, 24, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]

found but not success in all seeds with reward 14.30952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 6 reward 14.30952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 721.4252488613129
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 11.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [22, 31, 31, 31, 24, 27]
all eval rewards: [6.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 12.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 729.3200187683105
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 11.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [22, 31, 31, 31, 24, 27]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 12.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 23
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -13.109523809523811
current time steps: 8831  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 736.2416200637817
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [24, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 747.3023550510406
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [24, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 758.6329853534698
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [24, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 769.070303440094

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 772.7813074588776
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [24, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 783.251015663147
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 793.6595199108124
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 804.9562208652496
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 815.9391720294952
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 827.1021018028259
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [10.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 5.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [24, 31, 31, 31, 21, 27]
all eval rewards: [5.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 12.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 837.5716214179993
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 6.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [24, 31, 31, 31, 21, 27]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 848.0584924221039
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 6.80952380952381, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [24, 31, 31, 31, 21, 27]
all eval rewards: [6.80952380952381, 0.8571428571428571, -1, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 858.907975435257
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [10.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 5.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [24, 31, 31, 31, 21, 27]
all eval rewards: [5.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 12.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 868.7875390052795
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 880.1213743686676
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 891.3534016609192
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 902.9166743755341
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 914.8575370311737

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(front_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(front_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 918.7659313678741

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
[ITER] 24
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.076190476190476
current time steps: 11207  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 922.4593119621277

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 922.7496452331543
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 931.2790381908417
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 938.990483045578

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 942.7463853359222
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 25
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.076190476190476
current time steps: 11660  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 951.2615921497345
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 958.9771008491516
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 966.9119303226471
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 975.2657785415649

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 979.1372983455658

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 26
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.076190476190476
current time steps: 12113  current reward: 14.476190476190476  current eval reward: 4.495238095238095
current time: 979.4528396129608
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 1.8571428571428572, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 987.382018327713
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 995.2781200408936
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1003.3978838920593

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1003.6962432861328

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 27
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.076190476190476
current time steps: 12566  current reward: 14.476190476190476  current eval reward: 4.695238095238095
current time: 1007.6730906963348
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1016.0734164714813
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1023.9369287490845
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 1.8571428571428572, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1031.8185217380524

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1035.8287680149078

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 28
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13019  current reward: 14.642857142857144  current eval reward: 4.523809523809524
current time: 1036.0558724403381

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1036.3276777267456

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1036.566309928894

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1036.8528201580048

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1040.8300592899323

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 29
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13019  current reward: 14.642857142857144  current eval reward: 4.523809523809524
current time: 1041.0568041801453

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1041.3386957645416

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1041.60790681839

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1045.2939414978027

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1045.506722688675

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 30
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13019  current reward: 14.642857142857144  current eval reward: 4.523809523809524
current time: 1045.7243247032166

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1045.9442558288574

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1046.2488753795624

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1046.5376937389374

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1050.4978094100952

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 31
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13019  current reward: 14.642857142857144  current eval reward: 4.523809523809524
current time: 1050.795909166336

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1051.0764164924622

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1051.3725802898407

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1051.6669902801514

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1055.6907052993774

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 32
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13019  current reward: 14.642857142857144  current eval reward: 4.695238095238095
current time: 1056.0011014938354

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1056.2962381839752

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1056.5954265594482

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1056.8920876979828

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1057.1637592315674

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 33
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13019  current reward: 14.642857142857144  current eval reward: 4.695238095238095
current time: 1060.838128566742

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1061.0608785152435

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1064.8495664596558

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1065.1503093242645

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1065.446141242981

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 34
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13019  current reward: 14.642857142857144  current eval reward: 4.895238095238096
current time: 1065.7595736980438

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1069.4961965084076

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1069.7442293167114

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1069.9740002155304

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1070.237590789795

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 35
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13019  current reward: 14.642857142857144  current eval reward: 5.095238095238096
current time: 1070.548856496811

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1070.941393852234

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1074.7409689426422

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1075.041491508484

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1075.323413848877

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 36
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13019  current reward: 14.30952380952381  current eval reward: 4.523809523809524
invalid if branch added and drop for now 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
[ITER] 37
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13019  current reward: 14.30952380952381  current eval reward: 4.523809523809524
invalid if branch added and drop for now 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
[ITER] 38
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13019  current reward: 14.30952380952381  current eval reward: 4.523809523809524
invalid if branch added and drop for now 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
[ITER] 39
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13019  current reward: 14.30952380952381  current eval reward: 4.523809523809524
invalid if branch added and drop for now 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
[ITER] 40
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13019  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1075.6229903697968

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left}  faster}} ELSE { lane_right} idle} ;; END
current time: 1079.4265747070312

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1083.056864976883
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1091.3795080184937
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1099.7634937763214
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 41
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13472  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1108.2024414539337
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1116.6563513278961
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1124.8982212543488
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1132.947339296341

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1137.1505913734436
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 42
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 14076  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1145.1141493320465
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1153.2374923229218

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left}  faster}} ELSE { lane_right} idle} ;; END
current time: 1156.9730551242828

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1160.853260755539
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1169.2431373596191
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 43
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 14529  current reward: 14.30952380952381  current eval reward: 4.495238095238095
current time: 1177.35910654068
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1185.2612199783325

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1189.247883796692
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1197.8644671440125
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1205.9498617649078
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 44
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15133  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1214.3510601520538

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1218.354710817337
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1226.4552867412567

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1226.7517302036285

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1227.0440576076508

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 45
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15284  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1227.3050875663757

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1231.162575006485

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1231.4469532966614

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1231.7208361625671
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1239.9199006557465

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 46
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15435  current reward: 14.476190476190476  current eval reward: 4.495238095238095
current time: 1240.2230668067932
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1248.0479946136475

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1248.3457260131836

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1248.6356582641602

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1248.9274263381958

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 47
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15586  current reward: 14.476190476190476  current eval reward: 4.695238095238095
current time: 1252.789395570755

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1253.0656514167786
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1261.352926492691

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1261.6679451465607

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1261.9688293933868

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 48
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15737  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1265.9779360294342

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1270.0321078300476

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1270.3266413211823

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1270.6168220043182

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1270.9061431884766

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 49
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15737  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1271.1772096157074

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1271.4195356369019

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1271.6733183860779

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1271.9040851593018

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1275.4563431739807

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 50
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15737  current reward: 14.476190476190476  current eval reward: 4.123809523809524
current time: 1275.7399361133575

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1276.0197291374207

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1276.3154056072235

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1280.2436728477478

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1280.5384058952332

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 51
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15737  current reward: 14.476190476190476  current eval reward: 4.495238095238095
current time: 1280.7842826843262

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1281.0766150951385

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1281.3615374565125

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1281.6658067703247

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1281.962984085083

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 52
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 15737  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1285.8342192173004
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1294.2965219020844
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1302.6487438678741
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1310.979700088501
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
case 2: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1322.7117793560028

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 53
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 16341  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1323.0112373828888

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower}  faster}} ELSE { lane_right} idle} ;; END
current time: 1326.902683019638

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1330.444041967392
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1338.4881868362427
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1346.9553623199463

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 54
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 16643  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1347.2494597434998
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1356.1635978221893
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1364.6249306201935
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1372.5515022277832

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1376.6810536384583
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 55
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 17247  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1384.3797171115875
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1392.9287192821503
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1401.0814838409424
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1409.2670407295227

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1413.1183474063873

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left}  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 56
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 17700  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1417.3192012310028
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1425.3615877628326

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1429.6229531764984
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1437.552901506424
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1445.2985191345215
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 57
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 18304  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1453.1966609954834

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1453.4916298389435
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1461.7457377910614
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1470.0423521995544

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower}  faster}} ELSE { lane_right} idle} ;; END
current time: 1473.9922013282776

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 58
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 18606  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1477.88809132576
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1485.984395980835
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1494.3486020565033
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
case 2: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1506.4018795490265
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1514.2238471508026

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 59
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 19210  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1514.5259733200073
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1522.7825384140015
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1530.9422073364258
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1539.2692749500275

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1543.5587191581726

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left}  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 60
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 19663  current reward: 14.30952380952381  current eval reward: 4.495238095238095
current time: 1547.4860303401947

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1552.1271123886108
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1559.6069836616516
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1567.4582161903381
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1575.159990787506
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 61
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 20267  current reward: 14.30952380952381  current eval reward: 4.495238095238095
current time: 1582.9178671836853
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1591.059164762497
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1599.6192729473114
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1608.008887052536

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1611.8940997123718
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 62
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 20871  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1619.5985519886017
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(left_is_clear_3)) { lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1631.7136118412018
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(left_is_clear_3)) { idle C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1643.1232974529266
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(left_is_clear_3)) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1655.568947315216
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 5.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]

 no fuel with reward 14.642857142857144 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1668.3230285644531
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(left_is_clear_3)) { slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1680.9223103523254
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(right_is_clear_3) { lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1692.8141329288483
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(right_is_clear_3) { idle C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1704.5711665153503
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 8.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1716.3332254886627
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(right_is_clear_3) { slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1728.3069381713867
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [True, True, True, True, True, False]
all time steps: [31, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 14.30952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END
switch to robot seed 60000
case 3: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END
current time: 1744.3562853336334
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 6.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.80952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
[ITER] 63
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 22540  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1756.3693823814392
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
case one applied: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1768.4024620056152
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(front_is_clear_3) { idle C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1779.9048523902893
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(front_is_clear_3) { lane_right C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1791.8518867492676
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 1.8571428571428572, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(front_is_clear_3) { faster C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1804.4882354736328
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(front_is_clear_3) { slower C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1816.3396799564362
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(right_is_clear_3) { idle C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1828.4270474910736
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 8.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(right_is_clear_3) { lane_right C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1840.7674722671509
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(right_is_clear_3) { faster C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1852.3710544109344
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(right_is_clear_3) { slower C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1864.8740391731262
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [True, True, True, True, True, False]
all time steps: [31, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 14.30952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
switch to robot seed 60000
case 3: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1881.3097639083862
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [True, True, True, True, True, False]
all time steps: [31, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 14.30952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
switch to robot seed 60000
case 3: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
[ITER] 64
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 24201  current reward: 14.30952380952381  current eval reward: 4.723809523809524
current time: 1897.3290894031525
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 1910.028757095337
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 1922.3692445755005
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 1934.2962863445282
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.642857142857144 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END
current time: 1946.3471744060516
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 1958.6693608760834
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} } }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} } }}} ELSE { lane_right} idle} ;; END
[ITER] 65
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 25131  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1970.8365607261658

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1974.0437445640564

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { idle C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { idle C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1978.42058801651

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { lane_right C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { lane_right C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1982.5302579402924

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { faster C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { faster C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1986.6955256462097

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { slower C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { slower C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1990.9923553466797

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(not(right_is_clear_3)) { lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(not(right_is_clear_3)) { lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
[ITER] 66
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 25131  current reward: 14.30952380952381  current eval reward: 4.723809523809524
current time: 1995.2897918224335
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2007.4906511306763
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { idle C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2019.682864189148
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2031.3767051696777
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.642857142857144 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2044.2061884403229
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2056.715260028839
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
[ITER] 67
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 26061  current reward: 14.30952380952381  current eval reward: 4.723809523809524
current time: 2069.156154155731
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2081.2145392894745
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { idle C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2093.046195268631
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2105.168016910553
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.642857142857144 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2116.9996337890625
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2130.0191576480865
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
[ITER] 68
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 26991  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 2142.7440173625946
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2150.2930064201355

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2154.9424245357513
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2163.2927508354187
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2171.47500705719
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 69
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 27595  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 2179.0232117176056
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2187.2433104515076
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2195.951285839081
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2204.118246793747
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2212.012267112732

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 70
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 28199  current reward: 14.476190476190476  current eval reward: 4.495238095238095
current time: 2216.2059338092804
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2224.317309141159

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2228.8952009677887
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2236.9524915218353
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2244.9333448410034
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 71
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 28803  current reward: 14.476190476190476  current eval reward: 4.695238095238095
current time: 2252.8194670677185
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2260.6768414974213

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2265.222677230835
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2273.163058280945
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2281.4769825935364
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 72
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 29407  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 2289.209596157074

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2289.4987637996674

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2289.795704126358

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2290.093670129776

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2294.2663764953613

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 73
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 29407  current reward: 14.476190476190476  current eval reward: 4.695238095238095
current time: 2294.573905944824

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2298.3500788211823

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2298.635660648346

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2298.9351983070374

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2299.233287334442

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 74
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 29407  current reward: 14.476190476190476  current eval reward: 4.723809523809524
current time: 2299.5323057174683
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right} ELSE { faster}} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right} ELSE { faster}} }}} ELSE { lane_right} idle} ;; END
current time: 2311.998916864395
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2320.680551290512
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right}  faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right}  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2333.7748420238495
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_left C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2341.9929943084717
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right slower C }  faster} }}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 75
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 30182  current reward: 14.476190476190476  current eval reward: 4.723809523809524
current time: 2350.4939637184143
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2358.2564990520477
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2366.2090578079224
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
current time: 2379.2457411289215
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right}  faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right}  faster}}} ELSE { lane_right} idle} ;; END
current time: 2391.58931183815
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 76
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 30957  current reward: 14.476190476190476  current eval reward: 4.723809523809524
current time: 2399.649335861206
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right}  faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right}  faster}}} ELSE { lane_right} idle} ;; END
current time: 2411.5269067287445
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2419.9655232429504
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2427.6874227523804
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2435.9455671310425
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 77
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END with cost -12.642857142857144
current time steps: 31732  current reward: 14.642857142857144  current eval reward: 4.723809523809524
current time: 2448.395587205887
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2457.1208827495575
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right lane_left C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2465.836274623871
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right}  faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right}  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2478.3350632190704
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}} }}} ELSE { lane_right} idle} ;; END
current time: 2491.1019394397736
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right slower C }  faster} }}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 78
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END with cost -12.642857142857144
current time steps: 32507  current reward: 14.642857142857144  current eval reward: 4.723809523809524
current time: 2499.14315199852
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2507.0999228954315
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right}  faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right}  faster}}} ELSE { lane_right} idle} ;; END
current time: 2519.6510994434357
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2527.9168031215668
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2535.976828098297
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 79
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END with cost -12.642857142857144
current time steps: 33282  current reward: 14.642857142857144  current eval reward: 4.723809523809524
current time: 2547.6989226341248
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2556.4181563854218
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
current time: 2569.010026693344
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2577.155595064163
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2584.913770675659
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right}  faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right}  faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

best reward14.976190476190476
 total time steps43533
Total Time Used: 3409.2686223983765
Current Reward: 14.976190476190476
for level 0
(' S ; END', 0, 0, 14.976190476190476, 5, 14.976190476190476)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 14.889660751150366, 5, 14.976190476190476)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.8299177244263807, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(all_true) { S } ; S ; END', 2, 0, 14.82991772442638, 1, 14.976190476190476)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -1.146272751764096, 1, -1)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -1.146272751764096, 1, -1)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.146272751764096, 1, -1)
----------------------------
Current Step: 5
Current Sketch:  WHILE(right_is_clear_3) { S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(right_is_clear_3) { C } ;; END with cost 0
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [1, 1, 1, 1, 1, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
current time steps: 5  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 0.1634225845336914
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [2, 2, 3, 2, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 complete for
  WHILE(right_is_clear_3) { lane_left} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(right_is_clear_3) { C } ;; END
current time: 1.1469507217407227
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [11, 11, 11, 11, 11, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { slower} ;; END
switch to robot seed 60000
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(right_is_clear_3) { slower} ;; END
current time: 5.86887001991272
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { idle} ;; END
switch to robot seed 10000
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(right_is_clear_3) { idle} ;; END
current time: 10.423351764678955
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, False, False, False, False]
all time steps: [11, 11, 9, 3, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { faster} ;; END
switch to robot seed 70000
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(right_is_clear_3) { faster} ;; END
current time: 14.939959049224854

 complete for
  WHILE(right_is_clear_3) { lane_right} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(right_is_clear_3) { C } ;; END
------ end current search -------

[ITER] 1
searching base on  WHILE(right_is_clear_3) { slower} ;; END with cost -0.6095238095238096
current time steps: 116  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 15.889923095703125
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  slower} ;; END
current time: 20.966111660003662
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  slower} ;; END
current time: 26.218158721923828
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  slower} ;; END
current time: 31.21185302734375
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  slower} ;; END
current time: 36.0078239440918
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { slower} ;; END
unable to put into queue and get cost 1 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { slower} ;; END
[ITER] 2
go to next goal: 20
searching base on  WHILE(right_is_clear_3) { idle} ;; END with cost -0.6095238095238096
current time steps: 651  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 62.34666991233826
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  idle} ;; END
current time: 66.7012345790863

 complete for
  WHILE(right_is_clear_3) { idle} ;; END
unable to put into queue and get cost 1 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { idle} ;; END
current time: 68.18518877029419
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  idle} ;; END
current time: 72.56025791168213
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  idle} ;; END
current time: 77.00417971611023
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  idle} ;; END
[ITER] 3
searching base on  WHILE(right_is_clear_3) { faster} ;; END with cost -0.6095238095238096
current time steps: 919  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 81.16735005378723
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [10, 21, 21, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  faster} ;; END
current time: 86.19245767593384
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, -1, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [10, 21, 21, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  faster} ;; END
unable to put into queue and get cost 2 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  faster} ;; END
current time: 91.09809684753418
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [10, 21, 21, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right C }  faster} ;; END
current time: 96.26508045196533

 fail for 
  WHILE(right_is_clear_3) { faster} ;; END
unable to put into queue and get cost 1 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { faster} ;; END
current time: 97.73291206359863
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, -1, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [10, 21, 21, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  faster} ;; END
unable to put into queue and get cost 2 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  faster} ;; END
[ITER] 4
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  slower} ;; END with cost -0.4095238095238096
current time steps: 1115  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 103.00803256034851
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle C }  slower} ;; END
current time: 109.82041931152344
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower C }  slower} ;; END
current time: 116.25121998786926
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left C }  slower} ;; END
current time: 123.06675362586975
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right C }  slower} ;; END
current time: 129.68550395965576
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  slower} ;; END
------ end current search -------

[ITER] 5
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  slower} ;; END with cost -0.4095238095238096
current time steps: 1640  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 136.50267386436462
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_left C }  slower} ;; END
current time: 142.69424557685852
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle idle C }  slower} ;; END
current time: 149.47285103797913
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle faster C }  slower} ;; END
current time: 156.34890031814575
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_right C }  slower} ;; END
current time: 162.56591486930847
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle slower C }  slower} ;; END
------ end current search -------

[ITER] 6
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  slower} ;; END with cost -0.4095238095238096
current time steps: 2165  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 169.21031522750854
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right C }  slower} ;; END
current time: 175.76495599746704
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right}  slower} ;; END
unable to put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right}  slower} ;; END
current time: 198.1383855342865
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left C }  slower} ;; END
current time: 205.3043990135193
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle C }  slower} ;; END
current time: 211.46103596687317
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster C }  slower} ;; END
------ end current search -------

[ITER] 7
go to next goal: 30
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  slower} ;; END with cost -0.4095238095238096
current time steps: 2845  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 218.06853222846985
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right C }  slower} ;; END
current time: 226.40236687660217
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster C }  slower} ;; END
current time: 234.65929102897644
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left C }  slower} ;; END
current time: 242.94981050491333
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle C }  slower} ;; END
current time: 251.3366334438324
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower C }  slower} ;; END
------ end current search -------

[ITER] 8
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  idle} ;; END with cost -0.4095238095238096
current time steps: 3620  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 259.8342912197113
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower C }  idle} ;; END
current time: 265.5651526451111
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right C }  idle} ;; END
current time: 271.39382338523865
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  idle} ;; END
current time: 276.8691530227661
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle C }  idle} ;; END
current time: 282.80488657951355
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left C }  idle} ;; END
------ end current search -------

[ITER] 9
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  idle} ;; END with cost -0.4095238095238096
current time steps: 4105  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 288.42360639572144
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle C }  idle} ;; END
current time: 294.0213813781738
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right C }  idle} ;; END
current time: 299.4818549156189
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left C }  idle} ;; END
current time: 304.69503808021545
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster C }  idle} ;; END
current time: 310.1572127342224
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower C }  idle} ;; END
------ end current search -------

[ITER] 10
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  idle} ;; END with cost -0.4095238095238096
current time steps: 4595  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 315.9039742946625
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower C }  idle} ;; END
current time: 321.17208552360535
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right C }  idle} ;; END
current time: 326.85354256629944

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left C }  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  idle} ;; END
current time: 327.16275548934937
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle C }  idle} ;; END
current time: 332.4329080581665
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster C }  idle} ;; END
------ end current search -------

[ITER] 11
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  idle} ;; END with cost -0.4095238095238096
current time steps: 4987  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 337.85658144950867
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower C }  idle} ;; END
current time: 343.51306772232056
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [31, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  idle} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 356.71148920059204
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right C }  idle} ;; END
current time: 362.2790403366089
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_left C }  idle} ;; END
current time: 367.9737558364868
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower faster C }  idle} ;; END
------ end current search -------

[ITER] 12
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  faster} ;; END with cost -0.4095238095238096
current time steps: 5472  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 373.6187834739685
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right C }  faster} ;; END
current time: 379.20413422584534
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left slower C }  faster} ;; END
current time: 384.578341960907
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster C }  faster} ;; END
current time: 390.75446105003357
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_left C }  faster} ;; END
current time: 396.3054738044739
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle C }  faster} ;; END
------ end current search -------

[ITER] 13
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right C }  faster} ;; END with cost -0.4095238095238096
current time steps: 5817  current reward: 0.8095238095238096  current eval reward: 0.4742857142857143
current time: 401.8832232952118
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster C }  faster} ;; END
current time: 407.22138261795044
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right idle C }  faster} ;; END
current time: 412.5080375671387
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right C }  faster} ;; END
current time: 418.3264989852905
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ;; END
current time: 423.97210693359375
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [11, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ;; END
------ end current search -------

[ITER] 14
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.4095238095238096
current time steps: 6167  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 429.44833183288574
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 438.1735417842865
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [5, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
case one applied: put into queue and get cost 2 reward 0.8095238095238096 for seed 50000 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 446.73659563064575
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 455.63017988204956
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 464.46235394477844
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 472.81433486938477
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_left C }  idle} ;; END
current time: 481.2025303840637
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_right C }  idle} ;; END
current time: 489.6829195022583
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster C }  idle} ;; END
current time: 498.42604422569275
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { slower C }  idle} ;; END
[ITER] 15
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.4095238095238096
current time steps: 7301  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 506.606552362442

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 507.2694547176361

 complete for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 2 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 508.6721820831299
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [5, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 514.812885761261
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [5, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 520.6809048652649
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [5, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 526.676919221878

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_left C }  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_left C }  idle} ;; END
current time: 527.5004210472107
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [6, 31, 31, 31, 31, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_right C }  idle} ;; END
current time: 536.7352068424225
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [6, 31, 31, 31, 31, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { faster C }  idle} ;; END
current time: 545.5083911418915
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [6, 31, 31, 31, 31, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower C }  idle} ;; END
[ITER] 16
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle C }  slower} ;; END with cost -0.20952380952380956
current time steps: 7985  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 555.1566877365112
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle idle C }  slower} ;; END
current time: 563.5167527198792
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle slower C }  slower} ;; END
current time: 571.928263425827
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle faster C }  slower} ;; END
current time: 579.6241233348846
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle lane_left C }  slower} ;; END
current time: 588.2091903686523
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle lane_right C }  slower} ;; END
------ end current search -------

[ITER] 17
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower C }  slower} ;; END with cost -0.20952380952380956
current time steps: 8760  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 596.6294527053833
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower faster C }  slower} ;; END
current time: 604.9478669166565
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower slower C }  slower} ;; END
current time: 612.562216758728
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower lane_right C }  slower} ;; END
current time: 621.2197151184082
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower idle C }  slower} ;; END
current time: 629.3693253993988
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower lane_left C }  slower} ;; END
------ end current search -------

[ITER] 18
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left C }  slower} ;; END with cost -0.20952380952380956
current time steps: 9535  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 637.0736689567566
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left faster C }  slower} ;; END
current time: 645.4686036109924
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left idle C }  slower} ;; END
current time: 653.7659554481506
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left lane_right C }  slower} ;; END
current time: 661.9724802970886
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left slower C }  slower} ;; END
current time: 670.2641410827637
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left lane_left C }  slower} ;; END
------ end current search -------

[ITER] 19
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right C }  slower} ;; END with cost -0.20952380952380956
current time steps: 10310  current reward: 0.8095238095238096  current eval reward: 0.4647619047619048
current time: 678.359857082367
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right faster C }  slower} ;; END
current time: 686.6578781604767
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right lane_right C }  slower} ;; END
current time: 695.0153737068176
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right}  slower} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right}  slower} ;; END
current time: 707.5193111896515
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right lane_left C }  slower} ;; END
current time: 715.8138449192047
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right idle C }  slower} ;; END
------ end current search -------

[ITER] 20
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  slower} ;; END with cost -0.20952380952380956
current time steps: 11085  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 723.5972182750702
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster faster C }  slower} ;; END
current time: 731.7924058437347
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster idle C }  slower} ;; END
current time: 740.1532640457153
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster slower C }  slower} ;; END
current time: 748.5859496593475
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster lane_right C }  slower} ;; END
current time: 757.0142335891724
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster lane_left C }  slower} ;; END
------ end current search -------

[ITER] 21
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_left C }  slower} ;; END with cost -0.20952380952380956
current time steps: 11860  current reward: 0.8095238095238096  current eval reward: 0.4647619047619048
current time: 765.1841037273407
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_left faster C }  slower} ;; END
current time: 773.7932121753693
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_left slower C }  slower} ;; END
current time: 782.4714534282684
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_left lane_right C }  slower} ;; END
current time: 791.0068929195404
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_left lane_left C }  slower} ;; END
current time: 799.3020782470703
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_left idle C }  slower} ;; END
------ end current search -------

[ITER] 22
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle idle C }  slower} ;; END with cost -0.20952380952380956
current time steps: 12635  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 807.8286108970642
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle idle lane_left C }  slower} ;; END
current time: 816.2210328578949
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle idle faster C }  slower} ;; END
current time: 824.6726796627045
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle idle lane_right C }  slower} ;; END
current time: 832.975213766098
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle idle idle C }  slower} ;; END
current time: 841.2801711559296
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle idle slower C }  slower} ;; END
------ end current search -------

[ITER] 23
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle faster C }  slower} ;; END with cost -0.20952380952380956
current time steps: 13410  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 849.4459302425385
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle faster lane_right C }  slower} ;; END
current time: 857.8250033855438
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle faster idle C }  slower} ;; END
current time: 866.0962977409363
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle faster faster C }  slower} ;; END
current time: 874.7636048793793
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle faster lane_left C }  slower} ;; END
current time: 882.9978666305542
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle faster slower C }  slower} ;; END
------ end current search -------

[ITER] 24
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_right C }  slower} ;; END with cost -0.20952380952380956
current time steps: 14185  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 890.9614832401276
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_right idle C }  slower} ;; END
current time: 899.4634563922882
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_right lane_right C }  slower} ;; END
current time: 907.8675870895386
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_right}  slower} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_right}  slower} ;; END
current time: 921.0881414413452
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_right faster C }  slower} ;; END
current time: 929.496356010437
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle lane_right lane_left C }  slower} ;; END
------ end current search -------

[ITER] 25
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle slower C }  slower} ;; END with cost -0.20952380952380956
current time steps: 14960  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 937.9113321304321
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle slower lane_left C }  slower} ;; END
current time: 946.3556804656982
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle slower faster C }  slower} ;; END
current time: 954.7043936252594
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle slower slower C }  slower} ;; END
current time: 962.9258530139923
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle slower lane_right C }  slower} ;; END
current time: 971.0998492240906
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle slower idle C }  slower} ;; END
------ end current search -------

[ITER] 26
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right C }  slower} ;; END with cost -0.20952380952380956
current time steps: 15735  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 979.4216449260712
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right lane_left C }  slower} ;; END
current time: 987.9103181362152
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right idle C }  slower} ;; END
current time: 996.174699306488
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right faster C }  slower} ;; END
current time: 1004.3411996364594
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right}  slower} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right}  slower} ;; END
current time: 1016.4006831645966
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right lane_right C }  slower} ;; END
------ end current search -------

[ITER] 27
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left C }  slower} ;; END with cost -0.20952380952380956
current time steps: 16510  current reward: 0.8095238095238096  current eval reward: 0.4647619047619048
current time: 1024.9156012535095
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left slower C }  slower} ;; END
current time: 1032.9294002056122
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left faster C }  slower} ;; END
current time: 1041.5903632640839
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left idle C }  slower} ;; END
current time: 1049.9373812675476
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left lane_right C }  slower} ;; END
current time: 1057.9023656845093
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left lane_left C }  slower} ;; END
------ end current search -------

[ITER] 28
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle C }  slower} ;; END with cost -0.20952380952380956
current time steps: 17285  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1066.0823230743408
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle faster C }  slower} ;; END
current time: 1074.4781329631805
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle}  slower} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle}  slower} ;; END
current time: 1087.4582352638245
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle lane_left C }  slower} ;; END
current time: 1095.2943546772003
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle idle C }  slower} ;; END
current time: 1103.1526463031769
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle lane_right C }  slower} ;; END
------ end current search -------

[ITER] 29
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster C }  slower} ;; END with cost -0.20952380952380956
current time steps: 18060  current reward: 0.8095238095238096  current eval reward: 1.0361904761904763
current time: 1111.4529016017914
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster faster C }  slower} ;; END
current time: 1119.7516877651215
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster idle C }  slower} ;; END
current time: 1128.3537034988403
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster lane_right C }  slower} ;; END
current time: 1136.799637079239
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster}  slower} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster}  slower} ;; END
current time: 1149.724888086319
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster lane_left C }  slower} ;; END
------ end current search -------

[ITER] 30
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right C }  slower} ;; END with cost -0.20952380952380956
current time steps: 18835  current reward: 0.8095238095238096  current eval reward: 1.0361904761904763
current time: 1158.2215354442596
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right}  slower} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right}  slower} ;; END
current time: 1170.982916355133
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right lane_left C }  slower} ;; END
current time: 1179.387079000473
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right lane_right C }  slower} ;; END
current time: 1188.2643435001373
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right faster C }  slower} ;; END
current time: 1196.4323511123657
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right idle C }  slower} ;; END
------ end current search -------

[ITER] 31
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster C }  slower} ;; END with cost -0.20952380952380956
current time steps: 19610  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1204.5647070407867
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster slower C }  slower} ;; END
current time: 1212.8027181625366
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster lane_right C }  slower} ;; END
current time: 1220.9895105361938
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster lane_left C }  slower} ;; END
current time: 1228.629229068756
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster idle C }  slower} ;; END
current time: 1236.5422451496124
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster faster C }  slower} ;; END
------ end current search -------

[ITER] 32
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left C }  slower} ;; END with cost -0.20952380952380956
current time steps: 20385  current reward: 0.8095238095238096  current eval reward: 0.4647619047619048
current time: 1244.3470542430878
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left idle C }  slower} ;; END
current time: 1251.815813779831
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left lane_right C }  slower} ;; END
current time: 1259.6829009056091
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left faster C }  slower} ;; END
current time: 1266.9821050167084
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left slower C }  slower} ;; END
current time: 1274.3307070732117
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left lane_left C }  slower} ;; END
------ end current search -------

[ITER] 33
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle C }  slower} ;; END with cost -0.20952380952380956
current time steps: 21160  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1282.1298580169678
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle slower C }  slower} ;; END
current time: 1290.1220943927765
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle lane_left C }  slower} ;; END
current time: 1297.6818053722382
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle idle C }  slower} ;; END
current time: 1305.4694046974182
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle faster C }  slower} ;; END
current time: 1313.273195028305
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle lane_right C }  slower} ;; END
------ end current search -------

[ITER] 34
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower C }  slower} ;; END with cost -0.20952380952380956
current time steps: 21935  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1320.5558989048004
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower idle C }  slower} ;; END
current time: 1329.5781965255737
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower slower C }  slower} ;; END
current time: 1337.1774401664734
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower lane_left C }  slower} ;; END
current time: 1344.871117591858
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower faster C }  slower} ;; END
current time: 1352.5238103866577
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [4, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 60000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower lane_right C }  slower} ;; END
------ end current search -------

[ITER] 35
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower C }  idle} ;; END with cost -0.20952380952380956
current time steps: 22710  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1359.862761259079
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower faster C }  idle} ;; END
current time: 1364.7570142745972
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [9, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
case 2: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower}  idle} ;; END
current time: 1372.714432477951
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower lane_left C }  idle} ;; END
current time: 1377.7263107299805
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower slower C }  idle} ;; END
current time: 1382.5541825294495
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower lane_right C }  idle} ;; END
------ end current search -------

[ITER] 36
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right C }  idle} ;; END with cost -0.20952380952380956
current time steps: 23195  current reward: 0.8095238095238096  current eval reward: 0.4647619047619048
current time: 1387.6593072414398
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right faster C }  idle} ;; END
current time: 1392.4488034248352
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right slower C }  idle} ;; END
current time: 1397.6761524677277
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right lane_left C }  idle} ;; END
current time: 1403.8696448802948

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right}  idle} ;; END
current time: 1405.0333933830261
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_right lane_right C }  idle} ;; END
------ end current search -------

[ITER] 37
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  idle} ;; END with cost -0.20952380952380956
current time steps: 23583  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1410.6508293151855

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  idle} ;; END
current time: 1410.94828748703

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster slower C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  idle} ;; END
current time: 1411.2499837875366

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster idle C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  idle} ;; END
current time: 1411.5393705368042

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster lane_right C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  idle} ;; END
current time: 1411.7638084888458

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster faster C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left faster C }  idle} ;; END
------ end current search -------

[ITER] 38
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle C }  idle} ;; END with cost -0.20952380952380956
current time steps: 23583  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1411.982788324356
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle faster C }  idle} ;; END
current time: 1417.122685432434

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle lane_right C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle C }  idle} ;; END
current time: 1417.4520478248596
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle slower C }  idle} ;; END
current time: 1422.6116871833801
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle idle C }  idle} ;; END
current time: 1428.0859966278076
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left idle lane_left C }  idle} ;; END
------ end current search -------

[ITER] 39
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left C }  idle} ;; END with cost -0.20952380952380956
current time steps: 23971  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1433.2744736671448
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left slower C }  idle} ;; END
current time: 1438.5715999603271
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left lane_left C }  idle} ;; END
current time: 1444.1230778694153
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left idle C }  idle} ;; END
current time: 1449.3632802963257
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left faster C }  idle} ;; END
current time: 1454.5165400505066

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left lane_right C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left lane_left C }  idle} ;; END
------ end current search -------

[ITER] 40
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle C }  idle} ;; END with cost -0.20952380952380956
current time steps: 24359  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1454.8393604755402
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle lane_right C }  idle} ;; END
current time: 1460.0999488830566
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle idle C }  idle} ;; END
current time: 1465.711537361145
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle faster C }  idle} ;; END
current time: 1470.8022074699402

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle C }  idle} ;; END
current time: 1471.0935907363892
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right idle slower C }  idle} ;; END
------ end current search -------

[ITER] 41
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right C }  idle} ;; END with cost -0.20952380952380956
current time steps: 24751  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1476.437264919281
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right idle C }  idle} ;; END
current time: 1481.5199279785156
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right slower C }  idle} ;; END
current time: 1486.4736223220825
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right faster C }  idle} ;; END
current time: 1491.8520066738129
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right lane_right C }  idle} ;; END
current time: 1497.2087318897247
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right lane_left C }  idle} ;; END
------ end current search -------

[ITER] 42
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left C }  idle} ;; END with cost -0.20952380952380956
current time steps: 25241  current reward: 0.8095238095238096  current eval reward: 0.4647619047619048
current time: 1502.2851765155792
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [9, 31, 31, 31, 2, 17]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
case 2: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left}  idle} ;; END
current time: 1508.7280178070068
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left faster C }  idle} ;; END
current time: 1514.0442669391632
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left lane_left C }  idle} ;; END
current time: 1519.4462387561798
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left lane_right C }  idle} ;; END
current time: 1524.8450973033905
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left slower C }  idle} ;; END
------ end current search -------

[ITER] 43
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster C }  idle} ;; END with cost -0.20952380952380956
current time steps: 25749  current reward: 0.8095238095238096  current eval reward: 1.0361904761904763
current time: 1530.0335822105408
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster lane_right C }  idle} ;; END
current time: 1535.17875790596
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster faster C }  idle} ;; END
current time: 1540.5113248825073
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster slower C }  idle} ;; END
current time: 1545.78315615654
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster idle C }  idle} ;; END
current time: 1550.9297711849213

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster C }  idle} ;; END
------ end current search -------

[ITER] 44
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower C }  idle} ;; END with cost -0.20952380952380956
current time steps: 26141  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1551.2019436359406
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower lane_right C }  idle} ;; END
current time: 1556.2427608966827
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower slower C }  idle} ;; END
current time: 1561.542424917221
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower faster C }  idle} ;; END
current time: 1566.6729941368103
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower lane_left C }  idle} ;; END
current time: 1571.8904983997345
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 2, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower}  idle} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower}  idle} ;; END
------ end current search -------

[ITER] 45
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower C }  idle} ;; END with cost -0.20952380952380956
current time steps: 26663  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1583.4549207687378
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower faster C }  idle} ;; END
current time: 1588.3562183380127

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower C }  idle} ;; END
current time: 1588.6319663524628
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower lane_right C }  idle} ;; END
current time: 1593.5348978042603
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower idle C }  idle} ;; END
current time: 1599.7336106300354
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower slower C }  idle} ;; END
------ end current search -------

[ITER] 46
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right C }  idle} ;; END with cost -0.20952380952380956
current time steps: 27059  current reward: 0.8095238095238096  current eval reward: 1.0361904761904763
current time: 1604.499481678009
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right faster C }  idle} ;; END
current time: 1609.6373498439789

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right C }  idle} ;; END
current time: 1609.9228909015656
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right slower C }  idle} ;; END
current time: 1615.6652364730835
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right idle C }  idle} ;; END
current time: 1620.4364807605743

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right lane_right C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right C }  idle} ;; END
------ end current search -------

[ITER] 47
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle C }  idle} ;; END with cost -0.20952380952380956
current time steps: 27353  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1620.7233393192291
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle idle C }  idle} ;; END
current time: 1625.737807750702
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle lane_right C }  idle} ;; END
current time: 1631.1362376213074
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle slower C }  idle} ;; END
current time: 1636.7872364521027
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle faster C }  idle} ;; END
current time: 1642.1386058330536

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle C }  idle} ;; END
------ end current search -------

[ITER] 48
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster C }  idle} ;; END with cost -0.20952380952380956
current time steps: 27745  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1642.3856687545776

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster C }  idle} ;; END
current time: 1642.663672208786
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster lane_right C }  idle} ;; END
current time: 1647.4979693889618
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster slower C }  idle} ;; END
current time: 1652.6000826358795
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster idle C }  idle} ;; END
current time: 1657.7404561042786
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster faster C }  idle} ;; END
------ end current search -------

[ITER] 49
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower C }  idle} ;; END with cost -0.20952380952380956
current time steps: 28137  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1662.898241519928
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower faster C }  idle} ;; END
current time: 1668.3404777050018
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower lane_left C }  idle} ;; END
current time: 1673.3475301265717
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower lane_right C }  idle} ;; END
current time: 1678.8756341934204
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower slower C }  idle} ;; END
current time: 1683.7877497673035
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [31, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower}  idle} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower}  idle} ;; END
------ end current search -------

[ITER] 50
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right C }  idle} ;; END with cost -0.20952380952380956
current time steps: 28622  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1695.049510717392
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [31, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right}  idle} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right}  idle} ;; END
current time: 1706.6633033752441
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right lane_right C }  idle} ;; END
current time: 1711.8790686130524
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right slower C }  idle} ;; END
current time: 1717.2020857334137
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right faster C }  idle} ;; END
current time: 1722.5932714939117
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right lane_left C }  idle} ;; END
------ end current search -------

[ITER] 51
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_left C }  idle} ;; END with cost -0.20952380952380956
current time steps: 29107  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1727.5244529247284
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [9, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
case 2: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_left}  idle} ;; END
current time: 1736.1265144348145
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_left lane_right C }  idle} ;; END
current time: 1741.374653339386
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_left lane_left C }  idle} ;; END
current time: 1746.4381053447723
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_left faster C }  idle} ;; END
current time: 1752.4690062999725
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_left slower C }  idle} ;; END
------ end current search -------

[ITER] 52
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower faster C }  idle} ;; END with cost -0.20952380952380956
current time steps: 29592  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1758.6265714168549
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower faster slower C }  idle} ;; END
current time: 1764.2133238315582
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower faster lane_right C }  idle} ;; END
current time: 1769.6780745983124
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [9, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
case 2: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower faster}  idle} ;; END
current time: 1777.8787429332733
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower faster faster C }  idle} ;; END
current time: 1783.791576385498
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [8, 31, 31, 31, 2, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower faster lane_left C }  idle} ;; END
------ end current search -------

[ITER] 53
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right C }  faster} ;; END with cost -0.20952380952380956
current time steps: 30077  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1789.3178384304047

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right slower C }  faster} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right C }  faster} ;; END
current time: 1789.6241059303284
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  faster} ;; END
current time: 1794.8429086208344

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right idle C }  faster} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right C }  faster} ;; END
current time: 1795.154056072235

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right}  faster} ;; END
unable to put into queue and get cost 3 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right}  faster} ;; END
current time: 1796.9897119998932
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right lane_right C }  faster} ;; END
------ end current search -------

[ITER] 54
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left slower C }  faster} ;; END with cost -0.20952380952380956
current time steps: 30215  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1802.6877727508545
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left slower lane_right C }  faster} ;; END
current time: 1808.2105345726013
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left slower faster C }  faster} ;; END
current time: 1813.442202091217
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left slower lane_left C }  faster} ;; END
current time: 1819.028932094574
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left slower slower C }  faster} ;; END
current time: 1824.668363571167
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left slower idle C }  faster} ;; END
------ end current search -------

[ITER] 55
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster C }  faster} ;; END with cost -0.20952380952380956
current time steps: 30560  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1829.9460098743439

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster lane_right C }  faster} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster C }  faster} ;; END
current time: 1830.2471804618835
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster faster C }  faster} ;; END
current time: 1835.7072126865387
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster idle C }  faster} ;; END
current time: 1840.9906811714172
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster lane_left C }  faster} ;; END
current time: 1846.4214351177216
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster slower C }  faster} ;; END
------ end current search -------

[ITER] 56
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_left C }  faster} ;; END with cost -0.20952380952380956
current time steps: 30836  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1851.9180479049683
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_left idle C }  faster} ;; END
current time: 1857.3622586727142
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_left lane_left C }  faster} ;; END
current time: 1862.9727551937103
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_left slower C }  faster} ;; END
current time: 1868.675602197647
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_left lane_right C }  faster} ;; END
current time: 1874.2493987083435
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_left faster C }  faster} ;; END
------ end current search -------

[ITER] 57
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle C }  faster} ;; END with cost -0.20952380952380956
current time steps: 31181  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 1880.2413725852966
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle lane_left C }  faster} ;; END
current time: 1885.7988975048065

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle lane_right C }  faster} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle C }  faster} ;; END
current time: 1886.1186382770538
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle slower C }  faster} ;; END
current time: 1891.846691608429
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle faster C }  faster} ;; END
current time: 1897.4586911201477
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle idle C }  faster} ;; END
------ end current search -------

[ITER] 58
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster C }  faster} ;; END with cost -0.20952380952380956
current time steps: 31457  current reward: 0.8095238095238096  current eval reward: 0.4742857142857143
current time: 1902.9104719161987
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster idle C }  faster} ;; END
current time: 1908.5012512207031
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster faster C }  faster} ;; END
current time: 1914.101547241211
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster lane_right C }  faster} ;; END
current time: 1919.2557694911957

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster lane_left C }  faster} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster C }  faster} ;; END
current time: 1919.5529353618622
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster slower C }  faster} ;; END
------ end current search -------

[ITER] 59
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right idle C }  faster} ;; END with cost -0.20952380952380956
current time steps: 31737  current reward: 0.8095238095238096  current eval reward: 0.4742857142857143
current time: 1925.1652884483337
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right idle faster C }  faster} ;; END
current time: 1930.696414232254

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right idle lane_left C }  faster} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right idle C }  faster} ;; END
current time: 1931.0017812252045
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right idle lane_right C }  faster} ;; END
current time: 1936.4774820804596
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right idle slower C }  faster} ;; END
current time: 1942.0680196285248
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right idle idle C }  faster} ;; END
------ end current search -------

[ITER] 60
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right C }  faster} ;; END with cost -0.20952380952380956
current time steps: 32017  current reward: 0.8095238095238096  current eval reward: 0.4742857142857143
current time: 1947.4146466255188
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right idle C }  faster} ;; END
current time: 1952.909291267395
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right slower C }  faster} ;; END
current time: 1958.3356459140778
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right lane_left C }  faster} ;; END
current time: 1963.893883228302
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [31, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right}  faster} ;; END
switch to robot seed 10000
case 2: put into queue and get cost 3 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right}  faster} ;; END
current time: 1974.2564029693604
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right lane_right C }  faster} ;; END
------ end current search -------

[ITER] 61
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ;; END with cost -0.20952380952380956
current time steps: 32367  current reward: 0.8095238095238096  current eval reward: 0.4742857142857143
current time: 1979.9757812023163
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right slower lane_left C }  faster} ;; END
current time: 1985.5233743190765
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right slower lane_right C }  faster} ;; END
current time: 1991.2209026813507
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right slower idle C }  faster} ;; END
current time: 1996.4511287212372
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right slower faster C }  faster} ;; END
current time: 2002.0583891868591
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right slower slower C }  faster} ;; END
------ end current search -------

[ITER] 62
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ;; END with cost -0.20952380952380956
current time steps: 32717  current reward: 0.8095238095238096  current eval reward: 0.4742857142857143
current time: 2007.572075843811
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left lane_left C }  faster} ;; END
current time: 2013.2922174930573

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left}  faster} ;; END
unable to put into queue and get cost 3 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left}  faster} ;; END
current time: 2015.0228788852692

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left idle C }  faster} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ;; END
current time: 2015.3193655014038
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [12, 31, 31, 3, 4, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left lane_right C }  faster} ;; END
current time: 2020.8017258644104

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left slower C }  faster} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ;; END
------ end current search -------

[ITER] 63
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 32857  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2021.0998919010162
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left idle C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2029.6179404258728
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2038.1235783100128
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2046.4992063045502
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2054.9429275989532

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
------ end current search -------

[ITER] 64
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 33361  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2055.263254880905
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2063.905974149704
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2077.10666847229
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2085.4325799942017
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2094.216891527176
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
------ end current search -------

[ITER] 65
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 34020  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2102.9335432052612

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2103.5489604473114

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2103.8416476249695

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2104.1447439193726

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2104.4712257385254

 fail for 
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
------ end current search -------

[ITER] 66
searching base on  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 34020  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2104.7726171016693
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2113.582159280777

 complete for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2116.5050501823425
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2125.246442556381
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2134.230985403061
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
------ end current search -------

[ITER] 67
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_left C }  idle} ;; END with cost -0.20952380952380956
current time steps: 34524  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2142.5637125968933
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_left idle C }  idle} ;; END
current time: 2151.1267323493958
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_left lane_left C }  idle} ;; END
current time: 2160.2973322868347
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_left faster C }  idle} ;; END
current time: 2169.142903327942

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_left lane_right C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_left C }  idle} ;; END
current time: 2169.45152425766
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_left slower C }  idle} ;; END
------ end current search -------

[ITER] 68
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_right C }  idle} ;; END with cost -0.20952380952380956
current time steps: 35028  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2178.1019146442413
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_right faster C }  idle} ;; END
current time: 2186.6177084445953
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_right slower C }  idle} ;; END
current time: 2195.1211948394775
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_right lane_right C }  idle} ;; END
current time: 2203.891936779022
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_right}  idle} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_right}  idle} ;; END
current time: 2216.7444965839386
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { lane_right lane_left C }  idle} ;; END
------ end current search -------

[ITER] 69
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster C }  idle} ;; END with cost -0.20952380952380956
current time steps: 35687  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2225.2034306526184

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster faster C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster C }  idle} ;; END
current time: 2225.5017368793488

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster}  idle} ;; END
current time: 2226.0929083824158

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster lane_right C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster C }  idle} ;; END
current time: 2226.355351448059

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster C }  idle} ;; END
current time: 2226.6095538139343

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster slower C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { faster C }  idle} ;; END
------ end current search -------

[ITER] 70
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { slower C }  idle} ;; END with cost -0.20952380952380956
current time steps: 35687  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2226.831039905548
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { slower lane_left C }  idle} ;; END
current time: 2235.4254834651947

 complete for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { slower}  idle} ;; END
current time: 2238.246815443039
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { slower slower C }  idle} ;; END
current time: 2246.7849538326263
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { slower lane_right C }  idle} ;; END
current time: 2255.3139271736145
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [4, 31, 31, 31, 31, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(front_is_clear_3)) { slower faster C }  idle} ;; END
------ end current search -------

[ITER] 71
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 36191  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2263.9635770320892
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2269.5294868946075
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2275.426530599594
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2282.255322933197
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [12, 31, 31, 31, 7, 15]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 complete for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2289.9038820266724
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
------ end current search -------

[ITER] 72
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 36710  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2295.7944457530975
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2301.464367866516
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2307.334995031357
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster idle C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2312.985678911209

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2313.289768218994
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 2]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
------ end current search -------

[ITER] 73
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 37114  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2319.338862657547
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower faster C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2325.225353240967

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_left C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2325.5249948501587
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower lane_right C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2331.6240916252136
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 31, 31, 31, 6, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower slower C }  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2337.6828260421753

 complete for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
------ end current search -------

[ITER] 74
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_right C }  idle} ;; END with cost -0.20952380952380956
current time steps: 37420  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2339.2702934741974
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_right lane_right C }  idle} ;; END
current time: 2348.1198196411133
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_right slower C }  idle} ;; END
current time: 2356.801023006439
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_right}  idle} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_right}  idle} ;; END
current time: 2370.3592069149017
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_right lane_left C }  idle} ;; END
current time: 2379.265639066696
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { lane_right faster C }  idle} ;; END
------ end current search -------

[ITER] 75
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { faster C }  idle} ;; END with cost -0.20952380952380956
current time steps: 38087  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2387.8956158161163
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { faster idle C }  idle} ;; END
current time: 2396.5992946624756
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { faster faster C }  idle} ;; END
current time: 2404.636028289795
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { faster slower C }  idle} ;; END
current time: 2413.573179960251
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 3]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { faster lane_right C }  idle} ;; END
current time: 2422.3940665721893

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { faster lane_left C }  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { faster C }  idle} ;; END
------ end current search -------

[ITER] 76
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower C }  idle} ;; END with cost -0.20952380952380956
current time steps: 38595  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2422.695078611374
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower lane_right C }  idle} ;; END
current time: 2431.7978479862213
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower faster C }  idle} ;; END
current time: 2440.4148297309875
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower lane_left C }  idle} ;; END
current time: 2449.6710119247437

 complete for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower}  idle} ;; END
current time: 2451.2504365444183
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 4]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower}  IF(not(left_is_clear_3)) { slower slower C }  idle} ;; END
------ end current search -------

[ITER] 77
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 39107  current reward: 0.8095238095238096  current eval reward: 0.4647619047619048
current time: 2460.023600101471
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [10, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left IF(front_is_clear_3) { lane_left C }  slower}  idle} ;; END
current time: 2467.1704914569855
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [10, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left IF(front_is_clear_3) { idle C }  slower}  idle} ;; END
current time: 2474.021544933319
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [10, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left IF(front_is_clear_3) { lane_right C }  slower}  idle} ;; END
current time: 2481.0330576896667
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [10, 31, 31, 31, 2, 3]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left IF(front_is_clear_3) { faster C }  slower}  idle} ;; END
current time: 2487.9859302043915
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 2, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower}  idle} ;; END
switch to robot seed 50000
case one applied: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left slower}  idle} ;; END
current time: 2499.717242002487
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [31, 31, 31, 31, 2, 30]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left IF(not(front_is_clear_3)) { slower} }  idle} ;; END
switch to robot seed 50000
case 3: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left IF(not(front_is_clear_3)) { slower} }  idle} ;; END
[ITER] 78
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left}  idle} ;; END with cost -0.20952380952380956
current time steps: 39750  current reward: 0.8095238095238096  current eval reward: 0.4647619047619048
current time: 2511.8140621185303

 complete for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right lane_left}  idle} ;; END
current time: 2513.4668686389923
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [10, 31, 31, 31, 2, 18]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right IF(not(right_is_clear_3)) { idle C }  lane_left}  idle} ;; END
current time: 2520.3731048107147
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [10, 31, 31, 31, 2, 18]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 fail for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right IF(not(right_is_clear_3)) { lane_right C }  lane_left}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right IF(not(right_is_clear_3)) { lane_right C }  lane_left}  idle} ;; END
current time: 2526.923106908798
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [10, 31, 31, 31, 2, 18]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right IF(not(right_is_clear_3)) { faster C }  lane_left}  idle} ;; END
current time: 2533.5533833503723
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [10, 31, 31, 31, 2, 18]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 10000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right IF(not(right_is_clear_3)) { slower C }  lane_left}  idle} ;; END
[ITER] 79
searching base on  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower}  idle} ;; END with cost -0.20952380952380956
current time steps: 40202  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 2541.301093816757
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { lane_right slower}  idle} ;; END
current time: 2549.809135198593
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [5, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
case one applied: put into queue and get cost 3 reward 0.8095238095238096 for seed 50000 for 
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower}  idle} ;; END
current time: 2558.539993286133
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { lane_right slower}  idle} ;; END
current time: 2567.150674343109
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  IF(not(left_is_clear_3)) { lane_right slower}  idle} ;; END
current time: 2575.8602800369263
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { lane_right slower}  idle} ;; END
current time: 2585.02072763443
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower}  IF(not(front_is_clear_3)) { lane_left C }  idle} ;; END
current time: 2593.3079662323
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower}  IF(not(front_is_clear_3)) { lane_right C }  idle} ;; END
current time: 2601.973953962326
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower}  IF(not(front_is_clear_3)) { faster C }  idle} ;; END
current time: 2610.2149069309235
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [3, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 4 reward 0.8095238095238096 for seed 50000 for
  WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right slower}  IF(not(front_is_clear_3)) { slower C }  idle} ;; END
best reward0.8095238095238096
 total time steps83735
Total Time Used: 6030.326830863953
Current Reward: 0.8095238095238096
for level 0
(' S ; END', 0, 0, 14.976190476190476, 6, 14.976190476190476)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 14.885483948677113, 6, 14.976190476190476)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.8439037159996468, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -inf, 0, -inf)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, 0.6772370493329798, 1, 0.8095238095238096)
(' WHILE(all_true) { S } ; S ; END', 2, 0, 14.843903715999646, 1, 14.976190476190476)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -1.1322867601908297, 1, -1)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -1.1322867601908297, 1, -1)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.1322867601908297, 1, -1)
----------------------------
Current Step: 6
Current Sketch:  WHILE(left_is_clear_3) { S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(left_is_clear_3) { C } ;; END with cost 0
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [1, 1, 1, 1, 1, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 complete for
  WHILE(left_is_clear_3) { C } ;; END
current time steps: 5  current reward: -1  current eval reward: 0.8361904761904763
current time: 0.26984667778015137
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [11, 11, 11, 11, 11, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 complete for
  WHILE(left_is_clear_3) { slower} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(left_is_clear_3) { C } ;; END
current time: 6.244673490524292
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, False, False, False, False]
all time steps: [11, 11, 9, 3, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]

 complete for
  WHILE(left_is_clear_3) { faster} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(left_is_clear_3) { C } ;; END
current time: 9.561854839324951
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]

 complete for
  WHILE(left_is_clear_3) { idle} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(left_is_clear_3) { C } ;; END
current time: 13.087328910827637
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [2, 2, 2, 2, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 complete for
  WHILE(left_is_clear_3) { lane_left C } ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(left_is_clear_3) { C } ;; END
current time: 13.604792356491089
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 7, 6, 3, 2, 1]
all eval rewards: [-1, 0.8571428571428571, 0.8095238095238096, -1, -1]

 complete for
  WHILE(left_is_clear_3) { lane_right} ;; END
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(left_is_clear_3) { C } ;; END
------ end current search -------

[ITER] 1
best reward-1
 total time steps83740
Total Time Used: 6049.098259687424
Current Reward: -1
for level 0
(' S ; END', 0, 0, 14.976190476190476, 7, 14.976190476190476)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 14.881639452316518, 7, 14.976190476190476)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.8551822430263685, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -1.1210082331641082, 1, -1)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, 0.6885155763597013, 1, 0.8095238095238096)
(' WHILE(all_true) { S } ; S ; END', 2, 0, 14.855182243026368, 1, 14.976190476190476)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -1.1210082331641082, 1, -1)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -1.1210082331641082, 1, -1)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.1210082331641082, 1, -1)
----------------------------
Current Step: 7
Current Sketch:  WHILE(all_true) { WHILE(not(left_is_clear_3)) { S } ; S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; C } ;; END with cost 0
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [1, 1, 1, 1, 1, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
current time steps: 5  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 0.19688892364501953
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [11, 11, 11, 11, 11, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; slower idle} ;; END
switch to robot seed 60000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; slower idle} ;; END
current time: 7.040693998336792
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 3, 1]
all eval rewards: [-1, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; lane_right idle} ;; END
switch to robot seed 10000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; lane_right idle} ;; END
current time: 11.098088264465332

 complete for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ;} ;; END
attempt to drop:
unable to put into queue and get cost 0 reward -1 for seed 2000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; C } ;; END
current time: 11.22768497467041
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [3, 3, 5, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; lane_left idle} ;; END
current time: 13.863595485687256
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; idle idle} ;; END
switch to robot seed 10000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; idle idle} ;; END
current time: 18.299636602401733
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, -1, 0.7999999999999999]
all no_fuel: [True, True, False, False, False, False]
all time steps: [11, 11, 9, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; faster idle} ;; END
unable to put into queue and get cost 2 reward -1 for seed 2000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; C } ;; END
------ end current search -------

[ITER] 1
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; slower idle} ;; END with cost -0.4095238095238096
current time steps: 154  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 21.603721857070923
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right C } ; slower idle} ;; END
current time: 26.414073705673218
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { slower} ; slower idle} ;; END
unable to put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; slower idle} ;; END
current time: 53.07937264442444
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [12, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { faster} ; slower idle} ;; END
current time: 67.46601366996765
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { idle} ; slower idle} ;; END
current time: 95.14718842506409
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_left} ; slower idle} ;; END
------ end current search -------

[ITER] 2
go to next goal: 20
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; lane_right idle} ;; END with cost -0.4095238095238096
current time steps: 1314  current reward: 0.8095238095238096  current eval reward: 0.10095238095238097
current time: 121.87457275390625
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { lane_left C }  lane_right idle} ;; END
current time: 125.32601523399353
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { idle C }  lane_right idle} ;; END
current time: 128.77204418182373

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; lane_right idle} ;; END
unable to put into queue and get cost 2 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; lane_right idle} ;; END
current time: 129.53000926971436
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 1.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster C }  lane_right idle} ;; END
current time: 132.9870641231537
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { slower C }  lane_right idle} ;; END
current time: 136.5270037651062
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 21, 21, 21, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]
case 3: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(right_is_clear_3) { lane_right}  idle} ;; END
[ITER] 3
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster C }  lane_right idle} ;; END with cost -0.7095238095238094
current time steps: 1557  current reward: 1.3095238095238095  current eval reward: 1.0361904761904763
current time: 141.74313759803772
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster lane_right C }  lane_right idle} ;; END
current time: 144.5442636013031
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 1.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster slower C }  lane_right idle} ;; END
current time: 147.64756226539612
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [7, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]
case 2: put into queue and get cost 3 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 152.25686287879944
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 1.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster lane_left C }  lane_right idle} ;; END
current time: 155.2424647808075
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster faster C }  lane_right idle} ;; END
------ end current search -------

[ITER] 4
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END with cost -3.876190476190477
current time steps: 1796  current reward: 4.476190476190477  current eval reward: 0.4628571428571429
current time: 158.3184049129486

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { slower C } ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 158.57247972488403
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [8, 21, 21, 17, 3, 1]
all eval rewards: [-1, -1, -1, -1, -1]
expand: put into queue and get cost 4 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 163.9105155467987
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [8, 21, 21, 17, 3, 1]
all eval rewards: [-1, -1, -1, -1, -1]
expand: put into queue and get cost 4 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_left} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 168.5897297859192

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { idle C } ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 168.78899693489075

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { faster C } ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { C } ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 5
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END with cost -3.6761904761904773
current time steps: 1922  current reward: 4.476190476190477  current eval reward: -1.0
current time: 168.94326734542847

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(front_is_clear_3) { lane_left C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(front_is_clear_3) { lane_left C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 170.17357563972473
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [9, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]
add if: put into queue and get cost 5 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(front_is_clear_3) { idle C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 175.3044786453247
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [15, 21, 21, 17, 6, 6]
all eval rewards: [-1, -1, -1, -1, -1]
case one applied: put into queue and get cost 4 reward 5.142857142857143 for seed 10000 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 182.50285601615906
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [9, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]
add if: put into queue and get cost 5 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(front_is_clear_3) { faster C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 187.67852687835693
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [9, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]
add if: put into queue and get cost 5 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(front_is_clear_3) { slower C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 192.74256443977356

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 193.98694729804993
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [9, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 5 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { idle C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 198.97155332565308
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [9, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 5 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { faster C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 204.38483238220215
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [9, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 5 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { slower C }  lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
[ITER] 6
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END with cost -4.342857142857143
current time steps: 2371  current reward: 5.142857142857143  current eval reward: -1.0
current time: 209.82103753089905
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [16, 21, 21, 18, 6, 7]
all eval rewards: [4.80952380952381, 6.857142857142858, 11.80952380952381, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 5 reward 5.142857142857143 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 217.20110297203064
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [16, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, 7.857142857142858, 12.80952380952381, -1, 3.8380952380952382]
add if: put into queue and get cost 5 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
current time: 224.91858530044556
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [16, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, 7.857142857142858, 12.80952380952381, -1, 3.8380952380952382]
add if: put into queue and get cost 5 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
current time: 232.1137990951538

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 234.49732327461243
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [16, 21, 21, 18, 6, 7]
all eval rewards: [4.80952380952381, 6.857142857142858, 11.80952380952381, -1, 2.8380952380952382]
add if: put into queue and get cost 5 reward 5.142857142857143 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 242.19102215766907

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(front_is_clear_3) { faster} } ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(front_is_clear_3) { faster} } ELSE { lane_right} idle} ;; END
[ITER] 7
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END with cost -4.476190476190475
current time steps: 2663  current reward: 5.476190476190475  current eval reward: 5.862857142857143
current time: 244.4932336807251
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [17, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, 7.857142857142858, 12.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 250.14560651779175

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
current time: 250.4299716949463
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [17, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, 7.857142857142858, 12.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 255.92690777778625

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 258.589985370636

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 8
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END with cost -4.476190476190475
current time steps: 2809  current reward: 5.476190476190475  current eval reward: 5.862857142857143
current time: 258.9128186702728
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [17, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, 7.857142857142858, 12.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 264.74711775779724
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [17, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, 7.857142857142858, 12.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 270.52322340011597

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
current time: 270.8242521286011

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 273.2356460094452

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 9
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END with cost -4.276190476190475
current time steps: 2955  current reward: 5.476190476190475  current eval reward: 4.895238095238096
current time: 273.54248452186584
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [18, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, -1, 12.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 279.48958230018616
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [18, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, 7.857142857142858, 12.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left faster C }  faster} ELSE { lane_right} idle} ;; END
current time: 285.34428811073303
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [8.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [21, 21, 21, 18, 6, 7]
all eval rewards: [17.80952380952381, -1, 16.80952380952381, -1, -1]

found but not success in all seeds with reward 5.976190476190477 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
case 2: put into queue and get cost 6 reward 5.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 296.8283121585846
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [18, 21, 21, 18, 6, 7]
all eval rewards: [5.80952380952381, 7.857142857142858, 12.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 5.476190476190475 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 302.6731700897217

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 10
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -4.776190476190477
current time steps: 3247  current reward: 5.976190476190477  current eval reward: 6.323809523809524
current time: 302.8537828922272
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 8.80952380952381, 8.80952380952381, 8.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 6, 11]
all eval rewards: [17.80952380952381, -1, 16.80952380952381, -1, -1]

found but not success in all seeds with reward 5.976190476190477 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 50000
case one applied: put into queue and get cost 6 reward 5.976190476190477 for seed 70000 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 312.81214356422424
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 8.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 21, 21, 21, 6, 8]
all eval rewards: [18.80952380952381, -1, 13.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 6.142857142857143 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 321.8917329311371
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 8.80952380952381, 0.8095238095238096, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 21, 21, 21, 6, 8]
all eval rewards: [18.80952380952381, -1, 13.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { lane_right C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { lane_right C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 330.1606991291046
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 8.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 21, 21, 21, 6, 8]
all eval rewards: [18.80952380952381, -1, 13.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 6.142857142857143 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { faster C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 338.7756881713867
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 8.80952380952381, 8.80952380952381, 8.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 21, 21, 21, 6, 8]
all eval rewards: [17.80952380952381, -1, 12.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 5.976190476190477 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 347.50605034828186

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(not(left_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(not(left_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 11
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -4.776190476190477
current time steps: 3635  current reward: 5.976190476190477  current eval reward: 6.323809523809524
current time: 350.2438097000122
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 21, 21, 21, 21, 12]
all eval rewards: [17.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 7 reward 5.976190476190477 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 357.5100224018097
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 21, 21, 21, 21, 12]
all eval rewards: [17.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 7 reward 5.976190476190477 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 364.8221607208252
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [17.80952380952381, -1, 16.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward 7.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 377.32995319366455
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 21, 21, 21, 21, 12]
all eval rewards: [17.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 7 reward 5.976190476190477 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 384.4401123523712
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 21, 21, 21, 21, 12]
all eval rewards: [17.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 7 reward 5.976190476190477 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 391.8324029445648
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, -1]
all no_fuel: [True, True, True, True, True, False]
all time steps: [21, 21, 21, 21, 21, 14]
all eval rewards: [17.80952380952381, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { IF(front_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { IF(front_is_clear_3) { lane_right} } idle} ;; END
[ITER] 12
go to next goal: 30
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -4.742857142857143
current time steps: 4222  current reward: 6.142857142857143  current eval reward: 5.923809523809524
current time: 400.8631410598755

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 403.62670731544495

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle faster C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 403.91669392585754
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 18.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 6, 9]
all eval rewards: [18.80952380952381, -1, 13.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 11.142857142857144 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 411.1955637931824

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_right C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 411.5050091743469
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 18.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 6, 9]
all eval rewards: [18.80952380952381, -1, 13.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 11.142857142857144 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 13
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -9.542857142857144
current time steps: 4438  current reward: 11.142857142857144  current eval reward: 5.923809523809524
current time: 419.47742199897766

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower faster C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 419.7997055053711

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower lane_right C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 420.0996675491333

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 423.09027552604675

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower lane_left C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 423.3341178894043

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 14
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -9.542857142857144
current time steps: 4438  current reward: 11.142857142857144  current eval reward: 5.923809523809524
current time: 423.60026121139526
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 18.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [21, 31, 31, 31, 6, 10]
all eval rewards: [18.80952380952381, -1, 13.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 11.142857142857144 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left lane_left C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 431.5804753303528

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left lane_right C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 431.87310099601746
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 18.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [21, 31, 31, 31, 6, 10]
all eval rewards: [18.80952380952381, -1, 13.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 11.142857142857144 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left faster C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 439.93210339546204
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 18.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [21, 31, 31, 31, 6, 10]
all eval rewards: [18.80952380952381, -1, 13.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 11.142857142857144 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 447.6580991744995
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [18.81904761904762, 18.80952380952381, 18.80952380952381, 18.80952380952381, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [31, 31, 31, 31, 6, 12]
all eval rewards: [18.80952380952381, -1, 18.80952380952381, -1, -1]

found but not success in all seeds with reward 12.80952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 8 reward 12.80952380952381 for seed 70000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 15
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -11.20952380952381
current time steps: 4876  current reward: 12.80952380952381  current eval reward: 6.923809523809524
current time: 460.5319676399231
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 9 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 468.9636676311493
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 9 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 477.3036365509033

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 481.05409693717957
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 9 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 489.7567238807678
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [7, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 9 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 498.65254282951355

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(front_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(front_is_clear_3) { lane_right} } idle} ;; END
[ITER] 16
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END with cost -11.00952380952381
current time steps: 5424  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 502.49680256843567
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left slower C }  lane_right} idle} ;; END
current time: 510.95054841041565

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 511.25168442726135
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} idle} ;; END
current time: 519.1790425777435

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left} ELSE { lane_right}} idle} ;; END
current time: 520.5285401344299
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 17
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END with cost -11.00952380952381
current time steps: 5835  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 528.4640619754791
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} idle} ;; END
current time: 536.9281809329987

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle} ELSE { lane_right}} idle} ;; END
current time: 540.3349537849426
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster C }  lane_right} idle} ;; END
current time: 548.2150855064392
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower C }  lane_right} idle} ;; END
current time: 556.6029660701752

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle}  lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle}  lane_right} idle} ;; END
------ end current search -------

[ITER] 18
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END with cost -11.00952380952381
current time steps: 6246  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 560.5327482223511

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster}  lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster}  lane_right} idle} ;; END
current time: 564.0685880184174
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left C }  lane_right} idle} ;; END
current time: 572.2105548381805
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster C }  lane_right} idle} ;; END
current time: 580.5625903606415

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
current time: 584.1676349639893
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 19
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END with cost -11.00952380952381
current time steps: 6657  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 592.5760591030121

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower} ELSE { lane_right}} idle} ;; END
current time: 596.351316690445

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower}  lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower}  lane_right} idle} ;; END
current time: 600.450119972229
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster C }  lane_right} idle} ;; END
current time: 608.5716233253479
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower C }  lane_right} idle} ;; END
current time: 616.058845281601
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [8, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 20
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left slower C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 7068  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 624.6243143081665
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left slower lane_right C }  lane_right} idle} ;; END
current time: 632.8415577411652
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left slower lane_left C }  lane_right} idle} ;; END
current time: 640.5155408382416
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [16, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
case 2: put into queue and get cost 10 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left slower} ELSE { lane_right}} idle} ;; END
current time: 650.9214127063751
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left slower faster C }  lane_right} idle} ;; END
current time: 659.3254098892212
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left slower slower C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 21
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 7753  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 667.6462755203247
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster lane_left C }  lane_right} idle} ;; END
current time: 675.5767784118652

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster} ELSE { lane_right}} idle} ;; END
current time: 677.0652720928192
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster faster C }  lane_right} idle} ;; END
current time: 685.4844319820404

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster lane_right C }  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} idle} ;; END
current time: 685.7869052886963
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left faster slower C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 22
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 8164  current reward: 12.80952380952381  current eval reward: 2.961904761904762
current time: 693.8124523162842

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right} ELSE { lane_right}} idle} ;; END
current time: 695.2218587398529
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right slower C }  lane_right} idle} ;; END
current time: 703.0895631313324
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  lane_right} idle} ;; END
current time: 710.9446694850922
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right lane_right C }  lane_right} idle} ;; END
current time: 719.0018773078918

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 23
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 8575  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 719.3125858306885

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left lane_right C }  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} idle} ;; END
current time: 719.6281204223633
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left slower C }  lane_right} idle} ;; END
current time: 727.3753039836884

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left} ELSE { lane_right}} idle} ;; END
current time: 728.8403253555298
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left faster C }  lane_right} idle} ;; END
current time: 737.0083122253418
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle lane_left lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 24
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 8986  current reward: 12.80952380952381  current eval reward: 2.961904761904762
current time: 745.0778522491455

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster} ELSE { lane_right}} idle} ;; END
current time: 746.3626403808594
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster lane_right C }  lane_right} idle} ;; END
current time: 754.3158538341522

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster C }  lane_right} idle} ;; END
current time: 754.6133704185486
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster slower C }  lane_right} idle} ;; END
current time: 762.8352930545807
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle faster lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 25
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 9397  current reward: 12.80952380952381  current eval reward: 2.961904761904762
current time: 770.7363333702087

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower} ELSE { lane_right}} idle} ;; END
current time: 772.2394051551819
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower lane_left C }  lane_right} idle} ;; END
current time: 780.0186455249786
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower slower C }  lane_right} idle} ;; END
current time: 788.3435468673706

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower}  lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower}  lane_right} idle} ;; END
current time: 790.1289720535278
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 26
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 9808  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 798.0211153030396
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left slower C }  lane_right} idle} ;; END
current time: 805.9086418151855
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left lane_left C }  lane_right} idle} ;; END
current time: 813.6833982467651

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left} ELSE { lane_right}} idle} ;; END
current time: 815.1784861087799
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left faster C }  lane_right} idle} ;; END
current time: 822.70099401474

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left lane_right C }  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 27
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 10219  current reward: 12.80952380952381  current eval reward: 2.961904761904762
current time: 823.0060222148895
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster lane_right C }  lane_right} idle} ;; END
current time: 831.1778426170349

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster C }  lane_right} idle} ;; END
current time: 831.4698011875153
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster lane_left C }  lane_right} idle} ;; END
current time: 839.623866558075
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster slower C }  lane_right} idle} ;; END
current time: 847.5008380413055

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster faster} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 28
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 10630  current reward: 12.80952380952381  current eval reward: 2.961904761904762
current time: 848.7597529888153

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower}  lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower}  lane_right} idle} ;; END
current time: 850.5050604343414
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower faster C }  lane_right} idle} ;; END
current time: 858.957380771637
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower lane_left C }  lane_right} idle} ;; END
current time: 867.6230590343475

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower} ELSE { lane_right}} idle} ;; END
current time: 869.2665598392487
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster slower slower C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 29
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 11041  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 877.5554676055908
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster lane_left C }  lane_right} idle} ;; END
current time: 885.6218135356903
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster faster C }  lane_right} idle} ;; END
current time: 893.8456406593323

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster} ELSE { lane_right}} idle} ;; END
current time: 897.8083207607269

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster}  lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster}  lane_right} idle} ;; END
current time: 901.8135900497437
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower faster slower C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 30
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower C }  lane_right} idle} ;; END with cost -10.80952380952381
current time steps: 11452  current reward: 12.80952380952381  current eval reward: 3.323809523809524
current time: 910.0258076190948
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [31, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower}  lane_right} idle} ;; END
switch to robot seed 60000
case 2: put into queue and get cost 10 reward 14.976190476190476 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower}  lane_right} idle} ;; END
current time: 923.8612847328186
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower faster C }  lane_right} idle} ;; END
current time: 932.4009392261505
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower slower C }  lane_right} idle} ;; END
current time: 940.2684020996094
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [9, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 11 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower lane_left C }  lane_right} idle} ;; END
current time: 948.3045074939728
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [31, 31, 31, 31, 31, 13]
all eval rewards: [18.80952380952381, -1, 9.80952380952381, -1, -1]

found but not success in all seeds with reward 14.80952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower} ELSE { lane_right}} idle} ;; END
switch to robot seed 60000
case 2: put into queue and get cost 10 reward 14.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 31
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower}  lane_right} idle} ;; END with cost -12.976190476190476
current time steps: 12137  current reward: 14.976190476190476  current eval reward: 5.323809523809524
current time: 962.410578250885
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower}  lane_right} idle} ;; END
current time: 972.2319369316101
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower}  lane_right} idle} ;; END
current time: 982.160894870758
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower}  lane_right} idle} ;; END
current time: 992.2132375240326
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower}  lane_right} idle} ;; END
current time: 1002.048837184906

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower}  lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower}  lane_right} idle} ;; END
current time: 1006.2267997264862
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [13, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 3: put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  lane_right} idle} ;; END
[ITER] 32
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  lane_right} idle} ;; END with cost -12.976190476190476
current time steps: 12912  current reward: 14.976190476190476  current eval reward: 2.961904761904762
current time: 1015.9473114013672
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  lane_right} idle} ;; END
current time: 1026.1686000823975
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  lane_right} idle} ;; END
current time: 1036.3435804843903
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  lane_right} idle} ;; END
current time: 1048.3654344081879
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  lane_right} idle} ;; END
current time: 1057.9244158267975
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  lane_right} idle} ;; END
current time: 1067.5841116905212
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 1077.3956961631775
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 1087.5976679325104
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 1097.7035102844238
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 1107.6391515731812
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(front_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(front_is_clear_3) { lane_right} } idle} ;; END
[ITER] 33
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower} ELSE { lane_right}} idle} ;; END with cost -12.80952380952381
current time steps: 14366  current reward: 14.80952380952381  current eval reward: 5.123809523809524
current time: 1120.006907939911
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower} ELSE { lane_right}} idle} ;; END
current time: 1129.8582637310028
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower} ELSE { lane_right}} idle} ;; END
current time: 1139.6922690868378
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower} ELSE { lane_right}} idle} ;; END
current time: 1149.5028684139252
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_right}} idle} ;; END
current time: 1160.2725853919983
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 9.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower slower} ELSE { lane_right}} idle} ;; END
current time: 1172.9569687843323

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} } ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} } ELSE { lane_right}} idle} ;; END
[ITER] 34
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 15141  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 1177.1530103683472
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left C }  slower}  lane_right} idle} ;; END
current time: 1185.2475671768188
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster C }  slower}  lane_right} idle} ;; END
current time: 1192.9343631267548
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 7.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left}  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left}  slower}  lane_right} idle} ;; END
current time: 1205.332043170929
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle C }  slower}  lane_right} idle} ;; END
current time: 1213.4831821918488
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 35
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 15916  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 1221.6229603290558
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  lane_right} idle} ;; END
current time: 1231.590405702591

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle faster C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower}  lane_right} idle} ;; END
current time: 1231.9094686508179
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left C }  slower}  lane_right} idle} ;; END
current time: 1239.9131345748901
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle}  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle}  slower}  lane_right} idle} ;; END
current time: 1251.687956571579
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 36
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 16536  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 1259.351727962494
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle C }  slower}  lane_right} idle} ;; END
current time: 1267.855119228363
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
case 2: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1280.0634577274323
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left C }  slower}  lane_right} idle} ;; END
current time: 1288.1818308830261
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 1297.9767863750458
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 37
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 17311  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 1306.0404710769653

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster idle C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower}  lane_right} idle} ;; END
current time: 1306.33176279068

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster faster C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower}  lane_right} idle} ;; END
current time: 1306.6318361759186
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 1316.9817988872528

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster slower C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower}  lane_right} idle} ;; END
current time: 1317.284526348114

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster lane_left C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 38
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 17466  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 1317.5892670154572
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} idle} ;; END
current time: 1326.291251897812

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left} ELSE { lane_right}} idle} ;; END
current time: 1329.4849772453308
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} idle} ;; END
current time: 1337.7801785469055
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower C }  lane_right} idle} ;; END
current time: 1346.4321599006653
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 39
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 18086  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 1354.93496966362

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle} ELSE { lane_right}} idle} ;; END
current time: 1357.3875346183777
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower C }  lane_right} idle} ;; END
current time: 1365.4764103889465

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 1365.7212707996368
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} idle} ;; END
current time: 1373.8236057758331
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle}  lane_right} idle} ;; END
------ end current search -------

[ITER] 40
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 18551  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 1386.443151473999

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 1386.7216567993164

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 1387.0204899311066

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 1387.3094160556793

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster}  lane_right} idle} ;; END
current time: 1389.401466369629

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 41
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 18551  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 1391.7013366222382
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster C }  lane_right} idle} ;; END
current time: 1399.914278268814
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left C }  lane_right} idle} ;; END
current time: 1407.650349855423
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 9.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower} ELSE { lane_right}} idle} ;; END
current time: 1420.0465767383575

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower}  lane_right} idle} ;; END
current time: 1424.3678328990936
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 42
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 19171  current reward: 14.976190476190476  current eval reward: 2.961904761904762
current time: 1432.5942606925964
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  lane_right} idle} ;; END
current time: 1442.1775860786438
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  lane_right} idle} ;; END
current time: 1451.667475938797
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  lane_right} idle} ;; END
current time: 1463.885025024414
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  lane_right} idle} ;; END
current time: 1472.7554197311401
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  lane_right} idle} ;; END
current time: 1482.0936205387115
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 1492.0456717014313
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 1502.0542242527008

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 1504.0103287696838
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 1514.1530487537384

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  IF(front_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}}  IF(front_is_clear_3) { lane_right} } idle} ;; END
[ITER] 43
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 20315  current reward: 14.976190476190476  current eval reward: 5.323809523809524
current time: 1516.4176993370056
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(right_is_clear_3)) { lane_left C }  IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1528.682790517807
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(right_is_clear_3)) { idle C }  IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1541.0124707221985
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(right_is_clear_3)) { lane_right C }  IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1553.4641327857971
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(right_is_clear_3)) { faster C }  IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1565.1733117103577
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
case one applied: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1577.4660069942474
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { lane_left C }  slower}  lane_right} idle} ;; END
current time: 1589.1080014705658
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { idle C }  slower}  lane_right} idle} ;; END
current time: 1600.5413188934326
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { lane_right C }  slower}  lane_right} idle} ;; END
current time: 1612.0878412723541
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
add if: put into queue and get cost 12 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster C }  slower}  lane_right} idle} ;; END
current time: 1624.5584790706635
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 3: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
[ITER] 44
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 21865  current reward: 14.976190476190476  current eval reward: 2.961904761904762
current time: 1636.1545617580414
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 1646.4376168251038
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 1656.8493964672089
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [24, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case one applied: put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 1667.8317577838898
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 1677.70552444458
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [14, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 1687.4588022232056
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(left_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 1697.305168390274
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(left_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 1707.0525629520416
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 1717.0128033161163
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(left_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 1727.3386483192444
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(left_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(left_is_clear_3) { lane_right} } idle} ;; END
[ITER] 45
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 23415  current reward: 14.976190476190476  current eval reward: 2.961904761904762
current time: 1739.5232276916504
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 1750.0451231002808
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 1759.789671421051

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 1761.8959646224976
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 1771.490285396576
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, False]
all time steps: [13, 31, 31, 31, 31, 7]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 12.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 1780.9017901420593

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 1782.999428510666

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 1785.068631887436

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 1787.2108833789825

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 1789.3746948242188

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(front_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}}  IF(front_is_clear_3) { lane_right} } idle} ;; END
[ITER] 46
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 23939  current reward: 14.976190476190476  current eval reward: 5.323809523809524
current time: 1791.232221364975
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1803.3198418617249
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1815.8884768486023
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1828.7527434825897
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1841.5819478034973
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  lane_right} idle} ;; END
current time: 1853.6597084999084
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(not(right_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(not(right_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 1866.5238480567932
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(not(right_is_clear_3)) { idle C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(not(right_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 1878.1954894065857
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 1890.766978263855
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(not(right_is_clear_3)) { slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(not(right_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 1902.9864988327026
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 11.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(right_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower}  IF(right_is_clear_3) { lane_right} } idle} ;; END
[ITER] 47
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 25489  current reward: 14.976190476190476  current eval reward: 2.961904761904762
current time: 1916.2700073719025
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 1928.3678419589996
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 1940.572015285492
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 1952.6489691734314
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 1964.566519498825
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 1976.2053399085999
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 1988.6868131160736
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 2000.793787240982
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
add if: put into queue and get cost 12 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2013.17782664299
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 2025.1491737365723
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 2036.9494585990906
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 2049.5293431282043
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 2061.7771179676056
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  lane_right} idle} ;; END
current time: 2074.079130411148
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 2086.4254834651947
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 2098.8925161361694
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
add if: put into queue and get cost 12 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2110.868152856827
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 2123.285270690918
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(left_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(left_is_clear_3) { lane_right} } idle} ;; END
current time: 2135.1930572986603
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(right_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(right_is_clear_3) { lane_right} } idle} ;; END
[ITER] 48
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END with cost -12.776190476190475
current time steps: 28434  current reward: 14.976190476190476  current eval reward: 2.961904761904762
current time: 2147.300864458084
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [24, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 2158.4440491199493
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [24, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 2170.0841903686523
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 2182.2305433750153
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [24, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 2193.7225782871246
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [24, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 2204.9454073905945
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 2216.772821187973
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 2228.3932712078094
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
add if: put into queue and get cost 12 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2239.9470467567444
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 2251.012247800827
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(right_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 11 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(right_is_clear_3) { lane_right} } idle} ;; END
[ITER] 49
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster C }  slower}  lane_right} idle} ;; END with cost -12.742857142857144
current time steps: 29984  current reward: 15.142857142857144  current eval reward: 3.523809523809524
current time: 2263.9381079673767
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 12 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2276.084299325943

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster lane_left C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster C }  slower}  lane_right} idle} ;; END
current time: 2276.386379480362
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster faster C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster C }  slower}  lane_right} idle} ;; END
current time: 2284.1923875808716
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]

 no fuel with reward 15.142857142857144 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster slower C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster C }  slower}  lane_right} idle} ;; END
current time: 2292.3889553546906
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster idle C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 50
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END with cost -12.742857142857144
current time steps: 30604  current reward: 15.142857142857144  current eval reward: 3.523809523809524
current time: 2300.360667705536
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]

 no fuel with reward 15.142857142857144 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2308.6963210105896
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2317.17075920105
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
current time: 2329.4943630695343

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2329.8558642864227
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(left_is_clear_3)) { faster}  lane_right} idle} ;; END
------ end current search -------

[ITER] 51
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END with cost -12.742857142857144
current time steps: 31224  current reward: 15.142857142857144  current eval reward: 3.523809523809524
current time: 2341.9885160923004
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster}  lane_right} idle} ;; END
current time: 2354.7564420700073
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2362.632308483124
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
current time: 2375.7070863246918
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]

 no fuel with reward 15.142857142857144 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2383.820287466049

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(right_is_clear_3) { slower} }  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 52
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END with cost -12.742857142857144
current time steps: 31844  current reward: 15.142857142857144  current eval reward: 3.523809523809524
current time: 2384.0901198387146
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster}  lane_right} idle} ;; END
current time: 2396.82994556427
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster} ELSE { lane_right}} idle} ;; END
current time: 2409.1941916942596
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]
expand: put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster C }  lane_right} idle} ;; END
current time: 2417.088147163391
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
expand: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster slower C }  lane_right} idle} ;; END
current time: 2424.858407974243
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 53
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END with cost -12.742857142857144
current time steps: 32619  current reward: 15.142857142857144  current eval reward: 2.961904761904762
current time: 2433.3657264709473
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2445.8693029880524
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2457.6754989624023
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2469.863958120346
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2482.454160451889
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(left_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2495.19687128067

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(left_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(left_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 2499.835095643997
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(left_is_clear_3)) { idle C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(left_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 2512.233242034912
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2524.4477994441986
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]

 no fuel with reward 15.142857142857144 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(left_is_clear_3)) { slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(left_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 2536.571118116379
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2549.248007297516
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2561.519658088684
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { faster C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2573.3418204784393
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
add if: put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(right_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  lane_right} idle} ;; END
current time: 2585.33611869812

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(right_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(right_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 2589.8604521751404
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(right_is_clear_3)) { idle C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(right_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 2601.8723678588867
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(right_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 2614.225415468216
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]

 no fuel with reward 15.142857142857144 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(right_is_clear_3)) { slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(not(right_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 2626.729501247406
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(left_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(left_is_clear_3) { lane_right} } idle} ;; END
current time: 2638.6254453659058
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(right_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  IF(not(right_is_clear_3)) { faster} ELSE { slower}}  IF(right_is_clear_3) { lane_right} } idle} ;; END
[ITER] 54
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster C }  lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 35254  current reward: 15.30952380952381  current eval reward: 3.723809523809524
current time: 2650.812614440918
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 13 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster} ELSE { lane_right}} idle} ;; END
current time: 2663.3745408058167
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]
expand: put into queue and get cost 14 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster slower C }  lane_right} idle} ;; END
current time: 2671.571295261383
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster}  lane_right} idle} ;; END
current time: 2683.9378905296326
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 3.8095238095238098, -1, -1]
expand: put into queue and get cost 14 reward 15.476190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster C }  lane_right} idle} ;; END
current time: 2691.79155254364

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 14 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 55
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster C }  lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 35874  current reward: 15.476190476190476  current eval reward: 3.923809523809524
current time: 2692.0746648311615
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 4.80952380952381, -1, -1]
expand: put into queue and get cost 15 reward 15.642857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster C }  lane_right} idle} ;; END
current time: 2700.3746390342712
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster}  lane_right} idle} ;; END
unable to put into queue and get cost 14 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster}  lane_right} idle} ;; END
current time: 2713.0333988666534
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 3.8095238095238098, -1, -1]
expand: put into queue and get cost 15 reward 15.476190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster slower C }  lane_right} idle} ;; END
current time: 2720.8793728351593

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster lane_left C }  lane_right} idle} ;; END
unable to put into queue and get cost 15 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster C }  lane_right} idle} ;; END
current time: 2721.1584782600403
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 14 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 56
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster C }  lane_right} idle} ;; END with cost -12.642857142857144
current time steps: 36494  current reward: 15.642857142857144  current eval reward: 4.123809523809524
current time: 2733.460615634918
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster}  lane_right} idle} ;; END
unable to put into queue and get cost 15 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster}  lane_right} idle} ;; END
current time: 2746.082740545273
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 4.80952380952381, -1, -1]
expand: put into queue and get cost 16 reward 15.642857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster slower C }  lane_right} idle} ;; END
current time: 2754.3654057979584
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 5.80952380952381, -1, -1]
expand: put into queue and get cost 16 reward 15.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster C }  lane_right} idle} ;; END
current time: 2762.2084517478943
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 15 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster} ELSE { lane_right}} idle} ;; END
current time: 2774.8613736629486
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 4.80952380952381, -1, -1]
expand: put into queue and get cost 16 reward 15.642857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 57
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower} ELSE { lane_right}} idle} ;; END with cost -12.609523809523811
current time steps: 37269  current reward: 14.80952380952381  current eval reward: 3.323809523809524
current time: 2783.458045244217
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2791.6981892585754
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2800.091215610504

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_right}} idle} ;; END
current time: 2803.2618386745453
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2810.842320919037
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 6.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left}  slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left}  slower} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 58
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower} ELSE { lane_right}} idle} ;; END with cost -12.609523809523811
current time steps: 37889  current reward: 14.80952380952381  current eval reward: 3.323809523809524
current time: 2823.552639722824

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle}  slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle}  slower} ELSE { lane_right}} idle} ;; END
current time: 2827.5305802822113
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2835.6225731372833

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle faster C }  slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2835.9441998004913

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}} ELSE { lane_right}} idle} ;; END
current time: 2838.2777473926544
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_right C }  slower} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 59
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower} ELSE { lane_right}} idle} ;; END with cost -12.609523809523811
current time steps: 38199  current reward: 14.80952380952381  current eval reward: 3.323809523809524
current time: 2846.1158471107483
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2854.72110581398
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
expand: put into queue and get cost 12 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2863.2692935466766

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower} ELSE { lane_right}} idle} ;; END
current time: 2867.2231492996216
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}} ELSE { lane_right}} idle} ;; END
current time: 2879.3686504364014
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 12.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 12 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_right C }  slower} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 60
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_right}} idle} ;; END with cost -12.609523809523811
current time steps: 38819  current reward: 14.80952380952381  current eval reward: 3.323809523809524
current time: 2887.198017835617

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster slower C }  slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2887.5127573013306

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster lane_right C }  slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2887.82013463974

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster faster C }  slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2888.123855829239

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster lane_left C }  slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_right}} idle} ;; END
current time: 2888.4319920539856

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 11 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 61
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster C }  lane_right} idle} ;; END with cost -12.609523809523811
current time steps: 38819  current reward: 15.80952380952381  current eval reward: 4.323809523809524
current time: 2890.7457768917084
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 16 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster} ELSE { lane_right}} idle} ;; END
current time: 2902.8888597488403
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 6.80952380952381, -1, -1]
expand: put into queue and get cost 17 reward 15.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster faster C }  lane_right} idle} ;; END
current time: 2910.978743314743
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 5.80952380952381, -1, -1]
expand: put into queue and get cost 17 reward 15.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster lane_left C }  lane_right} idle} ;; END
current time: 2919.23974609375
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 16.142857142857142 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster}  lane_right} idle} ;; END
unable to put into queue and get cost 16 reward 16.142857142857142 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster}  lane_right} idle} ;; END
current time: 2931.4389548301697
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 5.80952380952381, -1, -1]
expand: put into queue and get cost 17 reward 15.80952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}}  IF(not(right_is_clear_3)) { faster faster faster faster faster slower C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 62
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 39594  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 2939.7033722400665
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left idle C }  slower}  lane_right} idle} ;; END
current time: 2947.8886947631836
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left} ELSE { slower}}  lane_right} idle} ;; END
current time: 2957.765524864197
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left slower C }  slower}  lane_right} idle} ;; END
current time: 2965.6764526367188
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left faster C }  slower}  lane_right} idle} ;; END
current time: 2973.9165182113647
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left lane_left C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 63
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 40369  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 2982.2901673316956
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster slower C }  slower}  lane_right} idle} ;; END
current time: 2990.621607065201
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster idle C }  slower}  lane_right} idle} ;; END
current time: 2998.944126367569

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster lane_right C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster C }  slower}  lane_right} idle} ;; END
current time: 2999.2363266944885
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster faster C }  slower}  lane_right} idle} ;; END
current time: 3007.1475689411163
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left faster lane_left C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 64
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 40989  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3014.992936372757
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle lane_left C }  slower}  lane_right} idle} ;; END
current time: 3022.868734359741
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle faster C }  slower}  lane_right} idle} ;; END
current time: 3030.975033521652
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle slower C }  slower}  lane_right} idle} ;; END
current time: 3039.296349287033

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle lane_right C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle C }  slower}  lane_right} idle} ;; END
current time: 3039.6012489795685
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle idle C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 65
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 41609  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3047.9616091251373
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right} ELSE { slower}}  lane_right} idle} ;; END
current time: 3058.4073548316956
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right lane_left C }  slower}  lane_right} idle} ;; END
current time: 3066.9615280628204

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right idle C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  slower}  lane_right} idle} ;; END
current time: 3067.2589197158813

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right faster C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  slower}  lane_right} idle} ;; END
current time: 3067.5570917129517

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right slower C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 66
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 41919  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3067.8721981048584
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left idle C }  slower}  lane_right} idle} ;; END
current time: 3076.470772743225
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left faster C }  slower}  lane_right} idle} ;; END
current time: 3084.8509590625763
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left slower C }  slower}  lane_right} idle} ;; END
current time: 3092.819777727127
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left lane_left C }  slower}  lane_right} idle} ;; END
current time: 3100.7226045131683

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left lane_right C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 67
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 42539  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3101.020443201065

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle lane_left C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle C }  slower}  lane_right} idle} ;; END
current time: 3101.3171894550323

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle slower C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle C }  slower}  lane_right} idle} ;; END
current time: 3101.5948569774628

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle idle C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle C }  slower}  lane_right} idle} ;; END
current time: 3101.8894095420837
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle} ELSE { slower}}  lane_right} idle} ;; END
current time: 3112.500812768936

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle faster C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { idle idle C }  slower}  lane_right} idle} ;; END
------ end current search -------

[ITER] 68
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 42694  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3112.790165424347
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle faster C }  slower}  lane_right} idle} ;; END
current time: 3120.802103281021

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle lane_left C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle C }  slower}  lane_right} idle} ;; END
current time: 3121.015836954117
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle idle C }  slower}  lane_right} idle} ;; END
current time: 3129.0437293052673
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle slower C }  slower}  lane_right} idle} ;; END
current time: 3137.0400092601776
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle} ELSE { slower}}  lane_right} idle} ;; END
------ end current search -------

[ITER] 69
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 43314  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3147.1955256462097

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left faster C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left C }  slower}  lane_right} idle} ;; END
current time: 3147.505247592926

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left slower C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left C }  slower}  lane_right} idle} ;; END
current time: 3147.799221754074
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left lane_left C }  slower}  lane_right} idle} ;; END
current time: 3155.803995847702

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left idle C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left C }  slower}  lane_right} idle} ;; END
current time: 3156.0848631858826
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left} ELSE { slower}}  lane_right} idle} ;; END
------ end current search -------

[ITER] 70
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster C }  slower}  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 43624  current reward: 14.976190476190476  current eval reward: 3.523809523809524
current time: 3166.3015785217285
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 1.8095238095238098, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster slower C }  slower}  lane_right} idle} ;; END
current time: 3174.401298046112
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster idle C }  slower}  lane_right} idle} ;; END
current time: 3182.753888607025

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster lane_left C }  slower}  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster C }  slower}  lane_right} idle} ;; END
current time: 3183.049286365509
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 2.8095238095238098, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster faster C }  slower}  lane_right} idle} ;; END
current time: 3191.6183652877808
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [15, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
case 2: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(left_is_clear_3) { lane_right faster} ELSE { slower}}  lane_right} idle} ;; END
------ end current search -------

[ITER] 71
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 44244  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3201.6650171279907

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} idle} ;; END
current time: 3201.971462249756

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right} ELSE { lane_right}} idle} ;; END
current time: 3204.3457124233246

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right C }  lane_right} idle} ;; END
current time: 3204.6424736976624
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right}  lane_right} idle} ;; END
current time: 3216.907774925232
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 72
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 44554  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3225.2076811790466
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left faster lane_left C }  lane_right} idle} ;; END
current time: 3233.5665249824524
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left faster slower C }  lane_right} idle} ;; END
current time: 3241.663651943207
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [21, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
case 2: put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left faster} ELSE { lane_right}} idle} ;; END
current time: 3252.410359144211
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left faster faster C }  lane_right} idle} ;; END
current time: 3260.8368463516235

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left faster lane_right C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left faster C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 73
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 45174  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3261.13724732399
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower faster C }  lane_right} idle} ;; END
current time: 3269.7953786849976
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower slower C }  lane_right} idle} ;; END
current time: 3278.1895520687103
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower lane_left C }  lane_right} idle} ;; END
current time: 3286.341514110565
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 7.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower}  lane_right} idle} ;; END
current time: 3298.9519789218903
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 6.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left slower} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 74
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 45949  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3311.3867626190186
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left lane_left C }  lane_right} idle} ;; END
current time: 3320.2561371326447
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left faster C }  lane_right} idle} ;; END
current time: 3328.180956363678
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left slower C }  lane_right} idle} ;; END
current time: 3336.561392068863

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left}  lane_right} idle} ;; END
current time: 3339.7715089321136

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 75
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 46414  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3342.9401819705963
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower slower C }  lane_right} idle} ;; END
current time: 3351.383423805237
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower}  lane_right} idle} ;; END
current time: 3363.432886838913
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower faster C }  lane_right} idle} ;; END
current time: 3371.0070366859436

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower} ELSE { lane_right}} idle} ;; END
current time: 3375.260469675064
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle slower lane_left C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 76
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 47034  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3383.5472905635834
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left faster C }  lane_right} idle} ;; END
current time: 3391.8294353485107

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left lane_right C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left C }  lane_right} idle} ;; END
current time: 3392.1490635871887
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left slower C }  lane_right} idle} ;; END
current time: 3400.5351543426514
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left lane_left C }  lane_right} idle} ;; END
current time: 3409.199282884598

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { idle lane_left} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 77
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 47499  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3412.7049334049225

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster} ELSE { lane_right}} idle} ;; END
current time: 3415.198450088501

 fail for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 13 reward -1 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster C }  lane_right} idle} ;; END
current time: 3415.44837474823
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster lane_left C }  lane_right} idle} ;; END
current time: 3423.6217210292816
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, -1, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster}  lane_right} idle} ;; END
current time: 3435.5589241981506
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower faster slower C }  lane_right} idle} ;; END
------ end current search -------

[ITER] 78
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 47964  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3443.665458679199
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left faster C }  lane_right} idle} ;; END
current time: 3452.4106776714325
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left slower C }  lane_right} idle} ;; END
current time: 3460.8571939468384
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [2.8, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 5.80952380952381, -1, -1]

 no fuel with reward 15.30952380952381 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 15.30952380952381 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left}  lane_right} idle} ;; END
current time: 3473.535392522812
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left lane_left C }  lane_right} idle} ;; END
current time: 3481.914072036743
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [1.7999999999999998, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 4.80952380952381, -1, -1]

 no fuel with reward 15.142857142857144 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward 15.142857142857144 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower lane_left} ELSE { lane_right}} idle} ;; END
------ end current search -------

[ITER] 79
searching base on  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower C }  lane_right} idle} ;; END with cost -12.576190476190476
current time steps: 48739  current reward: 14.976190476190476  current eval reward: 3.323809523809524
current time: 3494.3622963428497
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower lane_left C }  lane_right} idle} ;; END
current time: 3502.8607125282288
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 8.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower} ELSE { lane_right}} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower} ELSE { lane_right}} idle} ;; END
current time: 3515.490268945694
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 9.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower}  lane_right} idle} ;; END
unable to put into queue and get cost 12 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower}  lane_right} idle} ;; END
current time: 3528.522300720215
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower faster C }  lane_right} idle} ;; END
current time: 3537.064165353775
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 18.80952380952381, 18.80952380952381, 18.81904761904762, 18.80952380952381, 13.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [16, 31, 31, 31, 31, 31]
all eval rewards: [18.80952380952381, -1, 0.8095238095238096, -1, -1]
expand: put into queue and get cost 13 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { WHILE(not(left_is_clear_3)) { lane_right} ; IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle IF(left_is_clear_3) { idle lane_left} ELSE { lane_left}} ELSE { faster}} ELSE { IF(not(front_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} }  IF(not(front_is_clear_3)) { slower slower slower C }  lane_right} idle} ;; END
------ end current search -------

best reward16.142857142857142
 total time steps132944
Total Time Used: 9595.62820148468
Current Reward: 16.142857142857142
for level 0
(' S ; END', 0, 0, 16.142857142857142, 8, 16.142857142857142)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 16.044823841874024, 8, 16.142857142857142)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.8645958535106533, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -1.1115946226798232, 1, -1)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, 0.6979291868439863, 1, 0.8095238095238096)
(' WHILE(all_true) { S } ; S ; END', 2, 0, 15.946790540890904, 2, 16.142857142857142)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -1.1115946226798232, 1, -1)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -1.1115946226798232, 1, -1)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.1115946226798232, 1, -1)
----------------------------
for level 3
(' WHILE(all_true) { C } ; S ; END', 3, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE( B ) { S } ; S } ; S ; END', 3, 0, 15.709368065088682, 1, 16.142857142857142)
----------------------------
for level 4
(' WHILE(all_true) { WHILE(front_is_clear_3) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(left_is_clear_3) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(right_is_clear_3) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(all_true) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(not(front_is_clear_3)) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(not(left_is_clear_3)) { S } ; S } ; S ; END', 4, 0, 15.342857142857142, 1, 16.142857142857142)
(' WHILE(all_true) { WHILE(not(right_is_clear_3)) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
----------------------------
Current Step: 8
Current Sketch:  WHILE(all_true) { C } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(all_true) { C } ;; END with cost 0
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [1, 1, 1, 1, 1, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
current time steps: 5  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 0.21564722061157227
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { idle idle} ;; END
switch to robot seed 10000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { idle idle} ;; END
current time: 6.896085977554321
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [11, 11, 11, 11, 11, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { slower idle} ;; END
switch to robot seed 60000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { slower idle} ;; END
current time: 13.285619020462036
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, -1, 0.7999999999999999]
all no_fuel: [True, True, False, False, False, False]
all time steps: [11, 11, 9, 3, 3, 1]
all eval rewards: [-1, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { faster idle} ;; END
unable to put into queue and get cost 2 reward -1 for seed 2000 for
  WHILE(all_true) { C } ;; END
current time: 17.184040546417236
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 3, 1]
all eval rewards: [-1, -1, -1, -1, -1]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { lane_right idle} ;; END
switch to robot seed 10000
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { lane_right idle} ;; END
current time: 22.627655744552612
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [3, 3, 5, 3, 3, 1]
all eval rewards: [-1, -1, 0.8095238095238096, 0.8666666666666667, -1]
expand: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { lane_left idle} ;; END
------ end current search -------

[ITER] 1
searching base on  WHILE(all_true) { idle idle} ;; END with cost -0.4095238095238096
current time steps: 154  current reward: 0.8095238095238096  current eval reward: -0.27619047619047615
current time: 26.486257791519165
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 3, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { lane_left C }  idle idle} ;; END
current time: 29.801669120788574
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, True]
all time steps: [11, 11, 11, 11, 3, 11]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { idle idle} ;; END
switch to robot seed 50000
case one applied: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for 
  WHILE(all_true) { idle idle} ;; END
current time: 35.98047208786011
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 3, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { lane_right C }  idle idle} ;; END
current time: 39.22662949562073
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 3, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { faster C }  idle idle} ;; END
current time: 42.37541222572327
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 11, 11, 11, 3, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, -1, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { slower C }  idle idle} ;; END
current time: 45.45818281173706
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 10
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, True]
all time steps: [11, 11, 11, 11, 3, 11]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { IF(left_is_clear_3) { idle}  idle} ;; END
switch to robot seed 50000
case 3: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(left_is_clear_3) { idle}  idle} ;; END
[ITER] 2
searching base on  WHILE(all_true) { slower idle} ;; END with cost -0.4095238095238096
current time steps: 400  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 52.113179206848145
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { lane_left C }  slower idle} ;; END
current time: 56.572548151016235
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { idle C }  slower idle} ;; END
current time: 61.59881091117859
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { lane_right C }  slower idle} ;; END
current time: 66.42865753173828
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { IF(not(left_is_clear_3)) { faster C }  slower idle} ;; END
current time: 71.35277247428894
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(all_true) { slower idle} ;; END
unable to put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { slower idle} ;; END
current time: 97.43341112136841
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(all_true) { IF(left_is_clear_3) { slower}  idle} ;; END
unable to put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { IF(left_is_clear_3) { slower}  idle} ;; END
[ITER] 3
go to next goal: 20
searching base on  WHILE(all_true) { lane_right idle} ;; END with cost -0.4095238095238096
current time steps: 1250  current reward: 0.8095238095238096  current eval reward: -1.0
current time: 124.53495788574219
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { lane_left C }  lane_right idle} ;; END
current time: 128.16682696342468
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { idle C }  lane_right idle} ;; END
current time: 131.73708820343018

 fail for 
  WHILE(all_true) { lane_right idle} ;; END
unable to put into queue and get cost 2 reward -1 for seed 10000 for
  WHILE(all_true) { lane_right idle} ;; END
current time: 132.3500213623047
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
add if: put into queue and get cost 3 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster C }  lane_right idle} ;; END
current time: 135.7553427219391
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [6, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 3 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { slower C }  lane_right idle} ;; END
current time: 139.2795057296753
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 21, 21, 21, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]
case 3: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { IF(right_is_clear_3) { lane_right}  idle} ;; END
[ITER] 4
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { faster C }  lane_right idle} ;; END with cost -0.7095238095238094
current time steps: 1493  current reward: 1.3095238095238095  current eval reward: 1.4361904761904765
current time: 146.50516819953918
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster slower C }  lane_right idle} ;; END
current time: 149.3958456516266
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 2.857142857142857, 0.8095238095238096, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster faster C }  lane_right idle} ;; END
current time: 152.44222688674927
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [7, 21, 21, 17, 3, 1]
all eval rewards: [-1, -1, -1, -1, -1]
case 2: put into queue and get cost 3 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 159.18040347099304
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 2.857142857142857, -1, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster lane_right C }  lane_right idle} ;; END
current time: 162.117858171463
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 1.8095238095238098, 1.8095238095238098, 1.8190476190476192, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 14, 14, 12, 3, 1]
all eval rewards: [0.8095238095238096, 1.8571428571428572, 0.8095238095238096, 1.8666666666666667, 1.8380952380952382]
expand: put into queue and get cost 4 reward 1.3095238095238095 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster lane_left C }  lane_right idle} ;; END
------ end current search -------

[ITER] 5
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END with cost -3.876190476190477
current time steps: 1732  current reward: 4.476190476190477  current eval reward: -1.0
current time: 164.92290043830872
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [8, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, -1, -1]
add if: put into queue and get cost 4 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 170.4730362892151

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 171.61538815498352
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 8.80952380952381, 8.80952380952381, 6.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [15, 21, 21, 17, 21, 21]
all eval rewards: [-1, -1, -1, -1, -1]
case one applied: put into queue and get cost 3 reward 6.142857142857143 for seed 10000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 179.63363313674927

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 180.545090675354

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(front_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 181.51408791542053
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 8.80952380952381, 8.80952380952381, 6.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [8, 21, 21, 17, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, -1, 0.8380952380952381]
add if: put into queue and get cost 4 reward 4.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { lane_left C }  lane_right} idle} ;; END
current time: 186.04500699043274

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { idle C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { idle C }  lane_right} idle} ;; END
current time: 187.12022495269775

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { faster C }  lane_right} idle} ;; END
current time: 188.17516541481018

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { slower C }  lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(not(left_is_clear_3)) { slower C }  lane_right} idle} ;; END
current time: 189.38042569160461

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(front_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(front_is_clear_3) { lane_right} } idle} ;; END
current time: 190.41827726364136

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(left_is_clear_3) { lane_right} } idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { IF(left_is_clear_3) { lane_right} } idle} ;; END
[ITER] 6
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END with cost -5.542857142857143
current time steps: 1959  current reward: 6.142857142857143  current eval reward: -1.0
current time: 191.52242136001587
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 8.80952380952381, 8.80952380952381, 6.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [16, 21, 21, 18, 21, 21]
all eval rewards: [2.8095238095238098, 6.857142857142858, 6.80952380952381, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 4 reward 6.142857142857143 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 198.52964687347412
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [16, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
add if: put into queue and get cost 4 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
current time: 206.4255657196045
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [16, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
add if: put into queue and get cost 4 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
current time: 214.12573194503784

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { faster} ELSE { lane_right} idle} ;; END
current time: 216.49286127090454
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [2.8095238095238098, 8.80952380952381, 8.80952380952381, 6.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [16, 21, 21, 18, 21, 21]
all eval rewards: [2.8095238095238098, 6.857142857142858, 6.80952380952381, -1, 2.8380952380952382]
add if: put into queue and get cost 4 reward 6.142857142857143 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 224.1769983768463

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(front_is_clear_3) { faster} } ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(front_is_clear_3) { faster} } ELSE { lane_right} idle} ;; END
[ITER] 7
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END with cost -5.676190476190477
current time steps: 2367  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 226.62227296829224

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
current time: 226.92056512832642

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle C }  faster} ELSE { lane_right} idle} ;; END
current time: 227.21363353729248
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [17, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 232.7400724887848

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 235.17835116386414
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [17, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 8
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END with cost -5.676190476190477
current time steps: 2571  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 241.02177953720093
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [17, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 247.12061190605164

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
current time: 247.42815971374512

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right C }  faster} ELSE { lane_right} idle} ;; END
current time: 247.7265498638153
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [17, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 253.46696496009827

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right} ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 9
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 2775  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 255.89190649986267

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 256.21283888816833
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 261.81471395492554
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 267.7235963344574

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 270.2365138530731

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle slower C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 10
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 2979  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 270.5644073486328
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left faster C }  faster} ELSE { lane_right} idle} ;; END
current time: 276.6846778392792

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 276.9808130264282
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 282.9560794830322
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [-1, -1, 10.80952380952381, -1, -1]
case 2: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 291.78884720802307
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left slower C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 11
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 3387  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 297.0401802062988
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 303.0956916809082
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [-1, -1, 10.80952380952381, -1, -1]
case 2: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 312.3240661621094
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 318.4291400909424

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 318.7289936542511
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 7.857142857142858, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left faster C }  faster} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 12
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 3795  current reward: 6.476190476190477  current eval reward: 3.4952380952380957
current time: 324.5718960762024

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower faster C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 324.8703372478485
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 330.8453004360199

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower lane_right C }  faster} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower C }  faster} ELSE { lane_right} idle} ;; END
current time: 331.1521520614624
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [18, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower lane_left C }  faster} ELSE { lane_right} idle} ;; END
current time: 337.1101567745209

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right slower} ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 13
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 3999  current reward: 6.476190476190477  current eval reward: 1.361904761904762
current time: 339.4429647922516
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 18.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 347.9046928882599

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 350.35086965560913
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [4.80952380952381, 19.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.642857142857143 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 359.569495677948

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 362.05791211128235
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 18.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower C }  idle lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 370.9633119106293

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle}  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle}  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 373.8212606906891

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 14
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.476190476190477
current time steps: 4305  current reward: 6.476190476190477  current eval reward: 1.361904761904762
current time: 376.50351643562317
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 18.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 385.3131799697876

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 387.91811656951904
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [-1, -1, 10.80952380952381, -1, -1]
case one applied: put into queue and get cost 5 reward 6.642857142857143 for seed 10000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 397.06549429893494

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 399.77279806137085
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [19, 21, 21, 18, 21, 21]
all eval rewards: [3.8095238095238098, 18.857142857142858, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower C }  lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 408.68575620651245
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [-1, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 6.476190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right}  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
case 3: put into queue and get cost 5 reward 6.476190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right}  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 420.0791380405426

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 15
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.642857142857143
current time steps: 4713  current reward: 6.642857142857143  current eval reward: 1.361904761904762
current time: 422.74655294418335

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 425.4454963207245
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(front_is_clear_3) { idle C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 433.3621048927307
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(front_is_clear_3) { lane_right C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 442.025616645813
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(front_is_clear_3) { faster C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 450.8246042728424
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [4.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.642857142857143 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(front_is_clear_3) { slower C }  lane_left} ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 459.70440673828125
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, False, True, True]
all time steps: [20, 21, 21, 18, 21, 21]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]
case 3: put into queue and get cost 5 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 16
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.80952380952381
current time steps: 5223  current reward: 6.80952380952381  current eval reward: 4.923809523809524
current time: 468.849054813385
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, -1, 7.80952380952381, -1, -1]

found but not success in all seeds with reward 6.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 479.8980658054352
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]

found but not success in all seeds with reward 6.976190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
add if: put into queue and get cost 6 reward 6.976190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 490.594110250473
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [6.80952380952381, 0.8571428571428571, -1, -1, -1]

found but not success in all seeds with reward 6.976190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
add if: put into queue and get cost 6 reward 6.976190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 501.76237750053406
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 6.976190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
case one applied: put into queue and get cost 5 reward 6.976190476190477 for seed 10000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 513.2005543708801
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [5.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [5.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]

found but not success in all seeds with reward 6.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
add if: put into queue and get cost 6 reward 6.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 524.5502014160156
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 8.80952380952381, 8.80952380952381, 7.81904761904762, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, False, True, True]
all time steps: [21, 21, 21, 18, 21, 21]
all eval rewards: [15.80952380952381, -1, 11.80952380952381, -1, -1]

found but not success in all seeds with reward 6.976190476190477 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
switch to robot seed 70000
case 3: put into queue and get cost 5 reward 6.976190476190477 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
[ITER] 17
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.976190476190477
current time steps: 5835  current reward: 6.976190476190477  current eval reward: 4.923809523809524
current time: 535.8398966789246
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]
self.seed = 2000, seed = 70000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [16.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 6.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 27, 31]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward 6.976190476190477 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 556.4886469841003
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [19, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, 13.857142857142858, 8.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 565.5842616558075
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [19, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, 13.857142857142858, 8.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 573.8002495765686
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [19, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, 13.857142857142858, 8.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 582.0232527256012
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 8.80952380952381, 8.80952380952381, 6.80952380952381, 8.80952380952381, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, True]
all time steps: [19, 21, 21, 21, 21, 21]
all eval rewards: [16.80952380952381, 12.857142857142858, 7.80952380952381, -1, -1]
add if: put into queue and get cost 6 reward 6.976190476190477 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { slower C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 590.6211805343628

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { faster}} ELSE { lane_right} idle} ;; END
[ITER] 18
go to next goal: 30
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END with cost -5.976190476190477
current time steps: 6511  current reward: 6.976190476190477  current eval reward: 4.923809523809524
current time: 593.5248572826385
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [16.81904761904762, 18.80952380952381, 18.80952380952381, 15.80952380952381, -1, 7.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 26, 31]
all eval rewards: [15.80952380952381, -1, 11.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 605.7649676799774
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 31, 31, 31, 26, 25]
all eval rewards: [16.80952380952381, 6.857142857142858, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 615.7380208969116
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 31, 31, 31, 26, 25]
all eval rewards: [16.80952380952381, 6.857142857142858, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 626.2291827201843
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 31, 31, 31, 26, 25]
all eval rewards: [16.80952380952381, 6.857142857142858, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 636.6329083442688
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 18.80952380952381, 18.80952380952381, 15.80952380952381, -1, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [19, 31, 31, 31, 26, 25]
all eval rewards: [15.80952380952381, 5.857142857142858, 7.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { slower C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { slower C }  lane_left} } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 646.8332889080048

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
[ITER] 19
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.942857142857143
current time steps: 7237  current reward: 7.142857142857143  current eval reward: 7.495238095238096
current time: 649.8033878803253

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 652.7299225330353
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle slower C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 660.9458787441254
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle lane_left C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 668.8048403263092

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 669.1038329601288

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 20
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.942857142857143
current time steps: 7529  current reward: 7.142857142857143  current eval reward: 7.495238095238096
current time: 669.402202129364

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 672.2582893371582
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right lane_left C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 680.4755744934082

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 680.7606296539307
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right slower C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 688.6856389045715

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 21
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END with cost -5.942857142857143
current time steps: 7821  current reward: 7.142857142857143  current eval reward: 7.495238095238096
current time: 688.9663896560669

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster lane_right C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 689.180811882019

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 689.4225132465363
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster slower C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 697.9796919822693
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 16.80952380952381, -1, 4.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 31, 31, 31, 27, 26]
all eval rewards: [16.80952380952381, -1, 8.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster lane_left C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { faster}} ELSE { lane_right} idle} ;; END
current time: 705.9764029979706

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster} ELSE { lane_left}} } ELSE { faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 22
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END with cost -5.776190476190477
current time steps: 8113  current reward: 6.976190476190477  current eval reward: 2.6952380952380954
current time: 708.7461905479431
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [16.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 3.8]
all no_fuel: [True, True, True, False, False, False]
all time steps: [31, 31, 31, 21, 24, 27]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]

found but not success in all seeds with reward 12.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 10000
case one applied: put into queue and get cost 6 reward 12.80952380952381 for seed 70000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 723.3858463764191
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 4.8]
all no_fuel: [False, True, True, False, False, False]
all time steps: [19, 31, 31, 21, 24, 25]
all eval rewards: [6.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 11.642857142857144 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { idle C }  lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 733.3436436653137
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 4.8]
all no_fuel: [False, True, True, False, False, False]
all time steps: [19, 31, 31, 21, 24, 25]
all eval rewards: [6.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 11.642857142857144 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_right C }  lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 743.9133067131042
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [8.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 4.8]
all no_fuel: [False, True, True, False, False, False]
all time steps: [19, 31, 31, 21, 24, 25]
all eval rewards: [6.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 11.642857142857144 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { faster C }  lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 753.8705999851227
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 30
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [7.81904761904762, 18.80952380952381, 18.80952380952381, 6.80952380952381, 11.80952380952381, 3.8]
all no_fuel: [False, True, True, False, False, False]
all time steps: [19, 31, 31, 21, 24, 25]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 11.30952380952381 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(left_is_clear_3) { slower C }  lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 763.6922380924225

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 70000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_left} } } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
[ITER] 23
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END with cost -11.609523809523811
current time steps: 8775  current reward: 12.80952380952381  current eval reward: 2.6952380952380954
current time: 766.6142578125
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 11.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [22, 31, 31, 31, 24, 27]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 12.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 774.345611333847
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [6.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 11.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [22, 31, 31, 31, 24, 27]
all eval rewards: [6.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 12.80952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 782.0565214157104
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [15.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 11.80952380952381, 3.8]
all no_fuel: [True, True, True, True, False, False]
all time steps: [31, 31, 31, 31, 24, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]

found but not success in all seeds with reward 14.30952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
switch to robot seed 50000
case 2: put into queue and get cost 6 reward 14.30952380952381 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 798.2240827083588
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [7.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 11.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [22, 31, 31, 31, 24, 27]
all eval rewards: [7.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 7 reward 12.976190476190476 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 805.976808309555
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [16.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, -1, 6.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 27, 31]
all eval rewards: [16.80952380952381, -1, 10.80952380952381, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 10000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 24
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -13.109523809523811
current time steps: 9502  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 818.0051991939545
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [24, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 829.388335943222
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [24, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 840.9070439338684
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [24, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 851.9739363193512

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 855.4833800792694
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [24, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 866.6839573383331
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 878.1675984859467
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 889.948513507843
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 902.2321534156799
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 914.4630460739136
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [10.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 5.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [24, 31, 31, 31, 21, 27]
all eval rewards: [5.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 12.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 925.9935374259949
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 6.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [24, 31, 31, 31, 21, 27]
all eval rewards: [6.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 12.80952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 937.5776665210724
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 6.80952380952381, -1]
all no_fuel: [False, True, True, True, False, False]
all time steps: [24, 31, 31, 31, 21, 27]
all eval rewards: [6.80952380952381, 0.8571428571428571, -1, -1, -1]

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 949.5113468170166
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [10.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 5.80952380952381, 3.8]
all no_fuel: [False, True, True, True, False, False]
all time steps: [24, 31, 31, 31, 21, 27]
all eval rewards: [5.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 12.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
current time: 961.1804935932159
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 973.2387053966522
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 985.4596676826477
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 997.8139138221741
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [25, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 7 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1009.8686800003052

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(front_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(front_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
current time: 1013.738529920578

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(left_is_clear_3) { faster} }} ELSE { lane_right} idle} ;; END
[ITER] 25
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.076190476190476
current time steps: 11878  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1017.8571124076843
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1026.1328523159027

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1026.4041352272034

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1030.8856382369995
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1039.5185039043427
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 26
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.076190476190476
current time steps: 12331  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1048.5187151432037

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1052.75328373909
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1061.4886095523834
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1070.1015968322754
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1078.6155347824097

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 27
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.076190476190476
current time steps: 12784  current reward: 14.476190476190476  current eval reward: 4.495238095238095
current time: 1078.9318208694458
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1087.748377084732
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 1.8571428571428572, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1096.6017050743103

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1096.8949387073517
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1105.1988344192505

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 28
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.076190476190476
current time steps: 13237  current reward: 14.476190476190476  current eval reward: 4.695238095238095
current time: 1109.0536675453186

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1112.765841960907
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 1.8571428571428572, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1120.748289346695

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1121.0511827468872
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1128.7637748718262
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 29
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13690  current reward: 14.642857142857144  current eval reward: 4.523809523809524
current time: 1137.0277955532074

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1140.9187326431274

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1141.2046251296997

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1141.489595413208

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1141.7852170467377

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 30
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13690  current reward: 14.642857142857144  current eval reward: 4.523809523809524
current time: 1142.1069445610046

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1142.4056680202484

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1142.694151878357

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1142.9793305397034

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1143.26291680336

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 31
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13690  current reward: 14.642857142857144  current eval reward: 4.523809523809524
current time: 1146.7006297111511

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1146.9986488819122

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1147.291315317154

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1147.5672209262848

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1151.3208665847778

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 32
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13690  current reward: 14.642857142857144  current eval reward: 4.523809523809524
current time: 1151.616515159607

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1151.8578288555145

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1152.1065483093262

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1152.4248006343842

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1156.1643455028534

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 33
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13690  current reward: 14.642857142857144  current eval reward: 4.695238095238095
current time: 1156.4649698734283

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1156.751710176468

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1160.3029129505157

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1160.5138900279999

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1160.805507183075

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 34
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13690  current reward: 14.642857142857144  current eval reward: 4.695238095238095
current time: 1161.1007165908813

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1161.386738538742

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1161.6799023151398

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1162.0498604774475

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1166.155786037445

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 35
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13690  current reward: 14.642857142857144  current eval reward: 5.095238095238096
current time: 1166.4806323051453

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1170.4233241081238

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1170.6926033496857

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1170.9039895534515

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1171.142816066742

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 36
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -13.042857142857144
current time steps: 13690  current reward: 14.642857142857144  current eval reward: 4.895238095238096
current time: 1171.4697391986847

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1171.7660841941833

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1172.0540733337402

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1176.0642523765564

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1176.352911233902

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 37
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13690  current reward: 14.30952380952381  current eval reward: 4.523809523809524
invalid if branch added and drop for now 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_left C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
[ITER] 38
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13690  current reward: 14.30952380952381  current eval reward: 4.523809523809524
invalid if branch added and drop for now 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { idle C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
[ITER] 39
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13690  current reward: 14.30952380952381  current eval reward: 4.523809523809524
invalid if branch added and drop for now 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { lane_right C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
[ITER] 40
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13690  current reward: 14.30952380952381  current eval reward: 4.523809523809524
invalid if branch added and drop for now 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(front_is_clear_3)) { slower C }  IF(not(left_is_clear_3)) { idle}  faster}} ELSE { lane_right} idle} ;; END
[ITER] 41
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 13690  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1176.652615070343

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1180.5093343257904
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1188.3267712593079
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1196.5567638874054

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left}  faster}} ELSE { lane_right} idle} ;; END
current time: 1200.4328598976135
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 42
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 14143  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1208.2592794895172
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1215.9321763515472
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1223.8142087459564
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1232.049186706543

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1236.0351269245148
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 43
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 14747  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1243.8108439445496
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1251.844373703003
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1259.7505073547363

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1263.5205972194672

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left}  faster}} ELSE { lane_right} idle} ;; END
current time: 1267.260001897812
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 44
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.90952380952381
current time steps: 15200  current reward: 14.30952380952381  current eval reward: 4.495238095238095
current time: 1275.1139345169067

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1278.9906787872314
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1287.1541900634766
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1294.489952802658
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1302.3652584552765
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [26, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 45
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15804  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1310.242916584015

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1310.5218524932861

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1310.8049249649048
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1319.0655524730682

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1322.99005651474

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 46
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 15955  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1323.3086173534393

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1323.61057138443
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1331.9332003593445

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1335.997668504715

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1336.2812163829803

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 47
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 16106  current reward: 14.476190476190476  current eval reward: 4.495238095238095
current time: 1336.5818343162537

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1340.7167723178864

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1341.0374825000763

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1341.3497121334076
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1350.872002363205

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 48
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 16257  current reward: 14.476190476190476  current eval reward: 4.695238095238095
current time: 1351.2401177883148

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1351.544977426529

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1351.8673737049103
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1361.0455317497253

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1365.2132682800293

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 49
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 16408  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1365.5216238498688

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1365.8350603580475

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1366.1630737781525

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1370.5567879676819

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1370.859535932541

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 50
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 16408  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 1371.163554430008

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1371.4169535636902

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1371.7301681041718

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1372.0423851013184

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1376.297859430313

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 51
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 16408  current reward: 14.476190476190476  current eval reward: 4.123809523809524
current time: 1376.5970799922943

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1376.9082655906677

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1377.2309453487396

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1377.5418765544891

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1381.7826759815216

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 52
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.876190476190477
current time steps: 16408  current reward: 14.476190476190476  current eval reward: 4.495238095238095
current time: 1382.0844626426697

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1382.3987905979156

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1382.6974866390228

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1382.990313053131

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1383.3090007305145

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 53
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 16408  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1387.4789712429047
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1396.760994195938
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1405.64998960495
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
case 2: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1418.4092390537262
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1428.122685432434

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 54
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 17012  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1428.4913806915283
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1437.5160365104675

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1437.8380722999573

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1442.400871515274
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1451.160237312317

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left slower}  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 55
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 17314  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1455.404151916504
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1464.390457868576
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1473.3575022220612
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1482.199942111969

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1486.5129661560059
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 56
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 17918  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1495.6766395568848
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1504.6349275112152

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left}  faster}} ELSE { lane_right} idle} ;; END
current time: 1509.252304315567

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1513.9743070602417
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1522.9435679912567
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 57
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 18371  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1531.215830564499
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1540.6520154476166
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1549.8551580905914
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1558.5551924705505
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1567.507272720337

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 58
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 18975  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1572.308764219284
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1581.0767421722412
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
case 2: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1593.8945941925049

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1594.1963987350464
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1603.0547847747803
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 59
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 19579  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1611.9043877124786
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1620.8708019256592

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1621.1803152561188

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower}  faster}} ELSE { lane_right} idle} ;; END
current time: 1625.319016456604
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1634.1120858192444

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 60
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 19881  current reward: 14.30952380952381  current eval reward: 4.495238095238095
current time: 1638.1961069107056
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1646.9012043476105
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1655.6539988517761

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1660.5070354938507
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1669.5131204128265
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right lane_left C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 61
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 20485  current reward: 14.30952380952381  current eval reward: 4.495238095238095
current time: 1678.3123545646667
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1687.546689748764
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1696.6171762943268

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1701.3654170036316
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1710.3645651340485
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 62
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 21089  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1719.3260691165924
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1728.4198060035706

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left}  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left}  faster}} ELSE { lane_right} idle} ;; END
current time: 1732.7531161308289
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1741.8462524414062
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [27, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
expand: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 1750.843091249466

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 63
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 21542  current reward: 14.30952380952381  current eval reward: 4.523809523809524
current time: 1755.3158915042877
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(left_is_clear_3)) { lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1769.1199719905853
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(left_is_clear_3)) { idle C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1782.1443479061127
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(left_is_clear_3)) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1795.5002171993256
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 5.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]

 no fuel with reward 14.642857142857144 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.642857142857144 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1808.549265384674
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(left_is_clear_3)) { slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1821.3475902080536
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(right_is_clear_3) { lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1834.5697350502014
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(right_is_clear_3) { idle C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1847.788488149643
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 8.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1860.9271199703217
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(right_is_clear_3) { slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 1874.529768705368
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [True, True, True, True, True, False]
all time steps: [31, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 14.30952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END
switch to robot seed 60000
case 3: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END
current time: 1893.199404001236
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 6.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.80952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
[ITER] 64
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 23211  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 1906.7943193912506
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
case one applied: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1919.292590379715
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(front_is_clear_3) { idle C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1931.99298620224
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(front_is_clear_3) { lane_right C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1945.3412728309631
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 1.8571428571428572, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(front_is_clear_3) { faster C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1959.498584985733
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(front_is_clear_3) { slower C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1972.7155349254608
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(right_is_clear_3) { idle C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1985.5995247364044
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 8.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(right_is_clear_3) { lane_right C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 1998.754019021988
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(right_is_clear_3) { faster C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2012.1968550682068
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [29, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 7.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(right_is_clear_3) { slower C }  lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2025.3185238838196
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [True, True, True, True, True, False]
all time steps: [31, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 14.30952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
switch to robot seed 60000
case 3: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2042.8884432315826
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [True, True, True, True, True, False]
all time steps: [31, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

found but not success in all seeds with reward 14.30952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
switch to robot seed 60000
case 3: put into queue and get cost 8 reward 14.30952380952381 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
[ITER] 65
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 24872  current reward: 14.30952380952381  current eval reward: 4.723809523809524
current time: 2060.2653636932373
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2073.7241475582123
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2086.9903523921967
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2100.3109045028687
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.642857142857144 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { faster} }}} ELSE { lane_right} idle} ;; END
current time: 2114.424824476242
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2128.1057596206665
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} } }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} } }}} ELSE { lane_right} idle} ;; END
[ITER] 66
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 25802  current reward: 14.30952380952381  current eval reward: 4.123809523809524
current time: 2142.1837985515594

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2146.8350324630737

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { idle C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { idle C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2151.559429883957

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { lane_right C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { lane_right C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2156.0286004543304

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { faster C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { faster C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2160.5086517333984

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { slower C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(right_is_clear_3) { slower C }  lane_left} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2165.6329867839813

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(not(right_is_clear_3)) { lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_left IF(not(right_is_clear_3)) { lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
[ITER] 67
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 25802  current reward: 14.30952380952381  current eval reward: 4.723809523809524
current time: 2170.326611995697
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2183.7593851089478
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { idle C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2196.958382129669
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2210.2461125850677
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.642857142857144 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2223.467390060425
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2237.188978433609
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
[ITER] 68
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END with cost -12.70952380952381
current time steps: 26732  current reward: 14.30952380952381  current eval reward: 4.723809523809524
current time: 2250.8610775470734
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2264.001873731613
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { idle C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2277.3271069526672
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2289.9368546009064
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.642857142857144 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2303.8909187316895
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [3.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
add if: put into queue and get cost 9 reward 14.30952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2317.42094540596
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.80952380952381 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 8 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(not(right_is_clear_3)) { faster} }}} ELSE { lane_right} idle} ;; END
[ITER] 69
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 27662  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 2330.812910079956
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2339.4683763980865
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2348.543982028961
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2357.3583176136017

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2361.9439935684204
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { idle slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 70
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 28266  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 2370.5855815410614
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2379.4581682682037
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2388.7364830970764
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2398.264779806137

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2402.5881299972534
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, -1, 9.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_right slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 71
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 28870  current reward: 14.476190476190476  current eval reward: 4.495238095238095
current time: 2411.6797580718994
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2421.2538437843323
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2430.5070328712463
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2439.4389951229095
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 7.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2448.712425470352

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { idle slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 72
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 29474  current reward: 14.476190476190476  current eval reward: 4.695238095238095
current time: 2453.5501284599304
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2462.0280447006226
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower slower C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2470.715707540512
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower lane_left C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2479.1630115509033
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [12.80952380952381, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 3.8]
all no_fuel: [False, True, True, True, True, False]
all time steps: [28, 31, 31, 31, 31, 27]
all eval rewards: [15.80952380952381, 0.8571428571428571, 8.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower lane_right C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2488.22234582901

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { lane_right slower slower} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 73
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 30078  current reward: 14.476190476190476  current eval reward: 4.523809523809524
current time: 2493.1361536979675

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2493.473978996277

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2493.794128894806

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2494.088877439499

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2494.404884338379

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { slower lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 74
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 30078  current reward: 14.476190476190476  current eval reward: 4.695238095238095
current time: 2498.6836297512054

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster lane_right C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2498.967773914337

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster lane_left C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2499.2667348384857

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster slower C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
current time: 2499.553245306015

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster} ELSE { faster}}} ELSE { lane_right} idle} ;; END
current time: 2503.944232940674

 fail for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster faster C }  faster}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward -1 for seed 50000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { slower lane_right faster C }  faster}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 75
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 30078  current reward: 14.476190476190476  current eval reward: 4.723809523809524
current time: 2504.2638001441956
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2514.871781349182
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_left C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2524.891424179077
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right slower C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2534.3579926490784
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right}  faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right}  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2548.517391204834
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right} ELSE { faster}} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right} ELSE { faster}} }}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 76
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 30853  current reward: 14.476190476190476  current eval reward: 4.723809523809524
current time: 2562.405449151993
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
current time: 2576.0088109970093
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2585.101478099823
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right}  faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right}  faster}}} ELSE { lane_right} idle} ;; END
current time: 2598.311511993408
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2607.4012196063995
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 77
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right C }  faster}}} ELSE { lane_right} idle} ;; END with cost -12.676190476190476
current time steps: 31628  current reward: 14.476190476190476  current eval reward: 4.723809523809524
current time: 2616.569109916687
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
current time: 2630.336953163147
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2639.331201314926
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right}  faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 9 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right}  faster}}} ELSE { lane_right} idle} ;; END
current time: 2652.631831407547
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2661.74107336998
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [4.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 10 reward 14.476190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(right_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right slower C }  faster}}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 78
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END with cost -12.642857142857144
current time steps: 32403  current reward: 14.642857142857144  current eval reward: 4.723809523809524
current time: 2670.5076949596405
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right slower C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2679.3754370212555
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right lane_left C }  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2688.0366880893707
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right}  faster} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right}  faster} }}} ELSE { lane_right} idle} ;; END
current time: 2701.1217391490936
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}} }}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}} }}} ELSE { lane_right} idle} ;; END
current time: 2715.5621016025543
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(front_is_clear_3)) { lane_left lane_left} ELSE { IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right lane_right lane_right C }  faster} }}} ELSE { lane_right} idle} ;; END
------ end current search -------

[ITER] 79
searching base on  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END with cost -12.642857142857144
current time steps: 33178  current reward: 14.642857142857144  current eval reward: 4.723809523809524
current time: 2724.726148366928
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [6.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.80952380952381 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right lane_right C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2733.520198583603
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right}  faster}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right}  faster}}} ELSE { lane_right} idle} ;; END
current time: 2746.8657162189484
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right slower C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2755.9342453479767
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [5.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]
expand: put into queue and get cost 11 reward 14.642857142857144 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right lane_left C }  faster}}} ELSE { lane_right} idle} ;; END
current time: 2764.887165784836
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [7.8, 18.80952380952381, 18.80952380952381, 16.81904761904762, 15.80952380952381, 11.80952380952381]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [15.80952380952381, -1, 10.80952380952381, -1, -1]

 no fuel with reward 14.976190476190476 for 
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
unable to put into queue and get cost 10 reward 14.976190476190476 for seed 60000 for
  WHILE(all_true) { IF(not(right_is_clear_3)) { IF(not(front_is_clear_3)) { lane_right IF(not(front_is_clear_3)) { lane_left} } ELSE { IF(not(left_is_clear_3)) { idle}  IF(not(left_is_clear_3)) { IF(not(front_is_clear_3)) { lane_left lane_left} } ELSE { IF(right_is_clear_3) { lane_right lane_right} ELSE { faster}}}} ELSE { lane_right} idle} ;; END
------ end current search -------

best reward14.976190476190476
 total time steps166897
Total Time Used: 12375.802357912064
Current Reward: 14.976190476190476
for level 0
(' S ; END', 0, 0, 16.142857142857142, 9, 16.142857142857142)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 16.041677396681642, 9, 16.142857142857142)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.872651237663979, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -1.1035392385264977, 1, -1)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, 0.7059845709973118, 1, 0.8095238095238096)
(' WHILE(all_true) { S } ; S ; END', 2, 0, 15.91401884329803, 3, 16.142857142857142)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -1.1035392385264977, 1, -1)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -1.1035392385264977, 1, -1)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.1035392385264977, 1, -1)
----------------------------
for level 3
(' WHILE(all_true) { C } ; S ; END', 3, 0, 14.585819890984117, 1, 14.976190476190476)
(' WHILE(all_true) { WHILE( B ) { S } ; S } ; S ; END', 3, 0, 15.752486557650784, 1, 16.142857142857142)
----------------------------
for level 4
(' WHILE(all_true) { WHILE(front_is_clear_3) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(left_is_clear_3) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(right_is_clear_3) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(all_true) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(not(front_is_clear_3)) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(not(left_is_clear_3)) { S } ; S } ; S ; END', 4, 0, 15.342857142857142, 1, 16.142857142857142)
(' WHILE(all_true) { WHILE(not(right_is_clear_3)) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
----------------------------
Current Step: 9
Current Sketch:  WHILE(all_true) { WHILE(right_is_clear_3) { S } ; S } ; S ; END
search limit iteration: 80
[ITER] 0
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { C } ; C } ;; END with cost 0
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [1, 1, 1, 1, 1, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
current time steps: 5  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 0.2547307014465332
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, False, False, False, False]
all time steps: [11, 11, 9, 3, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { faster} ; C } ;; END
switch to robot seed 70000
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { faster} ; C } ;; END
current time: 5.471221446990967
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [2, 2, 3, 2, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_left} ; C } ;; END
current time: 6.909910440444946
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, True, False]
all time steps: [11, 11, 11, 11, 11, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { slower} ; C } ;; END
switch to robot seed 60000
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { slower} ; C } ;; END
current time: 13.785241842269897
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 5, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { idle} ; C } ;; END
switch to robot seed 10000
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { idle} ; C } ;; END
current time: 19.67195773124695
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [7, 7, 6, 3, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
expand: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; C } ;; END
------ end current search -------

[ITER] 1
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { faster} ; C } ;; END with cost -0.6095238095238096
current time steps: 135  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 22.46672511100769
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 10
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [10, 11, 11, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  faster} ; C } ;; END
current time: 26.39781093597412
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 10
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, -1, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [10, 11, 11, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  faster} ; C } ;; END
unable to put into queue and get cost 2 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  faster} ; C } ;; END
current time: 30.471989393234253
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 10
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [10, 11, 11, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, -1, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_right C }  faster} ; C } ;; END
current time: 34.3449923992157
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 10
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, -1, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [11, 11, 11, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { faster} ; C } ;; END
unable to put into queue and get cost 1 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { faster} ; C } ;; END
current time: 38.18450593948364
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 10
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.8095238095238096, -1, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [10, 11, 11, 3, 3, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  faster} ; C } ;; END
unable to put into queue and get cost 2 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  faster} ; C } ;; END
[ITER] 2
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_left} ; C } ;; END with cost -0.6095238095238096
current time steps: 280  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 42.0471248626709
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, True]
all time steps: [11, 11, 11, 7, 2, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_left} ; C } ;; END
switch to robot seed 10000
case one applied: put into queue and get cost 1 reward 0.8095238095238096 for seed 2000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_left} ; C } ;; END
current time: 46.75285720825195
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [3, 3, 4, 3, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  lane_left} ; C } ;; END
current time: 48.28932523727417
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [3, 3, 4, 3, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  lane_left} ; C } ;; END
current time: 49.74300527572632
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [3, 3, 4, 3, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  lane_left} ; C } ;; END
current time: 51.19352340698242
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 10
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, False, False, False, False]
all time steps: [3, 3, 4, 3, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  lane_left} ; C } ;; END
[ITER] 3
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { slower} ; C } ;; END with cost -0.6095238095238096
current time steps: 378  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 52.820425033569336
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  slower} ; C } ;; END
current time: 58.279266357421875
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  slower} ; C } ;; END
current time: 64.09491014480591
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  slower} ; C } ;; END
current time: 69.86544942855835
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [False, True, True, True, True, True]
all time steps: [2, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  slower} ; C } ;; END
current time: 75.60133624076843
self.seed = 2000, seed = 2000, eval_robot.seed = 60000 current timestep = 10
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [11, 11, 11, 11, 11, 11]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
self.seed = 2000, seed = 60000, eval_robot.seed = 60000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 50000]
all rewards: [0.7999999999999999, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

 no fuel with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { slower} ; C } ;; END
unable to put into queue and get cost 1 reward 0.8095238095238096 for seed 60000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { slower} ; C } ;; END
[ITER] 4
go to next goal: 20
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { idle} ; C } ;; END with cost -0.6095238095238096
current time steps: 913  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 105.04295349121094
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  idle} ; C } ;; END
current time: 110.01839017868042
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, True]
all time steps: [11, 21, 21, 21, 2, 21]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
case one applied: put into queue and get cost 1 reward 0.8095238095238096 for seed 10000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { idle} ; C } ;; END
current time: 116.44240641593933
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_right C }  idle} ; C } ;; END
current time: 121.26615595817566
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  idle} ; C } ;; END
current time: 125.80794978141785
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 2]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]
add if: put into queue and get cost 2 reward 0.8095238095238096 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  idle} ; C } ;; END
[ITER] 5
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; C } ;; END with cost -0.6095238095238096
current time steps: 1267  current reward: 0.8095238095238096  current eval reward: 0.8361904761904763
current time: 130.7357201576233
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 20
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, -1, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [21, 21, 21, 4, 2, 1]
all eval rewards: [-1, -1, -1, -1, -1]

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; lane_right idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; C } ;; END
current time: 137.7258701324463

 complete for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ;} ;; END
attempt to drop:
unable to put into queue and get cost 1 reward -1 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; C } ;; END
current time: 137.8575098514557
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 20
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [14.80952380952381, 14.80952380952381, 10.81904761904762, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, False, False, False, False]
all time steps: [21, 21, 16, 5, 2, 1]
all eval rewards: [-1, -1, -1, -1, -1]

found but not success in all seeds with reward 7.142857142857143 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; faster idle} ;; END
switch to robot seed 70000
expand: put into queue and get cost 3 reward 7.142857142857143 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; faster idle} ;; END
current time: 147.45845198631287
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 20
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, False, True, False, False, False]
all time steps: [15, 18, 21, 8, 2, 1]
all eval rewards: [-1, -1, 0.8095238095238096, -1, 0.8380952380952381]
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; lane_left idle} ;; END
current time: 155.3405201435089
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 20
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [21, 21, 21, 7, 2, 1]
all eval rewards: [0.8095238095238096, -1, -1, -1, -1]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; idle idle} ;; END
switch to robot seed 10000
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; idle idle} ;; END
current time: 164.88821053504944
self.seed = 2000, seed = 2000, eval_robot.seed = 2000 current timestep = 20
all seeds [40000, 70000, 10000, 50000, 60000]
all rewards: [0.8095238095238096, 0.8095238095238096, 0.8190476190476191, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, 0.8571428571428571, 0.8095238095238096, 0.8666666666666667, 0.8380952380952381]

found but not success in all seeds with reward 0.8095238095238096 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; slower idle} ;; END
switch to robot seed 50000
expand: put into queue and get cost 3 reward 0.8095238095238096 for seed 2000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; slower idle} ;; END
------ end current search -------

[ITER] 6
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; faster idle} ;; END with cost -6.542857142857143
current time steps: 1529  current reward: 7.142857142857143  current eval reward: -1.0
current time: 174.18494534492493
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [10.81904761904762, 14.80952380952381, 14.80952380952381, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [17, 21, 21, 5, 2, 1]
all eval rewards: [3.8095238095238098, 6.857142857142858, 2.8095238095238098, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 4 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left C }  faster idle} ;; END
current time: 181.25888323783875
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [11.81904761904762, 14.80952380952381, 14.80952380952381, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [17, 21, 21, 5, 2, 1]
all eval rewards: [4.80952380952381, 7.857142857142858, 3.8095238095238098, -1, 3.8380952380952382]
add if: put into queue and get cost 4 reward 7.30952380952381 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle C }  faster idle} ;; END
current time: 188.5740203857422
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [11.81904761904762, 14.80952380952381, 14.80952380952381, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [17, 21, 21, 5, 2, 1]
all eval rewards: [4.80952380952381, 7.857142857142858, 3.8095238095238098, -1, 3.8380952380952382]
add if: put into queue and get cost 4 reward 7.30952380952381 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right C }  faster idle} ;; END
current time: 195.73990488052368

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; faster idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; faster idle} ;; END
current time: 198.2890658378601
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [10.81904761904762, 14.80952380952381, 14.80952380952381, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [17, 21, 21, 5, 2, 1]
all eval rewards: [3.8095238095238098, 6.857142857142858, 2.8095238095238098, -1, 2.8380952380952382]
add if: put into queue and get cost 4 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { slower C }  faster idle} ;; END
current time: 205.77553820610046

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(front_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 3 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(front_is_clear_3) { faster}  idle} ;; END
[ITER] 7
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle C }  faster idle} ;; END with cost -6.50952380952381
current time steps: 1729  current reward: 7.30952380952381  current eval reward: 3.8628571428571434
current time: 208.50967168807983

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle} ELSE { faster} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle} ELSE { faster} idle} ;; END
current time: 211.31974458694458

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle}  faster idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle}  faster idle} ;; END
current time: 213.91822791099548

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle lane_left C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle C }  faster idle} ;; END
current time: 214.24393892288208

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle lane_right C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle C }  faster idle} ;; END
current time: 214.56698083877563

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle slower C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle C }  faster idle} ;; END
------ end current search -------

[ITER] 8
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right C }  faster idle} ;; END with cost -6.50952380952381
current time steps: 1729  current reward: 7.30952380952381  current eval reward: 3.8628571428571434
current time: 214.87710332870483

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right}  faster idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right}  faster idle} ;; END
current time: 217.69930219650269

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right lane_left C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right C }  faster idle} ;; END
current time: 217.9912462234497

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right lane_right C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right C }  faster idle} ;; END
current time: 218.2891161441803

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right} ELSE { faster} idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right} ELSE { faster} idle} ;; END
current time: 221.01948976516724

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right slower C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right C }  faster idle} ;; END
------ end current search -------

[ITER] 9
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left C }  faster idle} ;; END with cost -6.342857142857143
current time steps: 1729  current reward: 7.142857142857143  current eval reward: 3.8361904761904766
current time: 221.344233751297
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [10.81904761904762, 14.80952380952381, 14.80952380952381, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [18, 21, 21, 5, 2, 1]
all eval rewards: [3.8095238095238098, -1, 2.8095238095238098, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left lane_left C }  faster idle} ;; END
current time: 226.49234986305237
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [10.81904761904762, 14.80952380952381, 14.80952380952381, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [18, 21, 21, 5, 2, 1]
all eval rewards: [3.8095238095238098, 6.857142857142858, 2.8095238095238098, 2.8666666666666667, 2.8380952380952382]
expand: put into queue and get cost 5 reward 7.142857142857143 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left slower C }  faster idle} ;; END
current time: 231.76431393623352

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left lane_right C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left C }  faster idle} ;; END
current time: 232.10758423805237
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [12.81904761904762, 14.80952380952381, 14.80952380952381, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [21, 21, 21, 5, 2, 1]
all eval rewards: [10.80952380952381, -1, 6.80952380952381, 18.866666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.476190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
switch to robot seed 10000
case 2: put into queue and get cost 4 reward 7.476190476190477 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 243.03896236419678
self.seed = 2000, seed = 2000, eval_robot.seed = 70000 current timestep = 20
all seeds [2000, 40000, 10000, 50000, 60000]
all rewards: [11.81904761904762, 14.80952380952381, 14.80952380952381, 0.8095238095238096, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, False, False, False]
all time steps: [21, 21, 21, 5, 2, 1]
all eval rewards: [6.80952380952381, -1, 14.80952380952381, 19.866666666666667, 23.83809523809524]

found but not success in all seeds with reward 7.30952380952381 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left} ELSE { faster} idle} ;; END
switch to robot seed 10000
case 2: put into queue and get cost 4 reward 7.30952380952381 for seed 70000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left} ELSE { faster} idle} ;; END
------ end current search -------

[ITER] 10
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END with cost -6.676190476190477
current time steps: 1929  current reward: 7.476190476190477  current eval reward: 11.664761904761907
current time: 253.3010060787201
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 260.69495701789856
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 268.46766471862793
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 1]
all eval rewards: [10.80952380952381, -1, 6.80952380952381, 18.866666666666667, 22.83809523809524]
case one applied: put into queue and get cost 4 reward 7.476190476190477 for seed 10000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 276.4375009536743
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, -1, -1, 2.8666666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { faster C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 284.42477226257324
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [6, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, -1, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
[ITER] 11
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END with cost -6.676190476190477
current time steps: 2259  current reward: 7.476190476190477  current eval reward: 11.664761904761907
current time: 291.79045391082764

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(left_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(left_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 292.92529702186584
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, 14.857142857142858, 5.80952380952381, 4.866666666666667, 14.838095238095239]
add if: put into queue and get cost 5 reward 7.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(left_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 300.19378185272217

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(left_is_clear_3)) { lane_right C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(left_is_clear_3)) { lane_right C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 301.16418385505676
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [17, 21, 21, 21, 2, 1]
all eval rewards: [10.80952380952381, -1, 6.80952380952381, 18.866666666666667, 22.83809523809524]
case one applied: put into queue and get cost 4 reward 7.976190476190477 for seed 10000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 311.07992720603943
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, 13.857142857142858, 5.80952380952381, 3.8666666666666667, 13.838095238095239]
add if: put into queue and get cost 5 reward 7.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(left_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 318.9759955406189

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(left_is_clear_3)) { lane_left C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(left_is_clear_3)) { lane_left C }  faster idle} ;; END
current time: 319.9616391658783
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 2.8095238095238098, 4.866666666666667, 14.838095238095239]
add if: put into queue and get cost 5 reward 7.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(left_is_clear_3)) { idle C }  faster idle} ;; END
current time: 326.55744194984436

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(left_is_clear_3)) { lane_right C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(left_is_clear_3)) { lane_right C }  faster idle} ;; END
current time: 327.5756640434265
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [7, 21, 21, 21, 2, 1]
all eval rewards: [0.8095238095238096, 6.857142857142858, 2.8095238095238098, 3.8666666666666667, 13.838095238095239]
add if: put into queue and get cost 5 reward 7.476190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(left_is_clear_3)) { slower C }  faster idle} ;; END
current time: 334.2597723007202
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [17, 21, 21, 21, 2, 1]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 3: put into queue and get cost 4 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 12
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END with cost -7.176190476190477
current time steps: 2655  current reward: 7.976190476190477  current eval reward: 11.664761904761907
current time: 343.740709066391
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 10.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [14, 21, 21, 17, 2, 1]
all eval rewards: [3.8095238095238098, 6.857142857142858, 2.8095238095238098, 2.8666666666666667, 2.8380952380952382]
add if: put into queue and get cost 5 reward 7.642857142857143 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 350.45663142204285
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 14.80952380952381, 14.80952380952381, 11.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [14, 21, 21, 17, 2, 1]
all eval rewards: [4.80952380952381, 7.857142857142858, 3.8095238095238098, -1, 3.8380952380952382]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { idle C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 356.98056650161743
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 14.80952380952381, 14.80952380952381, 11.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [14, 21, 21, 17, 2, 1]
all eval rewards: [4.80952380952381, 7.857142857142858, 3.8095238095238098, -1, 3.8380952380952382]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_right C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 364.0245509147644
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 21, 21, 21, 2, 1]
all eval rewards: [10.80952380952381, -1, 6.80952380952381, 18.866666666666667, 22.83809523809524]
case one applied: put into queue and get cost 4 reward 7.976190476190477 for seed 10000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 373.7937741279602
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 10.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, False, False, False]
all time steps: [14, 21, 21, 17, 2, 1]
all eval rewards: [3.8095238095238098, 6.857142857142858, 2.8095238095238098, -1, 2.8380952380952382]
add if: put into queue and get cost 5 reward 7.642857142857143 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { slower C }  IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 380.63828706741333
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [18, 21, 21, 21, 2, 1]
all eval rewards: [3.8095238095238098, -1, 6.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(front_is_clear_3)) { lane_left C }  faster idle} ;; END
current time: 389.711630821228
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [18, 21, 21, 21, 2, 1]
all eval rewards: [3.8095238095238098, 6.857142857142858, 6.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(front_is_clear_3)) { idle C }  faster idle} ;; END
current time: 399.4292109012604

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(front_is_clear_3)) { lane_right C }  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(front_is_clear_3)) { lane_right C }  faster idle} ;; END
current time: 402.0911376476288
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [18, 21, 21, 21, 2, 1]
all eval rewards: [3.8095238095238098, 6.857142857142858, 6.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(not(front_is_clear_3)) { slower C }  faster idle} ;; END
current time: 412.17061614990234
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 2, 1]
all eval rewards: [6.80952380952381, -1, 6.80952380952381, 18.866666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.976190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
case 3: put into queue and get cost 4 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END
[ITER] 13
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -7.176190476190477
current time steps: 3233  current reward: 7.976190476190477  current eval reward: 11.464761904761906
current time: 422.5456910133362
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [18, 21, 21, 21, 2, 1]
all eval rewards: [3.8095238095238098, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { IF(not(front_is_clear_3)) { lane_left C }  faster}  idle} ;; END
current time: 432.39285135269165
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [18, 21, 21, 21, 2, 1]
all eval rewards: [3.8095238095238098, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { IF(not(front_is_clear_3)) { idle C }  faster}  idle} ;; END
current time: 441.99246764183044

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { IF(not(front_is_clear_3)) { lane_right C }  faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { IF(not(front_is_clear_3)) { lane_right C }  faster}  idle} ;; END
current time: 444.89585733413696
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [20, 21, 21, 21, 2, 1]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case one applied: put into queue and get cost 4 reward 7.976190476190477 for seed 10000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 454.74622988700867
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [False, True, True, True, False, False]
all time steps: [18, 21, 21, 21, 2, 1]
all eval rewards: [3.8095238095238098, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { IF(not(front_is_clear_3)) { slower C }  faster}  idle} ;; END
current time: 465.329918384552
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 2, 1]
all eval rewards: [6.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.976190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { IF(front_is_clear_3) { faster} }  idle} ;; END
switch to robot seed 50000
case 3: put into queue and get cost 4 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { IF(front_is_clear_3) { faster} }  idle} ;; END
[ITER] 14
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END with cost -7.176190476190477
current time steps: 3563  current reward: 7.976190476190477  current eval reward: 11.664761904761907
current time: 476.11249709129333

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 479.4672763347626
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 3, 2]
all eval rewards: [3.8095238095238098, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.976190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 489.7570765018463
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 14.80952380952381, 14.80952380952381, 12.81904761904762, 11.80952380952381, -1]
all no_fuel: [True, True, True, True, True, False]
all time steps: [21, 21, 21, 21, 21, 9]
all eval rewards: [10.80952380952381, -1, 6.80952380952381, 18.866666666666667, 22.83809523809524]

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 499.73546981811523
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 3, 2]
all eval rewards: [3.8095238095238098, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.976190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
current time: 509.91468381881714
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 3, 2]
all eval rewards: [3.8095238095238098, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.976190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  faster idle} ;; END
[ITER] 15
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END with cost -7.176190476190477
current time steps: 3860  current reward: 7.976190476190477  current eval reward: 10.864761904761906
current time: 519.9055111408234
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 3.8095238095238098, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 21, 21, 21, 21, 2]
all eval rewards: [6.80952380952381, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END
current time: 527.2979354858398
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 3.8095238095238098, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 21, 21, 21, 21, 2]
all eval rewards: [6.80952380952381, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END
current time: 534.5769057273865
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [11.80952380952381, 14.80952380952381, 14.80952380952381, 12.81904761904762, 3.8095238095238098, -1]
all no_fuel: [True, True, True, True, True, False]
all time steps: [21, 21, 21, 21, 21, 9]
all eval rewards: [6.80952380952381, -1, 6.80952380952381, 18.866666666666667, 22.83809523809524]

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END
current time: 544.5279309749603
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 3.8095238095238098, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 21, 21, 21, 21, 2]
all eval rewards: [6.80952380952381, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END
current time: 551.6901693344116
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 20
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [0.8095238095238096, 14.80952380952381, 14.80952380952381, 12.81904761904762, 3.8095238095238098, 0.7999999999999999]
all no_fuel: [False, True, True, True, True, False]
all time steps: [3, 21, 21, 21, 21, 2]
all eval rewards: [6.80952380952381, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(front_is_clear_3) { faster}  idle} ;; END
[ITER] 16
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -7.176190476190477
current time steps: 4297  current reward: 7.976190476190477  current eval reward: 11.464761904761906
current time: 558.9220991134644

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { lane_left C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 562.2540593147278
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 3, 2]
all eval rewards: [3.8095238095238098, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.976190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { idle C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 572.4844431877136
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [4.80952380952381, 14.80952380952381, 14.80952380952381, 12.81904761904762, 11.80952380952381, 9.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [21, 21, 21, 21, 21, 21]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
self.seed = 2000, seed = 10000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [10.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 13.80952380952381, 15.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 23, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

found but not success in all seeds with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
case one applied: put into queue and get cost 4 reward 11.476190476190476 for seed 10000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 599.5141441822052
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 3, 2]
all eval rewards: [3.8095238095238098, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.976190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { faster C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 609.9269187450409
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 20
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [3.8095238095238098, 14.80952380952381, 14.80952380952381, 12.81904761904762, 0.8095238095238096, 0.7999999999999999]
all no_fuel: [True, True, True, True, False, False]
all time steps: [21, 21, 21, 21, 3, 2]
all eval rewards: [3.8095238095238098, 0.8571428571428571, 0.8095238095238096, 2.8666666666666667, 22.83809523809524]

found but not success in all seeds with reward 7.976190476190477 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 7.976190476190477 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { IF(not(left_is_clear_3)) { slower C }  lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 17
go to next goal: 30
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -10.676190476190476
current time steps: 4753  current reward: 11.476190476190476  current eval reward: 11.464761904761906
current time: 620.6470456123352
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [10.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, -1, 15.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 25, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 633.6597950458527
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [10.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 14.80952380952381, 15.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 24, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]

found but not success in all seeds with reward 18.80952380952381 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 18.80952380952381 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 651.3418972492218
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [10.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 14.80952380952381, 15.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 24, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

found but not success in all seeds with reward 18.80952380952381 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 18.80952380952381 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 668.6750836372375
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [10.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 14.80952380952381, 15.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 24, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]

found but not success in all seeds with reward 18.80952380952381 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 18.80952380952381 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 685.2120933532715
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [10.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 13.80952380952381, 15.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 24, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]

found but not success in all seeds with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
switch to robot seed 50000
add if: put into queue and get cost 5 reward 18.642857142857142 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 702.588011264801
self.seed = 2000, seed = 2000, eval_robot.seed = 10000 current timestep = 30
all seeds [2000, 40000, 70000, 50000, 60000]
all rewards: [10.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, -1, 15.8]
all no_fuel: [True, True, True, True, False, True]
all time steps: [31, 31, 31, 31, 25, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_left} }  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 4 reward -1 for seed 10000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(left_is_clear_3) { lane_left} }  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 18
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.80952380952381
current time steps: 5643  current reward: 18.80952380952381  current eval reward: 13.036190476190475
current time: 716.1079711914062

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 716.4323663711548

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 720.2873365879059

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 724.3034083843231

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 724.6736736297607
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [14.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 6 reward 18.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 19
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.80952380952381
current time steps: 5798  current reward: 18.80952380952381  current eval reward: 11.464761904761906
current time: 733.889142036438

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 734.1584491729736

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 737.860072851181

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 741.8800265789032

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 742.2031581401825
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [14.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 6 reward 18.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 20
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.80952380952381
current time steps: 5953  current reward: 18.80952380952381  current eval reward: 13.036190476190475
current time: 751.4358189105988

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 751.7881350517273

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 755.4847927093506

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 755.8172211647034

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 759.4107036590576
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [14.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 6 reward 18.80952380952381 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 21
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.642857142857142
current time steps: 6108  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 768.7347285747528
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 6 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 777.9533832073212
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 6 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 787.1606459617615
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [25, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 6 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 796.1668765544891
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 809.9608342647552

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 5 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 22
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.60952380952381
current time steps: 6728  current reward: 18.80952380952381  current eval reward: 13.036190476190475
current time: 814.1733794212341

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 818.1419463157654

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 818.4372856616974

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 818.7632794380188

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 819.0745663642883

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { idle slower}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 23
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.60952380952381
current time steps: 6728  current reward: 18.80952380952381  current eval reward: 11.464761904761906
current time: 822.6415359973907

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 826.6746582984924

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 826.9725847244263

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 827.2623047828674

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 831.1985421180725

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 24
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.60952380952381
current time steps: 6728  current reward: 18.80952380952381  current eval reward: 13.036190476190475
current time: 831.5288963317871

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 835.6221334934235

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 835.9197392463684

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 839.9186573028564

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 840.2262992858887

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { faster slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 25
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.442857142857143
current time steps: 6728  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 840.5264472961426
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 849.2877831459045
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 858.4065103530884
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 6 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 871.2603554725647
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 879.9305372238159
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 26
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.442857142857143
current time steps: 7503  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 888.869598865509
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 897.8144860267639
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 907.228716135025

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 911.3259463310242
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 6 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 925.0753509998322
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 27
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.442857142857143
current time steps: 8123  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 934.1505615711212
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 943.18669962883

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right}  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 947.1294467449188
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 956.402619600296
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 965.3443322181702
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 6 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 28
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.442857142857143
current time steps: 8743  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 978.0204646587372
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 991.2895047664642
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1005.3084456920624
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1018.7942190170288
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1032.2444415092468
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1045.2629005908966
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1058.2649066448212
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1071.1431221961975
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1084.2693655490875
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1097.429526567459

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1102.1029510498047

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 29
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.442857142857143
current time steps: 10138  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1106.8295953273773
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1119.7751269340515

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1124.5164642333984
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1137.6724727153778
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1150.8155779838562
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1164.1905045509338
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1177.654957294464
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1190.28231549263
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1202.9687864780426
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1216.5404365062714

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { idle} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { idle} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1220.9746005535126

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { idle} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { idle} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 30
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.442857142857143
current time steps: 11378  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1225.4068031311035
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1238.4296061992645
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1251.2501277923584

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1255.6718752384186
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1268.5575685501099
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1281.6046652793884
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1294.1634702682495
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1307.040913105011
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1320.9910163879395
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1334.3699808120728

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { lane_right} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { lane_right} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1338.595373392105

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { lane_right} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 6 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { lane_right} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 31
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 12618  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 1343.0344007015228
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1351.8415949344635
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [26, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1364.6623220443726
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1373.5057108402252
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1383.0175051689148
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 32
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 13393  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 1392.2411336898804
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1401.1459362506866
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1410.3479614257812
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1419.4125800132751
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1432.3263816833496
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 33
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 14168  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 1441.6595277786255
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1450.6499290466309
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1463.9943628311157
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1473.4620823860168
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1482.6738469600677
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 34
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 14943  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1491.4568207263947
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1500.81836271286
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1510.5125517845154
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1523.4880690574646
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1532.1804358959198
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 35
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 15718  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 1541.2830979824066

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1545.4856340885162

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1545.7857871055603

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1546.0831880569458

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1546.3861210346222
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 36
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 15873  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 1555.4426970481873

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1555.7564413547516
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1564.7185759544373

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1565.0184016227722

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1569.3525195121765

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 37
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 16028  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 1569.6456484794617
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1578.8467950820923
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1588.0508062839508
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1596.9993994235992
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1606.2604598999023
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 38
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 16803  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1619.6175379753113
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1629.2808918952942
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1639.0677292346954
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1648.1086900234222
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1657.418041229248
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 39
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 17578  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1670.5324816703796

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1670.8417747020721

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1675.1064882278442
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1684.4729907512665

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1684.773086309433

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 40
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 17733  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1685.0745596885681

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1685.3869633674622

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1689.5728831291199
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1698.387416601181

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1698.657968044281

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 41
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 17888  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1698.8942131996155
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1707.9540870189667
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left slower C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1717.358351945877
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1731.1173117160797
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1740.8707978725433
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 42
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 18663  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1750.0137016773224
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1763.160166501999
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1772.9054734706879
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1786.2925670146942
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1795.3192467689514
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 43
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 19438  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1804.1749670505524
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1813.2308983802795
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1821.8098595142365
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1830.7643127441406
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1844.1513152122498
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 44
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 20213  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 1858.3376607894897

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1863.0879075527191
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1872.1552522182465
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1881.7296273708344

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1882.045773267746
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 45
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 20678  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 1895.510801076889
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left slower C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1904.5080242156982
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1913.0453939437866
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1922.403701543808
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1931.7476387023926
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 46
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 21453  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 1944.912183046341
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1958.6886286735535
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1968.177366733551
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1982.0730664730072
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 1991.4772973060608
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 47
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 22228  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2000.719901561737
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2014.4032282829285
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2023.202567577362
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2032.3224918842316
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2041.4876599311829
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 48
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 23003  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 2054.6400170326233
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2064.5642704963684

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2069.3989436626434

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2069.702978849411
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 7.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2078.7354924678802
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 49
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 23468  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2091.8693656921387
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2100.8608112335205
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2109.7715129852295
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2119.4136106967926
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2132.438760280609
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left idle C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 50
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 24243  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2141.5947136878967
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2150.676476240158
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right idle C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2159.560823917389
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2168.651191711426
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2177.676023006439

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 51
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 24863  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2182.626720905304

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2182.9207928180695

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster}  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster}  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2187.1215138435364
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2196.234513282776

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2196.5189125537872

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 52
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 25018  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2200.6454315185547

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2205.4269008636475
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2214.5576016902924
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2223.489159345627
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower idle C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2232.653392314911
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 53
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 25638  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 2241.6462869644165
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2250.634349346161
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2259.7418677806854
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2269.093317270279
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2278.4609005451202
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 54
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 26413  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2291.5445675849915
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2300.689057826996
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2309.8674654960632

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2314.5865914821625
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2323.4853036403656
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right idle C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 55
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 27033  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 2332.664277791977

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2337.143616914749
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2345.9857971668243

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2346.3100893497467

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster}  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster}  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2351.2873406410217

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 56
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 27188  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 2351.6028265953064
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower idle C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2360.8905503749847
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower lane_left C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2369.8177461624146
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower lane_right C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2379.394344329834
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower slower C }  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2388.8783173561096

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 57
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 27808  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2393.555389881134
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2402.95703458786
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2416.249164581299
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left lane_right C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2425.2246890068054
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2434.2806828022003
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 58
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 28583  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2443.6355934143066
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle lane_right C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2452.548205137253
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2461.642847776413
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2471.3997151851654
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2480.5614805221558

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 59
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 29203  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2485.2868826389313

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2489.804962158203

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2490.1108145713806

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2490.4345903396606

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster}  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster}  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2494.998025417328
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 60
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 29358  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2504.2615823745728
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2513.5822870731354

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2518.5725259780884
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2527.5838499069214
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower lane_right C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2536.5712728500366
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 61
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 29978  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 2546.640316724777
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2555.779711484909
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2565.3387439250946
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_right C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2574.535970211029
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2583.8506495952606
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 62
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 30753  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 2596.6398684978485
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2605.8879058361053
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_right C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2614.6837680339813
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2623.8088150024414
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2632.8961725234985

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 63
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 31373  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 2637.9945549964905

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2642.3326869010925

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2642.645255804062
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2651.908390045166

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster}  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster}  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2656.482823610306

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 64
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 31528  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 2656.7037057876587
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower idle C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2666.0618176460266

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2670.5552413463593
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower lane_left C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2679.593916654587
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower lane_right C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2688.7353909015656
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { slower slower C }  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

[ITER] 65
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 32148  current reward: 18.642857142857142  current eval reward: 14.636190476190475
current time: 2697.7215869426727
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster}  idle} ;; END
current time: 2711.0833587646484
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster}  idle} ;; END
current time: 2724.2251749038696
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster}  idle} ;; END
current time: 2737.267720937729
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2750.687341928482
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster}  idle} ;; END
current time: 2764.2978229522705
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
[ITER] 66
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 33078  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2777.8866288661957
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2791.3843829631805
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle C }  slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2805.0682275295258
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right C }  slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2818.519124984741
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2831.783833026886
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2844.615025997162
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2858.0742869377136
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2871.054402589798
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2884.0128362178802
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2897.6973643302917
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower}  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower}  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2911.1071853637695
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower}  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower}  idle} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2924.37676858902
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower idle} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower idle} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2938.0718660354614
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower idle} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower idle} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 67
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 35093  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 2951.914009809494
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2964.938848257065
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle C }  slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2978.517411470413
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right C }  slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 2991.6375041007996
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3004.999909877777
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3018.4423553943634
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3031.9168622493744
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3045.061168909073
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3058.4619023799896
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3071.8279213905334
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3085.2773003578186
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower}  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3098.928317785263
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3112.1609086990356
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 68
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 37108  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 3125.849664211273
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3138.98255944252
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle C }  slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3152.326074361801
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right C }  slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3166.1981117725372
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3179.5246152877808
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3193.038504600525
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left C }  slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3206.3503053188324
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { idle C }  slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3219.439952850342
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_right C }  slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3231.9579870700836
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { faster C }  slower lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3245.3907668590546
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower}  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower}  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3258.673565387726
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower}  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower}  lane_right} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3271.893931388855
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower lane_right} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { slower lane_right} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3284.642294406891
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower lane_right} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(left_is_clear_3)) { slower lane_right} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 69
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 39123  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 3297.8503510951996

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3302.358340024948
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case one applied: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3315.3818039894104
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_right C }  idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3328.3246772289276
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3341.4313435554504
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower C }  idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3354.4841227531433
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { idle slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { idle slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 70
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 39898  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 3367.743228673935

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left C }  lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3372.362446308136
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { idle C }  lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3385.1102826595306
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case one applied: put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3397.99383687973
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { faster C }  lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3410.7716891765594
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { slower C }  lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3424.2514383792877
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { lane_right slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(not(front_is_clear_3)) { lane_right slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 71
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 40673  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 3437.3393321037292
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster}  idle} ;; END
current time: 3450.492036819458
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster}  idle} ;; END
current time: 3463.219703435898
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster}  idle} ;; END
current time: 3476.6735470294952

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3481.3048162460327
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster}  idle} ;; END
current time: 3495.034487724304
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
[ITER] 72
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 41448  current reward: 18.642857142857142  current eval reward: 14.636190476190475
current time: 3508.3696835041046
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster}  idle} ;; END
current time: 3521.6270592212677
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster}  idle} ;; END
current time: 3535.2339355945587
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster}  idle} ;; END
current time: 3548.694755792618

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3553.4609212875366
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [30, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster}  idle} ;; END
current time: 3567.026618242264
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { slower}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
[ITER] 73
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 42223  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 3580.69713640213
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster}  idle} ;; END
current time: 3594.278244972229
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster}  idle} ;; END
current time: 3607.513337612152
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster}  idle} ;; END
current time: 3620.4099175930023

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3624.6475415229797
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster}  idle} ;; END
current time: 3638.290787935257
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
[ITER] 74
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 42998  current reward: 18.642857142857142  current eval reward: 14.636190476190475
current time: 3651.8745164871216
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster}  idle} ;; END
current time: 3665.115862131119
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster}  idle} ;; END
current time: 3678.99471783638
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster}  idle} ;; END
current time: 3692.218419790268

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3696.6834695339203
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster}  idle} ;; END
current time: 3710.168313264847
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { idle}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
[ITER] 75
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 43773  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 3723.614563703537
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster}  idle} ;; END
current time: 3736.5403966903687
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster}  idle} ;; END
current time: 3749.4176449775696
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster}  idle} ;; END
current time: 3762.583671808243

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3766.9289107322693
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster}  idle} ;; END
current time: 3779.944147825241
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(front_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
[ITER] 76
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 44548  current reward: 18.642857142857142  current eval reward: 14.636190476190475
current time: 3793.518479824066
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_left C }  faster}  idle} ;; END
current time: 3807.2971506118774
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { idle C }  faster}  idle} ;; END
current time: 3820.9382898807526
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { lane_right C }  faster}  idle} ;; END
current time: 3833.6149141788483

 fail for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward -1 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3838.0949454307556
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [29, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
add if: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(right_is_clear_3) { slower C }  faster}  idle} ;; END
current time: 3851.4195024967194
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 14.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower IF(left_is_clear_3) { lane_left} ELSE { lane_right}} ELSE { lane_left}}  IF(left_is_clear_3) { IF(not(right_is_clear_3)) { faster} }  idle} ;; END
[ITER] 77
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 45323  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 3864.6856055259705
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(front_is_clear_3) { lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(front_is_clear_3) { lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3878.0008866786957
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(front_is_clear_3) { idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(front_is_clear_3) { idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3891.6321489810944
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(front_is_clear_3) { lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(front_is_clear_3) { lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3905.1143686771393
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(front_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(front_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3918.7784430980682
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3932.091817378998
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(not(front_is_clear_3)) { slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower idle IF(not(front_is_clear_3)) { slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 78
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.242857142857144
current time steps: 46253  current reward: 18.642857142857142  current eval reward: 11.464761904761906
current time: 3945.6393666267395
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(front_is_clear_3) { lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(front_is_clear_3) { lane_left C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3959.073904275894
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(front_is_clear_3) { idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(front_is_clear_3) { idle C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3971.923868894577
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(front_is_clear_3) { lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(front_is_clear_3) { lane_right C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3984.6327369213104
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(front_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(front_is_clear_3) { faster C }  slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 3997.37491607666
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right slower} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 4010.5378518104553
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [True, True, True, True, True, True]
all time steps: [31, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, -1, 5.80952380952381, 18.866666666666667, 22.83809523809524]

 no fuel with reward 18.642857142857142 for 
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(not(front_is_clear_3)) { slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
unable to put into queue and get cost 7 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower lane_right IF(not(front_is_clear_3)) { slower} } ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
[ITER] 79
searching base on  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END with cost -17.04285714285714
current time steps: 47183  current reward: 18.642857142857142  current eval reward: 13.036190476190475
current time: 4023.791605234146
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 9 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left lane_left slower C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 4032.67268037796
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 9 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left lane_left lane_left C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 4041.667448282242
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 9 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left lane_left idle C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 4050.4880344867706
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [28, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 6.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
expand: put into queue and get cost 9 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left lane_left lane_right C }  lane_left}  IF(left_is_clear_3) { faster}  idle} ;; END
current time: 4058.96271944046
self.seed = 2000, seed = 2000, eval_robot.seed = 50000 current timestep = 30
all seeds [2000, 40000, 70000, 10000, 60000]
all rewards: [13.80952380952381, 24.80952380952381, 24.80952380952381, 21.81904761904762, 10.80952380952381, 15.8]
all no_fuel: [False, True, True, True, True, True]
all time steps: [27, 31, 31, 31, 31, 31]
all eval rewards: [10.80952380952381, 12.857142857142858, 5.80952380952381, 18.866666666666667, 22.83809523809524]
case 2: put into queue and get cost 8 reward 18.642857142857142 for seed 50000 for
  WHILE(all_true) { WHILE(right_is_clear_3) { lane_right} ; IF(not(front_is_clear_3)) { IF(not(left_is_clear_3)) { slower slower lane_left lane_left} ELSE { lane_left}}  IF(left_is_clear_3) { faster}  idle} ;; END
------ end current search -------

best reward18.80952380952381
 total time steps214080
Total Time Used: 16450.00811314583
Current Reward: 18.80952380952381
for level 0
(' S ; END', 0, 0, 18.80952380952381, 10, 18.80952380952381)
----------------------------
for level 1
(' WHILE( B ) { S } ; S ; END', 1, 0, 18.70549432776757, 10, 18.80952380952381)
----------------------------
for level 2
(' WHILE(front_is_clear_3) { S } ; S ; END', 2, 0, 2.8796759020675062, 1, 2.9761904761904767)
(' WHILE(left_is_clear_3) { S } ; S ; END', 2, 0, -1.0965145741229705, 1, -1)
(' WHILE(right_is_clear_3) { S } ; S ; END', 2, 0, 0.7130092354008389, 1, 0.8095238095238096)
(' WHILE(all_true) { S } ; S ; END', 2, 0, 18.561266522462326, 4, 18.80952380952381)
(' WHILE(not(front_is_clear_3)) { S } ; S ; END', 2, 0, -1.0965145741229705, 1, -1)
(' WHILE(not(left_is_clear_3)) { S } ; S ; END', 2, 0, -1.0965145741229705, 1, -1)
(' WHILE(not(right_is_clear_3)) { S } ; S ; END', 2, 0, -1.0965145741229705, 1, -1)
----------------------------
for level 3
(' WHILE(all_true) { C } ; S ; END', 3, 0, 14.61167248069357, 1, 14.976190476190476)
(' WHILE(all_true) { WHILE( B ) { S } ; S } ; S ; END', 3, 0, 18.376034731755347, 2, 18.80952380952381)
----------------------------
for level 4
(' WHILE(all_true) { WHILE(front_is_clear_3) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(left_is_clear_3) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(right_is_clear_3) { S } ; S } ; S ; END', 4, 0, 18.176034731755347, 1, 18.80952380952381)
(' WHILE(all_true) { WHILE(all_true) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(not(front_is_clear_3)) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
(' WHILE(all_true) { WHILE(not(left_is_clear_3)) { S } ; S } ; S ; END', 4, 0, 15.509368065088681, 1, 16.142857142857142)
(' WHILE(all_true) { WHILE(not(right_is_clear_3)) { S } ; S } ; S ; END', 4, 0, -inf, 0, -inf)
----------------------------
Total Step Used: 10
Total Time Used: 16450.010907649994
best reward: 18.80952380952381
